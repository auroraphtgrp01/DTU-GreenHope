/**
 * This file is part of the NocoBase (R) project.
 * Copyright (c) 2020-2024 NocoBase Co., Ltd.
 * Authors: NocoBase Team.
 *
 * This project is dual-licensed under AGPL-3.0 and NocoBase Commercial License.
 * For more information, please refer to: https://www.nocobase.com/agreement.
 */

(function(n,o){typeof exports=="object"&&typeof module!="undefined"?o(exports,require("@nocobase/client"),require("react"),require("@formily/react"),require("react/jsx-runtime"),require("@ant-design/icons"),require("antd")):typeof define=="function"&&define.amd?define(["exports","@nocobase/client","react","@formily/react","react/jsx-runtime","@ant-design/icons","antd"],o):(n=typeof globalThis!="undefined"?globalThis:n||self,o(n["@dtu-olp-2024/progress-nocobase"]={},n["@nocobase/client"],n.react,n["@formily/react"],n.jsxRuntime,n["@ant-design/icons"],n.antd))})(this,function(n,o,s,g,l,y,x){"use strict";var E=Object.defineProperty,G=Object.defineProperties;var L=Object.getOwnPropertyDescriptors;var B=Object.getOwnPropertySymbols;var V=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable;var N=(n,o,s)=>o in n?E(n,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):n[o]=s,p=(n,o)=>{for(var s in o||(o={}))V.call(o,s)&&N(n,s,o[s]);if(B)for(var s of B(o))z.call(o,s)&&N(n,s,o[s]);return n},m=(n,o)=>G(n,L(o));var b=(n,o,s)=>new Promise((g,l)=>{var y=a=>{try{d(s.next(a))}catch(f){l(f)}},x=a=>{try{d(s.throw(a))}catch(f){l(f)}},d=a=>a.done?g(a.value):Promise.resolve(a.value).then(y,x);d((s=s.apply(n,o)).next())});const d="Progress",a=d.toLowerCase(),I={name:"@dtu-olp-2024/progress-nocobase",version:"1.0.1",license:"GPL-3.0",main:"dist/server/index.js",peerDependencies:{"@nocobase/client":"1.x","@nocobase/server":"1.x","@nocobase/test":"1.x"},publishConfig:{access:"public",registry:"https://registry.npmjs.org/"},repository:{type:"git",url:"git+https://github.com/olp-dtu-2024/DTU-GreenHope"},displayName:"Progress Bar Plugin - DTU GreenHope 2024",description:"A NocoBase plugin for progress bar visualization, supporting progress tracking, percentage completion, and task management. Built for the DTU GreenHope project.",keywords:["plugin","nocobase","dtu","greenhope","progress-bar"],files:["dist","dist/node_modules","README.md","LICENSE","package.json","server.js","server.d.ts","client.js","client.d.ts","CHANGELOG.md"]};function S(){const t=o.useApp();return e=>t.i18n.t(e,{ns:[I.name,"client"]})}const j={name:"height",type:"actionModal",useComponentProps(){var i,c;const t=g.useFieldSchema(),{deepMerge:e}=o.useDesignable(),r=S();return{title:r("Edit Height"),schema:{type:"object",title:r("Edit Height"),properties:{height:{title:r("Height"),type:"number",default:(c=(i=t["x-decorator-props"])==null?void 0:i[a])==null?void 0:c.height,"x-decorator":"FormItem","x-component":"InputNumber"}}},onSubmit({height:u}){var h;e({"x-uid":t["x-uid"],"x-decorator-props":m(p({},t["x-decorator-props"]),{[a]:m(p({},(h=t["x-decorator-props"])==null?void 0:h[a]),{height:u})})})}}}},P=new o.SchemaSettings({name:`blockSettings:${a}`,items:[{name:o.SchemaSettingsDataScope.name,Component:o.SchemaSettingsDataScope,useComponentProps:()=>{var u,h;const t=o.useCollection(),e=o.useAPIClient(),r=g.useFieldSchema(),i=((h=(u=r==null?void 0:r["x-decorator-props"])==null?void 0:u.params)==null?void 0:h.filter)||{},{deepMerge:c}=o.useDesignable();return{collectionName:t.name,defaultFilter:i,onSubmit:v=>b(this,null,function*(){const O={"x-uid":r["x-uid"],"x-decorator-props":m(p({},r["x-decorator-props"]),{params:{filter:p(p({},i),v.filter)}})};yield e.request({url:"/uiSchemas:patch",method:"POST",data:O}).then(A=>{A.status===200&&c({"x-decorator-props":m(p({},r["x-decorator-props"]),{params:{filter:p(p({},i),v.filter)}})})})})}}},{name:"editBlockTitle",Component:o.SchemaSettingsBlockTitleItem},{type:"remove",name:"remove",componentProps:{removeParentsIfNoChildren:!0,breakRemoveOn:{"x-component":"Grid"}}},j]});function T(t){var c;const{filter:e,parseVariableLoading:r}=o.useParsedFilter({filterOption:(c=t.params)==null?void 0:c.filter});return{params:s.useMemo(()=>{var u;return m(p({},t.params),{appends:((u=t.params)==null?void 0:u.appends)||[],filter:e})},[JSON.stringify(e),t.params]),parseVariableLoading:r}}function M(t){const{params:e,parseVariableLoading:r}=T(t);let i;return t.association&&(i=o.useParentRecordCommon(t.association)),{params:e,parentRecord:i,parseVariableLoading:r}}function w(){var e,r;return(r=(e=g.useFieldSchema().parent)==null?void 0:e["x-decorator-props"])==null?void 0:r[a]}const F=({dataSource:t="main",collection:e})=>({type:"void","x-decorator":"DataBlockProvider","x-component":"CardItem","x-settings":P.name,"x-toolbar":"BlockSchemaToolbar","x-decorator-props":{[a]:{},rowKey:"id",runWhenParamsChanged:!0,readPretty:!0,dataSource:t,collection:e,action:"list"},"x-use-decorator-props":"useBlockScopeDecoratorProps",properties:{[a]:{type:"void","x-component":d,"x-use-component-props":"useProgressBlockProps"}}}),C={type:"item",name:a,Component:"DataBlockInitializer",icon:"PlayCircleOutlined",useComponentProps(){const{insert:t}=o.useSchemaInitializer();return{title:S()(d),icon:l.jsx(y.CodeOutlined,{}),componentType:d,useTranslationHooks:S,onCreateBlockSchema({item:r}){t(F({dataSource:r.dataSource,collection:r.name}))}}}};function k(t){return new Intl.NumberFormat("vi-VN",{style:"currency",currency:"VND",minimumFractionDigits:0,maximumFractionDigits:0}).format(t)}const q=()=>{const{data:t}=o.useDataBlockRequest();return{target:(t==null?void 0:t.data)&&(()=>{const e=(t==null?void 0:t.data)[0],r=(e==null?void 0:e.target_amount)||(e==null?void 0:e.targetAmount)||(e==null?void 0:e.target)||(e==null?void 0:e.targetBalance);return r>0?r:1})(),current:(t==null?void 0:t.data)&&(()=>{const e=(t==null?void 0:t.data)[0],r=(e==null?void 0:e.current_amount)||(e==null?void 0:e.currentAmount)||(e==null?void 0:e.current)||(e==null?void 0:e.currentBalance);return r>0?r:0})()}},H=o.withDynamicSchemaProps(t=>{const{height:e}=t,{target:r,current:i}=q(),c=s.useMemo(()=>{if(!r||r===0)return 0;const u=i/r*100;return Math.min(Math.max(0,Math.ceil(u)),100)},[r,i]);return l.jsx(x.Progress,{percent:c,format:()=>l.jsxs("div",{style:{position:"absolute",top:-24,left:0,right:0,display:"flex",justifyContent:"space-between",fontSize:"14px"},children:[l.jsx("b",{children:k(i)}),l.jsxs("b",{children:[c,"% cá»§a ",k(r)]})]}),strokeColor:"#20d043",trailColor:"#e0ece2",style:{overflow:"visible",display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",height:e||12,position:"relative",borderRadius:6,marginTop:24}})});class D extends o.Plugin{load(){return b(this,null,function*(){this.app.addScopes({useBlockScopeDecoratorProps:M,useProgressBlockProps:w}),this.app.addComponents({Progress:H}),this.app.schemaSettingsManager.add(P),this.app.schemaInitializerManager.addItem("page:addBlock",`dataBlocks.${C.name}`,C)})}}n.ProgressNocobaseClient=D,n.default=D,Object.defineProperties(n,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
