(function(){var t={8693:function(t,e,r){const o=r(2520);const s=r(6662);const n=r(5233);const i=r(1018);const a=r(5516);const c=r(1208);const u=r(5834);const p=r(3331);const d=r(6149);const l=r(8164);const f=r(1867);const{isRebalancing:h,isKafkaJSError:m,...g}=r(1331);const{LEVELS:I}=r(762);t.exports={Kafka:o,PartitionAssigners:s,AssignerProtocol:n,Partitioners:i,logLevel:I,CompressionTypes:a.Types,CompressionCodecs:a.Codecs,ConfigResourceTypes:c,AclResourceTypes:p,AclOperationTypes:d,AclPermissionTypes:l,ResourcePatternTypes:f,ConfigSource:u,...g}},8362:function(t,e,r){const o=r(4091);const s=r(4569);const n=r(7498);const i=r(1884);const a=r(547);const{events:c,wrap:u,unwrap:p}=r(7112);const{LEVELS:d}=r(762);const{KafkaJSNonRetriableError:l,KafkaJSDeleteGroupsError:f,KafkaJSBrokerNotFound:h,KafkaJSDeleteTopicRecordsError:m,KafkaJSAggregateError:g}=r(1331);const{staleMetadata:I}=r(1133);const y=r(1208);const w=r(3331);const T=r(6149);const E=r(8164);const S=r(1867);const{EARLIEST_OFFSET:b,LATEST_OFFSET:A}=r(8691);const{CONNECT:O,DISCONNECT:C}=c;const N=-1;const{values:R,keys:k,entries:x}=Object;const v=R(c);const _=k(c).map((t=>`admin.events.${t}`)).join(", ");const retryOnLeaderNotAvailable=(t,e={})=>{const callback=async()=>{try{return await t()}catch(t){if(t.type!=="LEADER_NOT_AVAILABLE"){throw t}return false}};return s(callback,e)};const isConsumerGroupRunning=t=>["Empty","Dead"].includes(t.state);const findTopicPartitions=async(t,e)=>{await t.addTargetTopic(e);await t.refreshMetadataIfNecessary();return t.findTopicPartitionMetadata(e).map((({partitionId:t})=>t)).sort()};const indexByPartition=t=>t.reduce(((t,{partition:e,...r})=>Object.assign(t,{[e]:{...r}})),{});t.exports=({logger:t,instrumentationEmitter:e,retry:r,cluster:s})=>{const k=t.namespace("Admin");const L=e||new a;const connect=async()=>{await s.connect();L.emit(O)};const disconnect=async()=>{await s.disconnect();L.emit(C)};const listTopics=async()=>{const{topicMetadata:t}=await s.metadata();const e=t.map((t=>t.topic));return e};const createTopics=async({topics:t,validateOnly:e,timeout:n,waitForLeaders:i=true})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid topics array ${t}`)}if(t.filter((({topic:t})=>typeof t!=="string")).length>0){throw new l("Invalid topics array, the topic names have to be a valid string")}const a=new Set(t.map((({topic:t})=>t)));if(a.size<t.length){throw new l("Invalid topics array, it cannot have multiple entries for the same topic")}for(const{topic:e,configEntries:r}of t){if(r==null){continue}if(!Array.isArray(r)){throw new l(`Invalid configEntries for topic "${e}", must be an array`)}r.forEach(((t,r)=>{if(typeof t!=="object"||t==null){throw new l(`Invalid configEntries for topic "${e}". Entry ${r} must be an object`)}for(const o of["name","value"]){if(!Object.prototype.hasOwnProperty.call(t,o)||typeof t[o]!=="string"){throw new l(`Invalid configEntries for topic "${e}". Entry ${r} must have a valid "${o}" property`)}}}))}const c=o(r);return c((async(r,o,c)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();await r.createTopics({topics:t,validateOnly:e,timeout:n});if(i){const t=Array.from(a.values());await retryOnLeaderNotAvailable((async()=>await r.metadata(t)),{delay:100,maxWait:n,timeoutMessage:"Timed out while waiting for topic leaders"})}return true}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not create topics",{error:t.message,retryCount:o,retryTime:c});throw t}if(t instanceof g){if(t.errors.every((t=>t.type==="TOPIC_ALREADY_EXISTS"))){return false}}r(t)}}))};const createPartitions=async({topicPartitions:t,validateOnly:e,timeout:n})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid topic partitions array ${t}`)}if(t.length===0){throw new l(`Empty topic partitions array`)}if(t.filter((({topic:t})=>typeof t!=="string")).length>0){throw new l("Invalid topic partitions array, the topic names have to be a valid string")}const i=new Set(t.map((({topic:t})=>t)));if(i.size<t.length){throw new l("Invalid topic partitions array, it cannot have multiple entries for the same topic")}const a=o(r);return a((async(r,o,i)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();await r.createPartitions({topicPartitions:t,validateOnly:e,timeout:n})}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not create topics",{error:t.message,retryCount:o,retryTime:i});throw t}r(t)}}))};const deleteTopics=async({topics:t,timeout:e})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid topics array ${t}`)}if(t.filter((t=>typeof t!=="string")).length>0){throw new l("Invalid topics array, the names must be a valid string")}const n=o(r);return n((async(r,o,n)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();await r.deleteTopics({topics:t,timeout:e});for(const e of t){s.targetTopics.delete(e)}await s.refreshMetadata()}catch(t){if(["NOT_CONTROLLER","UNKNOWN_TOPIC_OR_PARTITION"].includes(t.type)){k.warn("Could not delete topics",{error:t.message,retryCount:o,retryTime:n});throw t}if(t.type==="REQUEST_TIMED_OUT"){k.error('Could not delete topics, check if "delete.topic.enable" is set to "true" (the default value is "false") or increase the timeout',{error:t.message,retryCount:o,retryTime:n})}r(t)}}))};const fetchTopicOffsets=async t=>{if(!t||typeof t!=="string"){throw new l(`Invalid topic ${t}`)}const e=o(r);return e((async(e,r,o)=>{try{await s.addTargetTopic(t);await s.refreshMetadataIfNecessary();const e=s.findTopicPartitionMetadata(t);const r=await s.fetchTopicsOffset([{topic:t,fromBeginning:false,partitions:e.map((t=>({partition:t.partitionId})))}]);const o=await s.fetchTopicsOffset([{topic:t,fromBeginning:true,partitions:e.map((t=>({partition:t.partitionId})))}]);const{partitions:n}=r.pop();const{partitions:i}=o.pop();return n.map((({partition:t,offset:e})=>({partition:t,offset:e,high:e,low:i.find((({partition:e})=>e===t)).offset})))}catch(t){if(t.type==="UNKNOWN_TOPIC_OR_PARTITION"){await s.refreshMetadata();throw t}e(t)}}))};const fetchTopicOffsetsByTimestamp=async(t,e)=>{if(!t||typeof t!=="string"){throw new l(`Invalid topic ${t}`)}const n=o(r);return n((async(r,o,n)=>{try{await s.addTargetTopic(t);await s.refreshMetadataIfNecessary();const r=s.findTopicPartitionMetadata(t);const o=r.map((t=>({partition:t.partitionId})));const n=await s.fetchTopicsOffset([{topic:t,fromBeginning:false,partitions:o}]);const{partitions:i}=n.pop();const a=await s.fetchTopicsOffset([{topic:t,fromTimestamp:e,partitions:o}]);const{partitions:c}=a.pop();return c.map((({partition:t,offset:e})=>({partition:t,offset:parseInt(e,10)>=0?e:i.find((({partition:e})=>e===t)).offset})))}catch(t){if(t.type==="UNKNOWN_TOPIC_OR_PARTITION"){await s.refreshMetadata();throw t}r(t)}}))};const fetchOffsets=async({groupId:t,topics:e,resolveOffsets:r=false})=>{if(!t){throw new l(`Invalid groupId ${t}`)}if(!e){e=[]}if(!Array.isArray(e)){throw new l("Expected topics array to be set")}const o=await s.findGroupCoordinator({groupId:t});const n=await Promise.all(e.map((async t=>{const e=await findTopicPartitions(s,t);const r=e.map((t=>({partition:t})));return{topic:t,partitions:r}})));let{responses:i}=await o.offsetFetch({groupId:t,topics:n});if(r){i=await Promise.all(i.map((async({topic:e,partitions:r})=>{const o=indexByPartition(await fetchTopicOffsets(e));const s=r.map((({offset:t,partition:e,...r})=>{let s=t;if(Number(t)===b){s=o[e].low}if(Number(t)===A){s=o[e].high}return{partition:e,offset:s,...r}}));await setOffsets({groupId:t,topic:e,partitions:s});return{topic:e,partitions:s}})))}return i.map((({topic:t,partitions:e})=>{const r=e.map((({partition:t,offset:e,metadata:r})=>({partition:t,offset:e,metadata:r||null})));return{topic:t,partitions:r}}))};const resetOffsets=async({groupId:t,topic:e,earliest:r=false})=>{if(!t){throw new l(`Invalid groupId ${t}`)}if(!e){throw new l(`Invalid topic ${e}`)}const o=await findTopicPartitions(s,e);const n=o.map((t=>({partition:t,offset:s.defaultOffset({fromBeginning:r})})));return setOffsets({groupId:t,topic:e,partitions:n})};const setOffsets=async({groupId:e,topic:r,partitions:o})=>{if(!e){throw new l(`Invalid groupId ${e}`)}if(!r){throw new l(`Invalid topic ${r}`)}if(!o||o.length===0){throw new l(`Invalid partitions`)}const n=i({logger:t.namespace("Admin",d.NOTHING),cluster:s,groupId:e});await n.subscribe({topic:r,fromBeginning:true});const a=await n.describeGroup();if(!isConsumerGroupRunning(a)){throw new l(`The consumer group must have no running instances, current state: ${a.state}`)}return new Promise(((t,e)=>{n.on(n.events.FETCH,(async()=>n.stop().then(t).catch(e)));n.run({eachBatchAutoResolve:false,eachBatch:async()=>true}).catch(e);n.pause([{topic:r}]);for(const t of o){n.seek({topic:r,...t})}}))};const isBrokerConfig=t=>[y.BROKER,y.BROKER_LOGGER].includes(t);const groupResourcesByBroker=({resources:t,defaultBroker:e})=>n(t,(async({type:t,name:r})=>isBrokerConfig(t)?await s.findBroker({nodeId:String(r)}):e));const describeConfigs=async({resources:t,includeSynonyms:e})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid resources array ${t}`)}if(t.length===0){throw new l("Resources array cannot be empty")}const n=Object.values(y);const i=t.find((t=>!n.includes(t.type)));if(i){throw new l(`Invalid resource type ${i.type}: ${JSON.stringify(i)}`)}const a=t.find((t=>!t.name||typeof t.name!=="string"));if(a){throw new l(`Invalid resource name ${a.name}: ${JSON.stringify(a)}`)}const c=t.find((t=>!Array.isArray(t.configNames)&&t.configNames!=null));if(c){const{configNames:t}=c;throw new l(`Invalid resource configNames ${t}: ${JSON.stringify(c)}`)}const u=o(r);return u((async(r,o,n)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();const o=await groupResourcesByBroker({resources:t,defaultBroker:r});const describeConfigsAction=async t=>{const s=t||r;return s.describeConfigs({resources:o.get(s),includeSynonyms:e})};const n=Array.from(o.keys());const i=await Promise.all(n.map(describeConfigsAction));const a=i.reduce(((t,{resources:e})=>[...t,...e]),[]);return{resources:a}}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not describe configs",{error:t.message,retryCount:o,retryTime:n});throw t}r(t)}}))};const alterConfigs=async({resources:t,validateOnly:e})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid resources array ${t}`)}if(t.length===0){throw new l("Resources array cannot be empty")}const n=Object.values(y);const i=t.find((t=>!n.includes(t.type)));if(i){throw new l(`Invalid resource type ${i.type}: ${JSON.stringify(i)}`)}const a=t.find((t=>!t.name||typeof t.name!=="string"));if(a){throw new l(`Invalid resource name ${a.name}: ${JSON.stringify(a)}`)}const c=t.find((t=>!Array.isArray(t.configEntries)));if(c){const{configEntries:t}=c;throw new l(`Invalid resource configEntries ${t}: ${JSON.stringify(c)}`)}const u=t.find((t=>t.configEntries.some((t=>typeof t.name!=="string"||typeof t.value!=="string"))));if(u){throw new l(`Invalid resource config value: ${JSON.stringify(u)}`)}const p=o(r);return p((async(r,o,n)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();const o=await groupResourcesByBroker({resources:t,defaultBroker:r});const alterConfigsAction=async t=>{const s=t||r;return s.alterConfigs({resources:o.get(s),validateOnly:!!e})};const n=Array.from(o.keys());const i=await Promise.all(n.map(alterConfigsAction));const a=i.reduce(((t,{resources:e})=>[...t,...e]),[]);return{resources:a}}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not alter configs",{error:t.message,retryCount:o,retryTime:n});throw t}r(t)}}))};const fetchTopicMetadata=async({topics:t=[]}={})=>{if(t){t.forEach((t=>{if(!t||typeof t!=="string"){throw new l(`Invalid topic ${t}`)}}))}const e=await s.metadata({topics:t});return{topics:e.topicMetadata.map((t=>({name:t.topic,partitions:t.partitionMetadata})))}};const describeCluster=async()=>{const{brokers:t,clusterId:e,controllerId:r}=await s.metadata({topics:[]});const o=t.map((({nodeId:t,host:e,port:r})=>({nodeId:t,host:e,port:r})));const n=r==null||r===N?null:r;return{brokers:o,controller:n,clusterId:e}};const listGroups=async()=>{await s.refreshMetadata();let t=[];for(var e in s.brokerPool.brokers){const r=await s.findBroker({nodeId:e});const o=await r.listGroups();t=t.concat(o.groups)}return{groups:t}};const describeGroups=async t=>{const e=await Promise.all(t.map((async t=>{const e=await s.findGroupCoordinator({groupId:t});return{coordinator:e,groupId:t}})));const n=Object.values(e.reduce(((t,{coordinator:e,groupId:r})=>{const o=t[e.nodeId];if(o){t[e.nodeId]={...o,groupIds:[...o.groupIds,r]}}else{t[e.nodeId]={coordinator:e,groupIds:[r]}}return t}),{}));const i=await Promise.all(n.map((async({coordinator:t,groupIds:e})=>{const s=o(r);const{groups:n}=await s((()=>t.describeGroups({groupIds:e})));return n})));const a=[].concat.apply([],i);return{groups:a}};const deleteGroups=async t=>{if(!t||!Array.isArray(t)){throw new l(`Invalid groupIds array ${t}`)}const e=t.some((t=>typeof t!=="string"));if(e){throw new l(`Invalid groupId name: ${JSON.stringify(e)}`)}const n=o(r);let i=[];let a=t.slice();return n((async(t,e,r)=>{try{if(a.length===0)return[];await s.refreshMetadata();const t={};const e={};for(const r of a){const o=await s.findGroupCoordinator({groupId:r});if(t[o.nodeId]===undefined)t[o.nodeId]=[];t[o.nodeId].push(r);e[o.nodeId]=o}const r=await Promise.all(Object.keys(e).map((async r=>await e[r].deleteGroups(t[r]))));const o=r.flatMap((({results:t})=>t.map((({groupId:t,errorCode:e,error:r})=>({groupId:t,errorCode:e,error:r}))))).filter((({errorCode:t})=>t!==0));a=o.map((({groupId:t})=>t));if(o.length>0)throw new f("Error in DeleteGroups",o);i=r.flatMap((({results:t})=>t));return i}catch(o){if(o.type==="NOT_CONTROLLER"||o.type==="COORDINATOR_NOT_AVAILABLE"){k.warn("Could not delete groups",{error:o.message,retryCount:e,retryTime:r});throw o}t(o)}}))};const deleteTopicRecords=async({topic:t,partitions:e})=>{if(!t||typeof t!=="string"){throw new l(`Invalid topic "${t}"`)}if(!e||e.length===0){throw new l(`Invalid partitions`)}const n=s.findLeaderForPartitions(t,e.map((t=>t.partition)));const i=R(n).flat();const a=await fetchTopicOffsets(t);const c=[];e.forEach((({partition:e,offset:r})=>{if(!i.includes(e)){c.push({partition:e,offset:r,error:new h("Could not find the leader for the partition",{retriable:false})});return}const{low:o}=a.find((t=>t.partition===e))||{high:undefined,low:undefined};if(parseInt(r)<parseInt(o)&&parseInt(r)!==-1){k.warn("The requested offset is before the earliest offset maintained on the partition - no records will be deleted from this partition",{topic:t,partition:e,offset:r})}}));if(c.length>0){throw new m({topic:t,partitions:c})}const u=x(n).reduce(((r,[o,s])=>{r[o]={topic:t,partitions:e.filter((t=>s.includes(t.partition)))};return r}),{});const p=o(r);return p((async e=>{try{const e=[];const r=x(u).map((([t,{topic:e,partitions:r}])=>async()=>{const o=await s.findBroker({nodeId:t});await o.deleteRecords({topics:[{topic:e,partitions:r}]});delete u[t]}));await Promise.all(r.map((t=>t().catch((t=>{if(t.name==="KafkaJSDeleteTopicRecordsError"){t.partitions.forEach((({partition:t,offset:r,error:o})=>{e.push({partition:t,offset:r,error:o})}))}else{throw t}})))));if(e.length>0){throw new m({topic:t,partitions:e})}}catch(t){if(t.retriable&&t.partitions.some((({error:t})=>I(t)||t.name==="KafkaJSMetadataNotLoaded"))){await s.refreshMetadata()}throw t}}))};const createAcls=async({acl:t})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid ACL array ${t}`)}if(t.length===0){throw new l("Empty ACL array")}if(t.some((({principal:t})=>typeof t!=="string"))){throw new l("Invalid ACL array, the principals have to be a valid string")}if(t.some((({host:t})=>typeof t!=="string"))){throw new l("Invalid ACL array, the hosts have to be a valid string")}if(t.some((({resourceName:t})=>typeof t!=="string"))){throw new l("Invalid ACL array, the resourceNames have to be a valid string")}let e;const n=Object.values(T);e=t.find((t=>!n.includes(t.operation)));if(e){throw new l(`Invalid operation type ${e.operation}: ${JSON.stringify(e)}`)}const i=Object.values(S);e=t.find((t=>!i.includes(t.resourcePatternType)));if(e){throw new l(`Invalid resource pattern type ${e.resourcePatternType}: ${JSON.stringify(e)}`)}const a=Object.values(E);e=t.find((t=>!a.includes(t.permissionType)));if(e){throw new l(`Invalid permission type ${e.permissionType}: ${JSON.stringify(e)}`)}const c=Object.values(w);e=t.find((t=>!c.includes(t.resourceType)));if(e){throw new l(`Invalid resource type ${e.resourceType}: ${JSON.stringify(e)}`)}const u=o(r);return u((async(e,r,o)=>{try{await s.refreshMetadata();const e=await s.findControllerBroker();await e.createAcls({acl:t});return true}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not create ACL",{error:t.message,retryCount:r,retryTime:o});throw t}e(t)}}))};const describeAcls=async({resourceType:t,resourceName:e,resourcePatternType:n,principal:i,host:a,operation:c,permissionType:u})=>{if(typeof i!=="string"&&typeof i!=="undefined"){throw new l("Invalid principal, the principal have to be a valid string")}if(typeof a!=="string"&&typeof a!=="undefined"){throw new l("Invalid host, the host have to be a valid string")}if(typeof e!=="string"&&typeof e!=="undefined"){throw new l("Invalid resourceName, the resourceName have to be a valid string")}const p=Object.values(T);if(!p.includes(c)){throw new l(`Invalid operation type ${c}`)}const d=Object.values(S);if(!d.includes(n)){throw new l(`Invalid resource pattern filter type ${n}`)}const f=Object.values(E);if(!f.includes(u)){throw new l(`Invalid permission type ${u}`)}const h=Object.values(w);if(!h.includes(t)){throw new l(`Invalid resource type ${t}`)}const m=o(r);return m((async(r,o,p)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();const{resources:o}=await r.describeAcls({resourceType:t,resourceName:e,resourcePatternType:n,principal:i,host:a,operation:c,permissionType:u});return{resources:o}}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not describe ACL",{error:t.message,retryCount:o,retryTime:p});throw t}r(t)}}))};const deleteAcls=async({filters:t})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid ACL Filter array ${t}`)}if(t.length===0){throw new l("Empty ACL Filter array")}if(t.some((({principal:t})=>typeof t!=="string"&&typeof t!=="undefined"))){throw new l("Invalid ACL Filter array, the principals have to be a valid string")}if(t.some((({host:t})=>typeof t!=="string"&&typeof t!=="undefined"))){throw new l("Invalid ACL Filter array, the hosts have to be a valid string")}if(t.some((({resourceName:t})=>typeof t!=="string"&&typeof t!=="undefined"))){throw new l("Invalid ACL Filter array, the resourceNames have to be a valid string")}let e;const n=Object.values(T);e=t.find((t=>!n.includes(t.operation)));if(e){throw new l(`Invalid operation type ${e.operation}: ${JSON.stringify(e)}`)}const i=Object.values(S);e=t.find((t=>!i.includes(t.resourcePatternType)));if(e){throw new l(`Invalid resource pattern type ${e.resourcePatternType}: ${JSON.stringify(e)}`)}const a=Object.values(E);e=t.find((t=>!a.includes(t.permissionType)));if(e){throw new l(`Invalid permission type ${e.permissionType}: ${JSON.stringify(e)}`)}const c=Object.values(w);e=t.find((t=>!c.includes(t.resourceType)));if(e){throw new l(`Invalid resource type ${e.resourceType}: ${JSON.stringify(e)}`)}const u=o(r);return u((async(e,r,o)=>{try{await s.refreshMetadata();const e=await s.findControllerBroker();const{filterResponses:r}=await e.deleteAcls({filters:t});return{filterResponses:r}}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not delete ACL",{error:t.message,retryCount:r,retryTime:o});throw t}e(t)}}))};const alterPartitionReassignments=async({topics:t,timeout:e})=>{if(!t||!Array.isArray(t)){throw new l(`Invalid topics array ${t}`)}if(t.filter((({topic:t})=>typeof t!=="string")).length>0){throw new l("Invalid topics array, the topic names have to be a valid string")}const n=new Set(t.map((({topic:t})=>t)));if(n.size<t.length){throw new l("Invalid topics array, it cannot have multiple entries for the same topic")}for(const{topic:e,partitionAssignment:r}of t){if(!r||!Array.isArray(r)){throw new l(`Invalid partitions array: ${r} for topic: ${e}`)}for(const{partition:t,replicas:o}of r){if(t===null||t===undefined||typeof t!=="number"||t<0){throw new l(`Invalid partitions index: ${t} for topic: ${e}`)}if(!o||!Array.isArray(o)){throw new l(`Invalid replica assignment: ${o} for topic: ${e} on partition: ${t}`)}if(o.filter((t=>typeof t!=="number"||t<0)).length>=1){throw new l(`Invalid replica assignment: ${o} for topic: ${e} on partition: ${t}. Replicas must be a non negative number`)}}}const i=o(r);return i((async(r,o,n)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();await r.alterPartitionReassignments({topics:t,timeout:e})}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not reassign partitions",{error:t.message,retryCount:o,retryTime:n});throw t}r(t)}}))};const listPartitionReassignments=async({topics:t=null,timeout:e})=>{if(t){if(!Array.isArray(t)){throw new l(`Invalid topics array ${t}`)}if(t.filter((({topic:t})=>typeof t!=="string")).length>0){throw new l("Invalid topics array, the topic names have to be a valid string")}const e=new Set(t.map((({topic:t})=>t)));if(e.size<t.length){throw new l("Invalid topics array, it cannot have multiple entries for the same topic")}for(const{topic:e,partitions:r}of t){if(!r||!Array.isArray(r)){throw new l(`Invalid partition array: ${r} for topic: ${e}`)}if(r.filter((t=>typeof t!=="number"||t<0)).length>=1){throw new l(`Invalid partition array: ${r} for topic: ${e}. The partition indices have to be a valid number greater than 0.`)}}}const n=o(r);return n((async(r,o,n)=>{try{await s.refreshMetadata();const r=await s.findControllerBroker();const o=await r.listPartitionReassignments({topics:t,timeout:e});return{topics:o.topics}}catch(t){if(t.type==="NOT_CONTROLLER"){k.warn("Could not reassign partitions",{error:t.message,retryCount:o,retryTime:n});throw t}r(t)}}))};const on=(t,e)=>{if(!v.includes(t)){throw new l(`Event name should be one of ${_}`)}return L.addListener(p(t),(r=>{r.type=u(r.type);Promise.resolve(e(r)).catch((e=>{k.error(`Failed to execute listener: ${e.message}`,{eventName:t,stack:e.stack})}))}))};const getLogger=()=>k;return{connect:connect,disconnect:disconnect,listTopics:listTopics,createTopics:createTopics,deleteTopics:deleteTopics,createPartitions:createPartitions,fetchTopicMetadata:fetchTopicMetadata,describeCluster:describeCluster,events:c,fetchOffsets:fetchOffsets,fetchTopicOffsets:fetchTopicOffsets,fetchTopicOffsetsByTimestamp:fetchTopicOffsetsByTimestamp,setOffsets:setOffsets,resetOffsets:resetOffsets,describeConfigs:describeConfigs,alterConfigs:alterConfigs,on:on,logger:getLogger,listGroups:listGroups,describeGroups:describeGroups,deleteGroups:deleteGroups,describeAcls:describeAcls,deleteAcls:deleteAcls,createAcls:createAcls,deleteTopicRecords:deleteTopicRecords,alterPartitionReassignments:alterPartitionReassignments,listPartitionReassignments:listPartitionReassignments}}},7112:function(t,e,r){const o=r(5780);const s=r(4976);const n=r(1347);const i=n("admin");const a={CONNECT:i("connect"),DISCONNECT:i("disconnect"),REQUEST:i(s.NETWORK_REQUEST),REQUEST_TIMEOUT:i(s.NETWORK_REQUEST_TIMEOUT),REQUEST_QUEUE_SIZE:i(s.NETWORK_REQUEST_QUEUE_SIZE)};const c={[a.REQUEST]:s.NETWORK_REQUEST,[a.REQUEST_TIMEOUT]:s.NETWORK_REQUEST_TIMEOUT,[a.REQUEST_QUEUE_SIZE]:s.NETWORK_REQUEST_QUEUE_SIZE};const u=o(c);const unwrap=t=>c[t]||t;const wrap=t=>u[t]||t;t.exports={events:a,wrap:wrap,unwrap:unwrap}},6267:function(t,e,r){const o=r(6249);const{Types:s}=r(5516);const{requests:n,lookup:i}=r(7966);const{KafkaJSNonRetriableError:a}=r(1331);const c=r(1062);const u=r(9085);const p={SEND_REQUEST:Symbol("private:Broker:sendRequest")};const notInitializedLookup=()=>{throw new Error("Broker not connected")};t.exports=class Broker{constructor({connectionPool:t,logger:e,nodeId:r=null,versions:s=null,authenticationTimeout:n=1e4,allowAutoTopicCreation:i=true}){this.connectionPool=t;this.nodeId=r;this.rootLogger=e;this.logger=e.namespace("Broker");this.versions=s;this.authenticationTimeout=n;this.allowAutoTopicCreation=i;const a=2*this.connectionPool.connectionTimeout+this.authenticationTimeout;this.brokerAddress=`${this.connectionPool.host}:${this.connectionPool.port}`;this.lock=new o({timeout:a,description:`connect to broker ${this.brokerAddress}`});this.lookupRequest=notInitializedLookup}isConnected(){return this.connectionPool.sasl?this.connectionPool.isConnected()&&this.connectionPool.isAuthenticated():this.connectionPool.isConnected()}async connect(){await this.lock.acquire();try{if(this.isConnected()){return}const t=await this.connectionPool.getConnection();if(!this.versions){this.versions=await this.apiVersions()}this.connectionPool.setVersions(this.versions);this.lookupRequest=i(this.versions);if(t.getSupportAuthenticationProtocol()===null){let t=false;try{this.lookupRequest(c.SaslAuthenticate,n.SaslAuthenticate);t=true}catch(e){t=false}this.connectionPool.setSupportAuthenticationProtocol(t);this.logger.debug(`Verified support for SaslAuthenticate`,{broker:this.brokerAddress,supportAuthenticationProtocol:t})}await t.authenticate()}finally{await this.lock.release()}}async disconnect(){await this.connectionPool.destroy()}async apiVersions(){let t;const e=n.ApiVersions.versions.map(Number).sort().reverse();for(const r of e){try{const e=n.ApiVersions.protocol({version:r});t=await this[p.SEND_REQUEST]({...e(),requestTimeout:this.connectionPool.connectionTimeout});break}catch(t){if(t.type!=="UNSUPPORTED_VERSION"){throw t}}}if(!t){throw new a("API Versions not supported")}return t.apiVersions.reduce(((t,e)=>Object.assign(t,{[e.apiKey]:{minVersion:e.minVersion,maxVersion:e.maxVersion}})),{})}async metadata(t=[]){const e=this.lookupRequest(c.Metadata,n.Metadata);const r=u(t);return await this[p.SEND_REQUEST](e({topics:r,allowAutoTopicCreation:this.allowAutoTopicCreation}))}async produce({topicData:t,transactionalId:e,producerId:r,producerEpoch:o,acks:i=-1,timeout:a=3e4,compression:u=s.None}){const d=this.lookupRequest(c.Produce,n.Produce);return await this[p.SEND_REQUEST](d({acks:i,timeout:a,compression:u,topicData:t,transactionalId:e,producerId:r,producerEpoch:o}))}async fetch({replicaId:t,isolationLevel:e,maxWaitTime:r=5e3,minBytes:o=1,maxBytes:s=10485760,topics:i,rackId:a=""}){const d=this.lookupRequest(c.Fetch,n.Fetch);const l=i.reduce(((t,{topic:e,partitions:r})=>{r.forEach((r=>{t.push({topic:e,partition:r})}));return t}),[]);const f=u(l);const h=f.reduce(((t,{topic:e,partition:r})=>{const o=t[t.length-1];if(o!=null&&o.topic===e){t[t.length-1].partitions.push(r)}else{t.push({topic:e,partitions:[r]})}return t}),[]);return await this[p.SEND_REQUEST](d({replicaId:t,isolationLevel:e,maxWaitTime:r,minBytes:o,maxBytes:s,topics:h,rackId:a}))}async heartbeat({groupId:t,groupGenerationId:e,memberId:r}){const o=this.lookupRequest(c.Heartbeat,n.Heartbeat);return await this[p.SEND_REQUEST](o({groupId:t,groupGenerationId:e,memberId:r}))}async findGroupCoordinator({groupId:t,coordinatorType:e}){const r=this.lookupRequest(c.GroupCoordinator,n.GroupCoordinator);return await this[p.SEND_REQUEST](r({groupId:t,coordinatorType:e}))}async joinGroup({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:o="",protocolType:s="consumer",groupProtocols:i}){const a=this.lookupRequest(c.JoinGroup,n.JoinGroup);const makeRequest=(n=o)=>this[p.SEND_REQUEST](a({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:n,protocolType:s,groupProtocols:i}));try{return await makeRequest()}catch(t){if(t.name==="KafkaJSMemberIdRequired"){return makeRequest(t.memberId)}throw t}}async leaveGroup({groupId:t,memberId:e}){const r=this.lookupRequest(c.LeaveGroup,n.LeaveGroup);return await this[p.SEND_REQUEST](r({groupId:t,memberId:e}))}async syncGroup({groupId:t,generationId:e,memberId:r,groupAssignment:o}){const s=this.lookupRequest(c.SyncGroup,n.SyncGroup);return await this[p.SEND_REQUEST](s({groupId:t,generationId:e,memberId:r,groupAssignment:o}))}async listOffsets({replicaId:t,isolationLevel:e,topics:r}){const o=this.lookupRequest(c.ListOffsets,n.ListOffsets);const s=await this[p.SEND_REQUEST](o({replicaId:t,isolationLevel:e,topics:r}));for(const t of s.responses){t.partitions=t.partitions.map((({offsets:t,...e})=>t?{...e,offset:t.pop()}:e))}return s}async offsetCommit({groupId:t,groupGenerationId:e,memberId:r,retentionTime:o,topics:s}){const i=this.lookupRequest(c.OffsetCommit,n.OffsetCommit);return await this[p.SEND_REQUEST](i({groupId:t,groupGenerationId:e,memberId:r,retentionTime:o,topics:s}))}async offsetFetch({groupId:t,topics:e}){const r=this.lookupRequest(c.OffsetFetch,n.OffsetFetch);return await this[p.SEND_REQUEST](r({groupId:t,topics:e}))}async describeGroups({groupIds:t}){const e=this.lookupRequest(c.DescribeGroups,n.DescribeGroups);return await this[p.SEND_REQUEST](e({groupIds:t}))}async createTopics({topics:t,validateOnly:e=false,timeout:r=5e3}){const o=this.lookupRequest(c.CreateTopics,n.CreateTopics);return await this[p.SEND_REQUEST](o({topics:t,validateOnly:e,timeout:r}))}async createPartitions({topicPartitions:t,validateOnly:e=false,timeout:r=5e3}){const o=this.lookupRequest(c.CreatePartitions,n.CreatePartitions);return await this[p.SEND_REQUEST](o({topicPartitions:t,validateOnly:e,timeout:r}))}async deleteTopics({topics:t,timeout:e=5e3}){const r=this.lookupRequest(c.DeleteTopics,n.DeleteTopics);return await this[p.SEND_REQUEST](r({topics:t,timeout:e}))}async describeConfigs({resources:t,includeSynonyms:e=false}){const r=this.lookupRequest(c.DescribeConfigs,n.DescribeConfigs);return await this[p.SEND_REQUEST](r({resources:t,includeSynonyms:e}))}async alterConfigs({resources:t,validateOnly:e=false}){const r=this.lookupRequest(c.AlterConfigs,n.AlterConfigs);return await this[p.SEND_REQUEST](r({resources:t,validateOnly:e}))}async initProducerId({transactionalId:t,transactionTimeout:e}){const r=this.lookupRequest(c.InitProducerId,n.InitProducerId);return await this[p.SEND_REQUEST](r({transactionalId:t,transactionTimeout:e}))}async addPartitionsToTxn({transactionalId:t,producerId:e,producerEpoch:r,topics:o}){const s=this.lookupRequest(c.AddPartitionsToTxn,n.AddPartitionsToTxn);return await this[p.SEND_REQUEST](s({transactionalId:t,producerId:e,producerEpoch:r,topics:o}))}async addOffsetsToTxn({transactionalId:t,producerId:e,producerEpoch:r,groupId:o}){const s=this.lookupRequest(c.AddOffsetsToTxn,n.AddOffsetsToTxn);return await this[p.SEND_REQUEST](s({transactionalId:t,producerId:e,producerEpoch:r,groupId:o}))}async txnOffsetCommit({transactionalId:t,groupId:e,producerId:r,producerEpoch:o,topics:s}){const i=this.lookupRequest(c.TxnOffsetCommit,n.TxnOffsetCommit);return await this[p.SEND_REQUEST](i({transactionalId:t,groupId:e,producerId:r,producerEpoch:o,topics:s}))}async endTxn({transactionalId:t,producerId:e,producerEpoch:r,transactionResult:o}){const s=this.lookupRequest(c.EndTxn,n.EndTxn);return await this[p.SEND_REQUEST](s({transactionalId:t,producerId:e,producerEpoch:r,transactionResult:o}))}async listGroups(){const t=this.lookupRequest(c.ListGroups,n.ListGroups);return await this[p.SEND_REQUEST](t())}async deleteGroups(t){const e=this.lookupRequest(c.DeleteGroups,n.DeleteGroups);return await this[p.SEND_REQUEST](e(t))}async deleteRecords({topics:t}){const e=this.lookupRequest(c.DeleteRecords,n.DeleteRecords);return await this[p.SEND_REQUEST](e({topics:t}))}async createAcls({acl:t}){const e=this.lookupRequest(c.CreateAcls,n.CreateAcls);return await this[p.SEND_REQUEST](e({creations:t}))}async describeAcls({resourceType:t,resourceName:e,resourcePatternType:r,principal:o,host:s,operation:i,permissionType:a}){const u=this.lookupRequest(c.DescribeAcls,n.DescribeAcls);return await this[p.SEND_REQUEST](u({resourceType:t,resourceName:e,resourcePatternType:r,principal:o,host:s,operation:i,permissionType:a}))}async deleteAcls({filters:t}){const e=this.lookupRequest(c.DeleteAcls,n.DeleteAcls);return await this[p.SEND_REQUEST](e({filters:t}))}async alterPartitionReassignments({topics:t,timeout:e}){const r=this.lookupRequest(c.AlterPartitionReassignments,n.AlterPartitionReassignments);return await this[p.SEND_REQUEST](r({topics:t,timeout:e}))}async listPartitionReassignments({topics:t=null,timeout:e}){const r=this.lookupRequest(c.ListPartitionReassignments,n.ListPartitionReassignments);return await this[p.SEND_REQUEST](r({topics:t,timeout:e}))}async[p.SEND_REQUEST](t){try{return await this.connectionPool.send(t)}catch(t){if(t.name==="KafkaJSConnectionClosedError"){await this.disconnect()}throw t}}}},8802:function(t,e,r){const{request:o,response:s}=r(7109);const{KafkaJSSASLAuthenticationError:n}=r(1331);const awsIAMAuthenticatorProvider=t=>({host:e,port:r,logger:i,saslAuthenticate:a})=>({authenticate:async()=>{if(!t.authorizationIdentity){throw new n("SASL AWS-IAM: Missing authorizationIdentity")}if(!t.accessKeyId){throw new n("SASL AWS-IAM: Missing accessKeyId")}if(!t.secretAccessKey){throw new n("SASL AWS-IAM: Missing secretAccessKey")}if(!t.sessionToken){t.sessionToken=""}const c=`${e}:${r}`;try{i.debug("Authenticate with SASL AWS-IAM",{broker:c});await a({request:o(t),response:s});i.debug("SASL AWS-IAM authentication successful",{broker:c})}catch(t){const e=new n(`SASL AWS-IAM authentication failed: ${t.message}`);i.error(e.message,{broker:c});throw e}}});t.exports=awsIAMAuthenticatorProvider},9727:function(t,e,r){const{requests:o,lookup:s}=r(7966);const n=r(1062);const i=r(9947);const a=r(1780);const c=r(9263);const u=r(8802);const p=r(8333);const{KafkaJSSASLAuthenticationError:d}=r(1331);const l={AWS:u,PLAIN:i,OAUTHBEARER:p,"SCRAM-SHA-256":a,"SCRAM-SHA-512":c};const f="0";t.exports=class SASLAuthenticator{constructor(t,e,r,i){this.connection=t;this.logger=e;this.sessionLifetime=f;const a=s(r);this.saslHandshake=a(n.SaslHandshake,o.SaslHandshake);this.protocolAuthentication=i?a(n.SaslAuthenticate,o.SaslAuthenticate):null}async authenticate(){const t=this.connection.sasl.mechanism.toUpperCase();const e=await this.connection.send(this.saslHandshake({mechanism:t}));if(!e.enabledMechanisms.includes(t)){throw new d(`SASL ${t} mechanism is not supported by the server`)}const saslAuthenticate=async({request:t,response:e})=>{if(this.protocolAuthentication){const r=await t.encode();const o=await this.connection.send(this.protocolAuthentication({authBytes:r}));this.sessionLifetime=o.sessionLifetimeMs||f;if(!e){return}const{authBytes:s}=o;const n=await e.decode(s);return e.parse(n)}return this.connection.sendAuthRequest({request:t,response:e})};if(!this.connection.sasl.authenticationProvider&&Object.keys(l).includes(t)){this.connection.sasl.authenticationProvider=l[t](this.connection.sasl)}await this.connection.sasl.authenticationProvider({host:this.connection.host,port:this.connection.port,logger:this.logger.namespace(`SaslAuthenticator-${t}`),saslAuthenticate:saslAuthenticate}).authenticate()}}},8333:function(t,e,r){const{request:o}=r(4846);const{KafkaJSSASLAuthenticationError:s}=r(1331);const oauthBearerAuthenticatorProvider=t=>({host:e,port:r,logger:n,saslAuthenticate:i})=>({authenticate:async()=>{const{oauthBearerProvider:a}=t;if(a==null){throw new s("SASL OAUTHBEARER: Missing OAuth bearer token provider")}const c=await a();if(c.value==null){throw new s("SASL OAUTHBEARER: Invalid OAuth bearer token")}const u=`${e}:${r}`;try{n.debug("Authenticate with SASL OAUTHBEARER",{broker:u});await i({request:await o(t,c)});n.debug("SASL OAUTHBEARER authentication successful",{broker:u})}catch(t){const e=new s(`SASL OAUTHBEARER authentication failed: ${t.message}`);n.error(e.message,{broker:u});throw e}}});t.exports=oauthBearerAuthenticatorProvider},9947:function(t,e,r){const{request:o,response:s}=r(2166);const{KafkaJSSASLAuthenticationError:n}=r(1331);const plainAuthenticatorProvider=t=>({host:e,port:r,logger:i,saslAuthenticate:a})=>({authenticate:async()=>{if(t.username==null||t.password==null){throw new n("SASL Plain: Invalid username or password")}const c=`${e}:${r}`;try{i.debug("Authenticate with SASL PLAIN",{broker:c});await a({request:o(t),response:s});i.debug("SASL PLAIN authentication successful",{broker:c})}catch(t){const e=new n(`SASL PLAIN authentication failed: ${t.message}`);i.error(e.message,{broker:c});throw e}}});t.exports=plainAuthenticatorProvider},1202:function(t,e,r){const o=r(6113);const s=r(3738);const{KafkaJSSASLAuthenticationError:n,KafkaJSNonRetriableError:i}=r(1331);const a="n,,";const c=/=/g;const u=/,/g;const p=/\+/g;const d=/\//g;const l=/=+$/;const f="Client Key";const h="Server Key";const m={SHA256:{length:32,type:"sha256",minIterations:4096},SHA512:{length:64,type:"sha512",minIterations:4096}};const encode64=t=>Buffer.from(t).toString("base64");class SCRAM{static sanitizeString(t){return t.replace(c,"=3D").replace(u,"=2C")}static nonce(){return o.randomBytes(16).toString("base64").replace(p,"-").replace(d,"_").replace(l,"").toString("ascii")}static hi(t,e,r,s){return new Promise(((n,i)=>{o.pbkdf2(t,e,r,s.length,s.type,((t,e)=>t?i(t):n(e)))}))}static xor(t,e){const r=Buffer.from(t);const o=Buffer.from(e);const s=Buffer.byteLength(r);if(s!==Buffer.byteLength(o)){throw new i("Buffers must be of the same length")}const n=[];for(let t=0;t<s;t++){n.push(r[t]^o[t])}return Buffer.from(n)}constructor(t,e,r,o,s,n){this.sasl=t;this.host=e;this.port=r;this.logger=o;this.saslAuthenticate=s;this.digestDefinition=n;const i=n.type.toUpperCase();this.PREFIX=`SASL SCRAM ${i} authentication`;this.currentNonce=SCRAM.nonce()}async authenticate(){const{PREFIX:t}=this;const e=`${this.host}:${this.port}`;if(this.sasl.username==null||this.sasl.password==null){throw new n(`${this.PREFIX}: Invalid username or password`)}try{this.logger.debug("Exchanging first client message",{broker:e});const r=await this.sendClientFirstMessage();this.logger.debug("Sending final message",{broker:e});const o=await this.sendClientFinalMessage(r);if(o.e){throw new Error(o.e)}const s=await this.serverKey(r);const n=this.serverSignature(s,r);if(o.v!==n){throw new Error("Invalid server signature in server final message")}this.logger.debug(`${t} successful`,{broker:e})}catch(r){const o=new n(`${t} failed: ${r.message}`);this.logger.error(o.message,{broker:e});throw o}}async sendClientFirstMessage(){const t=`${a}${this.firstMessageBare()}`;const e=s.firstMessage.request({clientFirstMessage:t});const r=s.firstMessage.response;return this.saslAuthenticate({request:e,response:r})}async sendClientFinalMessage(t){const{PREFIX:e}=this;const r=parseInt(t.i,10);const{minIterations:o}=this.digestDefinition;if(!t.r.startsWith(this.currentNonce)){throw new n(`${e} failed: Invalid server nonce, it does not start with the client nonce`)}if(r<o){throw new n(`${e} failed: Requested iterations ${r} is less than the minimum ${o}`)}const i=this.finalMessageWithoutProof(t);const a=await this.clientProof(t);const c=`${i},p=${a}`;const u=s.finalMessage.request({finalMessage:c});const p=s.finalMessage.response;return this.saslAuthenticate({request:u,response:p})}async clientProof(t){const e=await this.clientKey(t);const r=this.H(e);const o=this.clientSignature(r,t);return encode64(SCRAM.xor(e,o))}async clientKey(t){const e=await this.saltPassword(t);return this.HMAC(e,f)}async serverKey(t){const e=await this.saltPassword(t);return this.HMAC(e,h)}clientSignature(t,e){return this.HMAC(t,this.authMessage(e))}serverSignature(t,e){return encode64(this.HMAC(t,this.authMessage(e)))}authMessage(t){return[this.firstMessageBare(),t.original,this.finalMessageWithoutProof(t)].join(",")}async saltPassword(t){const e=Buffer.from(t.s,"base64");const r=parseInt(t.i,10);return SCRAM.hi(this.encodedPassword(),e,r,this.digestDefinition)}firstMessageBare(){return`n=${this.encodedUsername()},r=${this.currentNonce}`}finalMessageWithoutProof(t){const e=t.r;return`c=${encode64(a)},r=${e}`}encodedUsername(){const{username:t}=this.sasl;return SCRAM.sanitizeString(t).toString("utf-8")}encodedPassword(){const{password:t}=this.sasl;return t.toString("utf-8")}H(t){return o.createHash(this.digestDefinition.type).update(t).digest()}HMAC(t,e){return o.createHmac(this.digestDefinition.type,t).update(e).digest()}}t.exports={DIGESTS:m,SCRAM:SCRAM}},1780:function(t,e,r){const{SCRAM:o,DIGESTS:s}=r(1202);const scram256AuthenticatorProvider=t=>({host:e,port:r,logger:n,saslAuthenticate:i})=>{const a=new o(t,e,r,n,i,s.SHA256);return{authenticate:async()=>await a.authenticate()}};t.exports=scram256AuthenticatorProvider},9263:function(t,e,r){const{SCRAM:o,DIGESTS:s}=r(1202);const scram512AuthenticatorProvider=t=>({host:e,port:r,logger:n,saslAuthenticate:i})=>{const a=new o(t,e,r,n,i,s.SHA512);return{authenticate:async()=>await a.authenticate()}};t.exports=scram512AuthenticatorProvider},964:function(t,e,r){const o=r(6267);const s=r(4091);const n=r(9085);const i=r(9408);const{KafkaJSBrokerNotFound:a,KafkaJSProtocolError:c}=r(1331);const{keys:u,assign:p,values:d}=Object;const hasBrokerBeenReplaced=(t,{host:e,port:r,rack:o})=>t.connectionPool.host!==e||t.connectionPool.port!==r||t.connectionPool.rack!==o;t.exports=class BrokerPool{constructor({connectionPoolBuilder:t,logger:e,retry:r,allowAutoTopicCreation:n,authenticationTimeout:i,metadataMaxAge:a}){this.rootLogger=e;this.connectionPoolBuilder=t;this.metadataMaxAge=a||0;this.logger=e.namespace("BrokerPool");this.retrier=s(p({},r));this.createBroker=t=>new o({allowAutoTopicCreation:n,authenticationTimeout:i,...t});this.brokers={};this.seedBroker=undefined;this.metadata=null;this.metadataExpireAt=null;this.versions=null}hasConnectedBrokers(){const t=d(this.brokers);return!!t.find((t=>t.isConnected()))||(this.seedBroker?this.seedBroker.isConnected():false)}async createSeedBroker(){if(this.seedBroker){await this.seedBroker.disconnect()}const t=await this.connectionPoolBuilder.build();this.seedBroker=this.createBroker({connectionPool:t,logger:this.rootLogger})}async connect(){if(this.hasConnectedBrokers()){return}if(!this.seedBroker){await this.createSeedBroker()}return this.retrier((async(t,e,r)=>{try{await this.seedBroker.connect();this.versions=this.seedBroker.versions}catch(o){if(o.name==="KafkaJSConnectionError"||o.type==="ILLEGAL_SASL_STATE"){await this.createSeedBroker();this.logger.error(`Failed to connect to seed broker, trying another broker from the list: ${o.message}`,{retryCount:e,retryTime:r})}else{this.logger.error(o.message,{retryCount:e,retryTime:r})}if(o.retriable)throw o;t(o)}}))}async disconnect(){this.seedBroker&&await this.seedBroker.disconnect();await Promise.all(d(this.brokers).map((t=>t.disconnect())));this.brokers={};this.metadata=null;this.versions=null}removeBroker({host:t,port:e}){const r=d(this.brokers).find((r=>r.connectionPool.host===t&&r.connectionPool.port===e));if(r){delete this.brokers[r.nodeId];this.metadataExpireAt=null;if(this.seedBroker.nodeId===r.nodeId){this.seedBroker=n(d(this.brokers))[0]}}}async refreshMetadata(t){const e=await this.findConnectedBroker();const{host:r,port:o}=this.seedBroker.connectionPool;return this.retrier((async(s,n,a)=>{try{this.metadata=await e.metadata(t);this.metadataExpireAt=Date.now()+this.metadataMaxAge;const s=[];this.brokers=await this.metadata.brokers.reduce((async(t,{nodeId:e,host:n,port:i,rack:a})=>{const c=await t;if(c[e]){if(!hasBrokerBeenReplaced(c[e],{host:n,port:i,rack:a})){return c}s.push(c[e])}if(n===r&&i===o){this.seedBroker.nodeId=e;this.seedBroker.connectionPool.rack=a;return p(c,{[e]:this.seedBroker})}return p(c,{[e]:this.createBroker({logger:this.rootLogger,versions:this.versions,connectionPool:await this.connectionPoolBuilder.build({host:n,port:i,rack:a}),nodeId:e})})}),this.brokers);const n=this.metadata.brokers.map((({nodeId:t})=>`${t}`)).sort();const a=u(this.brokers).sort();const c=i(a,n);const d=c.map((t=>{const e=this.brokers[t];return e.disconnect().then((()=>{delete this.brokers[t]}))}));const l=s.map((t=>t.disconnect()));await Promise.all([...d,...l])}catch(t){if(t.type==="LEADER_NOT_AVAILABLE"){throw t}s(t)}}))}async refreshMetadataIfNecessary(t){const e=this.metadata==null||this.metadataExpireAt==null||Date.now()>this.metadataExpireAt||!t.every((t=>this.metadata.topicMetadata.some((e=>e.topic===t))));if(e){return this.refreshMetadata(t)}}getNodeIds(){return u(this.brokers)}async findBroker({nodeId:t}){const e=this.brokers[t];if(!e){throw new a(`Broker ${t} not found in the cached metadata`)}await this.connectBroker(e);return e}async withBroker(t){const e=n(u(this.brokers));if(e.length===0){throw new a("No brokers in the broker pool")}for(const r of e){const e=await this.findBroker({nodeId:r});try{return await t({nodeId:r,broker:e})}catch(t){}}return null}async findConnectedBroker(){const t=n(u(this.brokers));const e=t.find((t=>this.brokers[t].isConnected()));if(e){return await this.findBroker({nodeId:e})}for(const e of t){try{return await this.findBroker({nodeId:e})}catch(t){}}await this.connect();return this.seedBroker}async connectBroker(t){if(t.isConnected()){return}return this.retrier((async(e,r,o)=>{try{await t.connect()}catch(s){if(s.name==="KafkaJSConnectionError"||s.type==="ILLEGAL_SASL_STATE"){await t.disconnect()}if(s.name==="KafkaJSConnectionError"){return e(s)}if(s.type==="ILLEGAL_SASL_STATE"){t.connectionPool=await this.connectionPoolBuilder.build({host:t.connectionPool.host,port:t.connectionPool.port,rack:t.connectionPool.rack});this.logger.error(`Failed to connect to broker, reconnecting`,{retryCount:r,retryTime:o});throw new c(s,{retriable:true})}if(s.retriable)throw s;this.logger.error(s,{retryCount:r,retryTime:o,stack:s.stack});e(s)}}))}}},9145:function(t,e,r){const{KafkaJSConnectionError:o,KafkaJSNonRetriableError:s}=r(1331);const n=r(3853);t.exports=({socketFactory:t,brokers:e,ssl:r,sasl:i,clientId:a,requestTimeout:c,enforceRequestTimeout:u,connectionTimeout:p,maxInFlightRequests:d,logger:l,instrumentationEmitter:f=null,reauthenticationThreshold:h})=>{let m=0;const isValidBroker=t=>t&&typeof t==="string"&&t.length>0;const validateBrokers=t=>{if(!t){throw new s(`Failed to connect: brokers should not be null`)}if(Array.isArray(t)){if(!t.length){throw new s(`Failed to connect: brokers array is empty`)}t.forEach(((t,e)=>{if(!isValidBroker(t)){throw new s(`Failed to connect: broker at index ${e} is invalid "${typeof t}"`)}}))}};const getBrokers=async()=>{let t;if(typeof e==="function"){try{t=await e()}catch(t){const e=new o(`Failed to connect: "config.brokers" threw: ${t.message}`);e.stack=`${e.name}\n  Caused by: ${t.stack}`;throw e}}else{t=e}validateBrokers(t);return t};return{build:async({host:e,port:o,rack:s}={})=>{if(!e){const t=await getBrokers();const r=t[m++%t.length];e=r.split(":")[0];o=Number(r.split(":")[1])}return new n({host:e,port:o,rack:s,sasl:i,ssl:r,clientId:a,socketFactory:t,connectionTimeout:p,requestTimeout:c,enforceRequestTimeout:u,maxInFlightRequests:d,instrumentationEmitter:f,logger:l,reauthenticationThreshold:h})}}}},4428:function(t,e,r){const o=r(964);const s=r(6249);const n=r(9964);const i=r(4091);const a=r(9145);const{EARLIEST_OFFSET:c,LATEST_OFFSET:u}=r(8691);const{KafkaJSError:p,KafkaJSBrokerNotFound:d,KafkaJSMetadataNotLoaded:l,KafkaJSTopicMetadataNotLoaded:f,KafkaJSGroupCoordinatorNotFound:h}=r(1331);const m=r(8853);const{keys:g}=Object;const mergeTopics=(t,{topic:e,partitions:r})=>({...t,[e]:[...t[e]||[],...r]});const I={CONNECT:Symbol("private:Cluster:connect"),REFRESH_METADATA:Symbol("private:Cluster:refreshMetadata"),REFRESH_METADATA_IF_NECESSARY:Symbol("private:Cluster:refreshMetadataIfNecessary"),FIND_CONTROLLER_BROKER:Symbol("private:Cluster:findControllerBroker")};t.exports=class Cluster{constructor({logger:t,socketFactory:e,brokers:r,ssl:c,sasl:u,clientId:p,connectionTimeout:f,authenticationTimeout:h,reauthenticationThreshold:m,requestTimeout:g=3e4,enforceRequestTimeout:y,metadataMaxAge:w,retry:T,allowAutoTopicCreation:E,maxInFlightRequests:S,isolationLevel:b,instrumentationEmitter:A=null,offsets:O=new Map}){this.rootLogger=t;this.logger=t.namespace("Cluster");this.retrier=i(T);this.connectionPoolBuilder=a({logger:t,instrumentationEmitter:A,socketFactory:e,brokers:r,ssl:c,sasl:u,clientId:p,connectionTimeout:f,requestTimeout:g,enforceRequestTimeout:y,maxInFlightRequests:S,reauthenticationThreshold:m});this.targetTopics=new Set;this.mutatingTargetTopics=new s({description:`updating target topics`,timeout:g});this.isolationLevel=b;this.brokerPool=new o({connectionPoolBuilder:this.connectionPoolBuilder,logger:this.rootLogger,retry:T,allowAutoTopicCreation:E,authenticationTimeout:h,metadataMaxAge:w});this.committedOffsetsByGroup=O;this[I.CONNECT]=n((async()=>await this.brokerPool.connect()));this[I.REFRESH_METADATA]=n((async()=>await this.brokerPool.refreshMetadata(Array.from(this.targetTopics))));this[I.REFRESH_METADATA_IF_NECESSARY]=n((async()=>await this.brokerPool.refreshMetadataIfNecessary(Array.from(this.targetTopics))));this[I.FIND_CONTROLLER_BROKER]=n((async()=>{const{metadata:t}=this.brokerPool;if(!t||t.controllerId==null){throw new l("Topic metadata not loaded")}const e=await this.findBroker({nodeId:t.controllerId});if(!e){throw new d(`Controller broker with id ${t.controllerId} not found in the cached metadata`)}return e}))}isConnected(){return this.brokerPool.hasConnectedBrokers()}async connect(){await this[I.CONNECT]()}async disconnect(){await this.brokerPool.disconnect()}removeBroker({host:t,port:e}){this.brokerPool.removeBroker({host:t,port:e})}async refreshMetadata(){await this[I.REFRESH_METADATA]()}async refreshMetadataIfNecessary(){await this[I.REFRESH_METADATA_IF_NECESSARY]()}async metadata({topics:t=[]}={}){return this.retrier((async(e,r,o)=>{try{await this.brokerPool.refreshMetadataIfNecessary(t);return this.brokerPool.withBroker((async({broker:e})=>e.metadata(t)))}catch(t){if(t.type==="LEADER_NOT_AVAILABLE"){throw t}e(t)}}))}async addTargetTopic(t){return this.addMultipleTargetTopics([t])}async addMultipleTargetTopics(t){await this.mutatingTargetTopics.acquire();try{const e=this.targetTopics.size;const r=new Set(this.targetTopics);for(const e of t){this.targetTopics.add(e)}const o=e!==this.targetTopics.size||!this.brokerPool.metadata;if(o){try{await this.refreshMetadata()}catch(t){if(t.type==="INVALID_TOPIC_EXCEPTION"||t.type==="UNKNOWN_TOPIC_OR_PARTITION"||t.type==="TOPIC_AUTHORIZATION_FAILED"){this.targetTopics=r}throw t}}}finally{await this.mutatingTargetTopics.release()}}getNodeIds(){return this.brokerPool.getNodeIds()}async findBroker({nodeId:t}){try{return await this.brokerPool.findBroker({nodeId:t})}catch(t){if(t.name==="KafkaJSBrokerNotFound"||t.name==="KafkaJSLockTimeout"||t.name==="KafkaJSConnectionError"){await this.refreshMetadata()}throw t}}async findControllerBroker(){return await this[I.FIND_CONTROLLER_BROKER]()}findTopicPartitionMetadata(t){const{metadata:e}=this.brokerPool;if(!e||!e.topicMetadata){throw new f("Topic metadata not loaded",{topic:t})}const r=e.topicMetadata.find((e=>e.topic===t));return r?r.partitionMetadata:[]}findLeaderForPartitions(t,e){const r=this.findTopicPartitionMetadata(t);return e.reduce(((e,o)=>{const s=parseInt(o,10);const n=r.find((t=>t.partitionId===s));if(!n){return e}if(n.leader===null||n.leader===undefined){throw new p("Invalid partition metadata",{topic:t,partitionId:s,metadata:n})}const{leader:i}=n;const a=e[i]||[];return{...e,[i]:[...a,s]}}),{})}async findGroupCoordinator({groupId:t,coordinatorType:e=m.GROUP}){return this.retrier((async(r,o,s)=>{try{const{coordinator:r}=await this.findGroupCoordinatorMetadata({groupId:t,coordinatorType:e});return await this.findBroker({nodeId:r.nodeId})}catch(e){if(e.name==="KafkaJSBrokerNotFound"||e.type==="GROUP_COORDINATOR_NOT_AVAILABLE"){this.logger.debug(`${e.message}, refreshing metadata and trying again...`,{groupId:t,retryCount:o,retryTime:s});await this.refreshMetadata();throw e}if(e.code==="ECONNREFUSED"){throw e}r(e)}}))}async findGroupCoordinatorMetadata({groupId:t,coordinatorType:e}){const r=await this.brokerPool.withBroker((async({nodeId:r,broker:o})=>await this.retrier((async(s,n,i)=>{try{const r=await o.findGroupCoordinator({groupId:t,coordinatorType:e});this.logger.debug("Found group coordinator",{broker:r.host,nodeId:r.coordinator.nodeId});return r}catch(e){this.logger.debug("Tried to find group coordinator",{nodeId:r,groupId:t,error:e});if(e.type==="GROUP_COORDINATOR_NOT_AVAILABLE"){this.logger.debug("Group coordinator not available, retrying...",{nodeId:r,retryCount:n,retryTime:i});throw e}s(e)}}))));if(r){return r}throw new h("Failed to find group coordinator")}defaultOffset({fromBeginning:t}){return t?c:u}async fetchTopicsOffset(t){const e={};const r={};const addDefaultOffset=t=>e=>{const{timestamp:o}=r[t];return{...e,timestamp:o}};for(const o of t){const{topic:t,partitions:s,fromBeginning:n,fromTimestamp:i}=o;const a=this.findLeaderForPartitions(t,s.map((t=>t.partition)));const c=i!=null?i:this.defaultOffset({fromBeginning:n});r[t]={timestamp:c};g(a).forEach((r=>{e[r]=e[r]||{};e[r][t]=s.filter((t=>a[r].includes(t.partition)))}))}const o=g(e).map((async t=>{const r=await this.findBroker({nodeId:t});const o=e[t];const{responses:s}=await r.listOffsets({isolationLevel:this.isolationLevel,topics:g(o).map((t=>({topic:t,partitions:o[t].map(addDefaultOffset(t))})))});return s}));const s=await Promise.all(o);const n=s.flat().reduce(mergeTopics,{});return g(n).map((t=>({topic:t,partitions:n[t].map((({partition:t,offset:e})=>({partition:t,offset:e})))})))}committedOffsets({groupId:t}){if(!this.committedOffsetsByGroup.has(t)){this.committedOffsetsByGroup.set(t,{})}return this.committedOffsetsByGroup.get(t)}markOffsetAsCommitted({groupId:t,topic:e,partition:r,offset:o}){const s=this.committedOffsets({groupId:t});s[e]=s[e]||{};s[e][r]=o}}},8691:function(t){const e=-2;const r=-1;const o=Math.pow(2,31)-1;t.exports={EARLIEST_OFFSET:e,LATEST_OFFSET:r,INT_32_MAX_VALUE:o}},5233:function(t,e,r){const o=r(7266);const s=r(9149);const n={encode({version:t,topics:e,userData:r=Buffer.alloc(0)}){return(new o).writeInt16(t).writeArray(e).writeBytes(r).buffer},decode(t){const e=new s(t);return{version:e.readInt16(),topics:e.readArray((t=>t.readString())),userData:e.readBytes()}}};const i={encode({version:t,assignment:e,userData:r=Buffer.alloc(0)}){return(new o).writeInt16(t).writeArray(Object.keys(e).map((t=>(new o).writeString(t).writeArray(e[t])))).writeBytes(r).buffer},decode(t){const e=new s(t);const decodePartitions=t=>t.readInt32();const decodeAssignment=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const indexAssignment=(t,{topic:e,partitions:r})=>Object.assign(t,{[e]:r});if(!e.canReadInt16()){return null}return{version:e.readInt16(),assignment:e.readArray(decodeAssignment).reduce(indexAssignment,{}),userData:e.readBytes()}}};t.exports={MemberMetadata:n,MemberAssignment:i}},6662:function(t,e,r){const o=r(2062);t.exports={roundRobin:o}},2062:function(t,e,r){const{MemberMetadata:o,MemberAssignment:s}=r(5233);t.exports=({cluster:t})=>({name:"RoundRobinAssigner",version:0,async assign({members:e,topics:r}){const o=e.length;const n=e.map((({memberId:t})=>t)).sort();const i={};const a=r.flatMap((e=>{const r=t.findTopicPartitionMetadata(e);return r.map((t=>({topic:e,partitionId:t.partitionId})))}));a.forEach(((t,e)=>{const r=n[e%o];if(!i[r]){i[r]=Object.create(null)}if(!i[r][t.topic]){i[r][t.topic]=[]}i[r][t.topic].push(t.partitionId)}));return Object.keys(i).map((t=>({memberId:t,memberAssignment:s.encode({version:this.version,assignment:i[t]})})))},protocol({topics:t}){return{name:this.name,metadata:o.encode({version:this.version,topics:t})}}})},6327:function(t,e,r){const o=r(8414);const s=r(7007);t.exports=class Batch{constructor(t,e,r){this.fetchedOffset=e;const n=o.fromValue(this.fetchedOffset);const{abortedTransactions:i,messages:a}=r;this.topic=t;this.partition=r.partition;this.highWatermark=r.highWatermark;this.rawMessages=a;this.messagesWithinOffset=this.rawMessages.filter((t=>o.fromValue(t.offset).gte(n)));this.messages=s({messages:this.messagesWithinOffset,abortedTransactions:i}).filter((t=>!t.isControlRecord))}isEmpty(){return this.messages.length===0}isEmptyIncludingFiltered(){return this.messagesWithinOffset.length===0}isEmptyDueToFiltering(){return this.isEmpty()&&this.rawMessages.length>0}isEmptyControlRecord(){return this.isEmpty()&&this.messagesWithinOffset.some((({isControlRecord:t})=>t))}isEmptyDueToLogCompactedMessages(){const t=this.rawMessages.length>0;return t&&this.isEmptyIncludingFiltered()}firstOffset(){return this.isEmptyIncludingFiltered()?null:this.messagesWithinOffset[0].offset}lastOffset(){if(this.isEmptyDueToLogCompactedMessages()){return this.fetchedOffset}if(this.isEmptyIncludingFiltered()){return o.fromValue(this.highWatermark).add(-1).toString()}return this.messagesWithinOffset[this.messagesWithinOffset.length-1].offset}offsetLag(){const t=o.fromValue(this.highWatermark).add(-1);const e=o.fromValue(this.lastOffset());return t.add(e.multiply(-1)).toString()}offsetLagLow(){if(this.isEmptyIncludingFiltered()){return"0"}const t=o.fromValue(this.highWatermark).add(-1);const e=o.fromValue(this.firstOffset());return t.add(e.multiply(-1)).toString()}}},2665:function(t,e,r){const o=r(1341);const s=r(8708);const n=r(9408);const i=r(4091);const a=r(9964);const c=r(8216);const u=r(6327);const p=r(6579);const d=r(2069);const{events:{GROUP_JOIN:l,HEARTBEAT:f,CONNECT:h,RECEIVED_UNSUBSCRIBED_TOPICS:m}}=r(3375);const{MemberAssignment:g}=r(5233);const{KafkaJSError:I,KafkaJSNonRetriableError:y,KafkaJSStaleTopicMetadataAssignment:w,isRebalancing:T}=r(1331);const{keys:E}=Object;const S=["LEADER_NOT_AVAILABLE","NOT_LEADER_FOR_PARTITION","FENCED_LEADER_EPOCH","UNKNOWN_LEADER_EPOCH","UNKNOWN_TOPIC_OR_PARTITION"];const b={JOIN:Symbol("private:ConsumerGroup:join"),SYNC:Symbol("private:ConsumerGroup:sync"),SHARED_HEARTBEAT:Symbol("private:ConsumerGroup:sharedHeartbeat")};t.exports=class ConsumerGroup{constructor({retry:t,cluster:e,groupId:r,topics:o,topicConfigurations:s,logger:n,instrumentationEmitter:c,assigners:u,sessionTimeout:l,rebalanceTimeout:h,maxBytesPerPartition:m,minBytes:g,maxBytes:I,maxWaitTimeInMs:y,autoCommit:w,autoCommitInterval:T,autoCommitThreshold:E,isolationLevel:S,rackId:A,metadataMaxAge:O}){this.cluster=e;this.groupId=r;this.topics=o;this.topicsSubscribed=o;this.topicConfigurations=s;this.logger=n.namespace("ConsumerGroup");this.instrumentationEmitter=c;this.retrier=i(Object.assign({},t));this.assigners=u;this.sessionTimeout=l;this.rebalanceTimeout=h;this.maxBytesPerPartition=m;this.minBytes=g;this.maxBytes=I;this.maxWaitTime=y;this.autoCommit=w;this.autoCommitInterval=T;this.autoCommitThreshold=E;this.isolationLevel=S;this.rackId=A;this.metadataMaxAge=O;this.seekOffset=new p;this.coordinator=null;this.generationId=null;this.leaderId=null;this.memberId=null;this.members=null;this.groupProtocol=null;this.partitionsPerSubscribedTopic=null;this.preferredReadReplicasPerTopicPartition={};this.offsetManager=null;this.subscriptionState=new d;this.lastRequest=Date.now();this[b.SHARED_HEARTBEAT]=a((async({interval:t})=>{const{groupId:e,generationId:r,memberId:o}=this;const s=Date.now();if(o&&s>=this.lastRequest+t){const t={groupId:e,memberId:o,groupGenerationId:r};await this.coordinator.heartbeat(t);this.instrumentationEmitter.emit(f,t);this.lastRequest=Date.now()}}))}isLeader(){return this.leaderId&&this.memberId===this.leaderId}getNodeIds(){return this.cluster.getNodeIds()}async connect(){await this.cluster.connect();this.instrumentationEmitter.emit(h);await this.cluster.refreshMetadataIfNecessary()}async[b.JOIN](){const{groupId:t,sessionTimeout:e,rebalanceTimeout:r}=this;this.coordinator=await this.cluster.findGroupCoordinator({groupId:t});const o=await this.coordinator.joinGroup({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:this.memberId||"",groupProtocols:this.assigners.map((t=>t.protocol({topics:this.topicsSubscribed})))});this.generationId=o.generationId;this.leaderId=o.leaderId;this.memberId=o.memberId;this.members=o.members;this.groupProtocol=o.groupProtocol}async leave(){const{groupId:t,memberId:e}=this;if(e){await this.coordinator.leaveGroup({groupId:t,memberId:e});this.memberId=null}}async[b.SYNC](){let t=[];const{groupId:e,generationId:r,memberId:o,members:i,groupProtocol:a,topics:u,topicsSubscribed:p,coordinator:d}=this;if(this.isLeader()){this.logger.debug("Chosen as group leader",{groupId:e,generationId:r,memberId:o,topics:u});const s=this.assigners.find((({name:t})=>t===a));if(!s){throw new y(`Unsupported partition assigner "${a}", the assigner wasn't found in the assigners list`)}await this.cluster.refreshMetadata();t=await s.assign({members:i,topics:p});this.logger.debug("Group assignment",{groupId:e,generationId:r,groupProtocol:a,assignment:t,topics:p})}this.partitionsPerSubscribedTopic=this.generatePartitionsPerSubscribedTopic();const{memberAssignment:l}=await this.coordinator.syncGroup({groupId:e,generationId:r,memberId:o,groupAssignment:t});const f=g.decode(l);const h=f!=null?f.assignment:{};this.logger.debug("Received assignment",{groupId:e,generationId:r,memberId:o,memberAssignment:h});const I=E(h);const w=n(I,p);if(w.length>0){const t={groupId:e,generationId:r,memberId:o,assignedTopics:I,topicsSubscribed:p,topicsNotSubscribed:w};this.instrumentationEmitter.emit(m,t);this.logger.warn("Consumer group received unsubscribed topics",{...t,helpUrl:s("docs/faq","why-am-i-receiving-messages-for-topics-i-m-not-subscribed-to")})}const T=n(I,w);const S=T.map((t=>({topic:t,partitions:h[t]})));for(const t of S){const{topic:s,partitions:n}=t;const i=this.partitionsPerSubscribedTopic.get(s);const a=n.every((t=>i.includes(t)));if(!a){this.logger.warn("Consumer is not aware of all assigned partitions, refreshing metadata",{groupId:e,generationId:r,memberId:o,topic:s,knownPartitions:i,assignedPartitions:n});await this.cluster.refreshMetadata();this.partitionsPerSubscribedTopic=this.generatePartitionsPerSubscribedTopic();break}}this.topics=S.map((({topic:t})=>t));this.subscriptionState.assign(S);this.offsetManager=new c({cluster:this.cluster,topicConfigurations:this.topicConfigurations,instrumentationEmitter:this.instrumentationEmitter,memberAssignment:S.reduce(((t,{topic:e,partitions:r})=>({...t,[e]:r})),{}),autoCommit:this.autoCommit,autoCommitInterval:this.autoCommitInterval,autoCommitThreshold:this.autoCommitThreshold,coordinator:d,groupId:e,generationId:r,memberId:o})}joinAndSync(){const t=Date.now();return this.retrier((async e=>{try{await this[b.JOIN]();await this[b.SYNC]();const e=this.assigned().reduce(((t,{topic:e,partitions:r})=>({...t,[e]:r})),{});const r={groupId:this.groupId,memberId:this.memberId,leaderId:this.leaderId,isLeader:this.isLeader(),memberAssignment:e,groupProtocol:this.groupProtocol,duration:Date.now()-t};this.instrumentationEmitter.emit(l,r);this.logger.info("Consumer has joined the group",r)}catch(t){if(T(t)){throw new I(t)}if(t.type==="UNKNOWN_MEMBER_ID"){this.memberId=null;throw new I(t)}e(t)}}))}resetOffset({topic:t,partition:e}){this.offsetManager.resetOffset({topic:t,partition:e})}resolveOffset({topic:t,partition:e,offset:r}){this.offsetManager.resolveOffset({topic:t,partition:e,offset:r})}seek({topic:t,partition:e,offset:r}){this.seekOffset.set(t,e,r)}pause(t){this.logger.info(`Pausing fetching from ${t.length} topics`,{topicPartitions:t});this.subscriptionState.pause(t)}resume(t){this.logger.info(`Resuming fetching from ${t.length} topics`,{topicPartitions:t});this.subscriptionState.resume(t)}assigned(){return this.subscriptionState.assigned()}paused(){return this.subscriptionState.paused()}isPaused(t,e){return this.subscriptionState.isPaused(t,e)}async commitOffsetsIfNecessary(){await this.offsetManager.commitOffsetsIfNecessary()}async commitOffsets(t){await this.offsetManager.commitOffsets(t)}uncommittedOffsets(){return this.offsetManager.uncommittedOffsets()}async heartbeat({interval:t}){return this[b.SHARED_HEARTBEAT]({interval:t})}async fetch(t){try{await this.cluster.refreshMetadataIfNecessary();this.checkForStaleAssignment();let e=this.subscriptionState.assigned();e=this.filterPartitionsByNode(t,e);await this.seekOffsets(e);const r=this.offsetManager.committedOffsets();const s=this.getActiveTopicPartitions();const n=e.map((({topic:t,partitions:e})=>({topic:t,partitions:e.filter((e=>r[t][e]!=null&&s[t].has(e))).map((e=>({partition:e,fetchOffset:this.offsetManager.nextOffset(t,e).toString(),maxBytes:this.maxBytesPerPartition})))}))).filter((({partitions:t})=>t.length));if(!n.length){await o(this.maxWaitTime);return[]}const i=await this.cluster.findBroker({nodeId:t});const{responses:a}=await i.fetch({maxWaitTime:this.maxWaitTime,minBytes:this.minBytes,maxBytes:this.maxBytes,isolationLevel:this.isolationLevel,topics:n,rackId:this.rackId});return a.flatMap((({topicName:t,partitions:e})=>{const r=n.find((({topic:e})=>e===t));let o=this.preferredReadReplicasPerTopicPartition[t];if(!o){this.preferredReadReplicasPerTopicPartition[t]=o={}}return e.filter((({partition:e})=>!this.seekOffset.has(t,e)&&!this.subscriptionState.isPaused(t,e))).map((e=>{const{partition:s,preferredReadReplica:n}=e;if(n!=null&&n!==-1){const{nodeId:e}=o[s]||{};if(e!==n){this.logger.info(`Preferred read replica is now ${n}`,{groupId:this.groupId,memberId:this.memberId,topic:t,partition:s})}o[s]={nodeId:n,expireAt:Date.now()+this.metadataMaxAge}}const i=r.partitions.find((({partition:t})=>t===e.partition));const a=i.fetchOffset;return new u(t,a,e)}))}))}catch(t){await this.recoverFromFetch(t);return[]}}async recoverFromFetch(t){if(S.includes(t.type)||t.name==="KafkaJSTopicMetadataNotLoaded"){this.logger.debug("Stale cluster metadata, refreshing...",{groupId:this.groupId,memberId:this.memberId,error:t.message});await this.cluster.refreshMetadata();await this.joinAndSync();return}if(t.name==="KafkaJSStaleTopicMetadataAssignment"){this.logger.warn(`${t.message}, resync group`,{groupId:this.groupId,memberId:this.memberId,topic:t.topic,unknownPartitions:t.unknownPartitions});await this.joinAndSync();return}if(t.name==="KafkaJSOffsetOutOfRange"){await this.recoverFromOffsetOutOfRange(t);return}if(t.name==="KafkaJSConnectionClosedError"){this.cluster.removeBroker({host:t.host,port:t.port});return}if(t.name==="KafkaJSBrokerNotFound"||t.name==="KafkaJSConnectionClosedError"){this.logger.debug(`${t.message}, refreshing metadata and retrying...`);await this.cluster.refreshMetadata();return}throw t}async recoverFromOffsetOutOfRange(t){const e=this.preferredReadReplicasPerTopicPartition[t.topic];if(e&&typeof e[t.partition]==="number"){this.logger.info("Offset out of range while fetching from follower, retrying with leader",{topic:t.topic,partition:t.partition,groupId:this.groupId,memberId:this.memberId});delete e[t.partition]}else{this.logger.error("Offset out of range, resetting to default offset",{topic:t.topic,partition:t.partition,groupId:this.groupId,memberId:this.memberId});await this.offsetManager.setDefaultOffset({topic:t.topic,partition:t.partition})}}generatePartitionsPerSubscribedTopic(){const t=new Map;for(const e of this.topicsSubscribed){const r=this.cluster.findTopicPartitionMetadata(e).map((t=>t.partitionId)).sort();t.set(e,r)}return t}checkForStaleAssignment(){if(!this.partitionsPerSubscribedTopic){return}const t=this.generatePartitionsPerSubscribedTopic();for(const[e,r]of t){const t=n(r,this.partitionsPerSubscribedTopic.get(e));if(t.length>0){throw new w("Topic has been updated",{topic:e,unknownPartitions:t})}}}async seekOffsets(t){for(const{topic:e,partitions:r}of t){for(const t of r){const r=this.seekOffset.pop(e,t);if(!r){continue}this.logger.debug("Seek offset",{groupId:this.groupId,memberId:this.memberId,seek:r});await this.offsetManager.seek(r)}}await this.offsetManager.resolveOffsets()}hasSeekOffset({topic:t,partition:e}){return this.seekOffset.has(t,e)}findReadReplicaForPartitions(t,e){const r=this.cluster.findTopicPartitionMetadata(t);const o=this.preferredReadReplicasPerTopicPartition[t];return e.reduce(((e,s)=>{const n=parseInt(s,10);const i=r.find((t=>t.partitionId===n));if(!i){return e}if(i.leader==null){throw new I("Invalid partition metadata",{topic:t,partitionId:n,metadata:i})}let a=i.leader;if(o){const{nodeId:e,expireAt:r}=o[n]||{};if(Date.now()>=r){this.logger.debug("Preferred read replica information has expired, using leader",{topic:t,partitionId:n,groupId:this.groupId,memberId:this.memberId,preferredReadReplica:e,leader:i.leader});delete o[n]}else if(e!=null){const r=i.offlineReplicas;if(Array.isArray(r)&&r.includes(a)){this.logger.debug("Preferred read replica is offline, using leader",{topic:t,partitionId:n,groupId:this.groupId,memberId:this.memberId,preferredReadReplica:e,leader:i.leader})}else{a=e}}}const c=e[a]||[];return{...e,[a]:[...c,n]}}),{})}filterPartitionsByNode(t,e){return e.map((({topic:e,partitions:r})=>({topic:e,partitions:this.findReadReplicaForPartitions(e,r)[t]||[]})))}getActiveTopicPartitions(){const t=this.subscriptionState.active();const e={};t.forEach((({topic:t,partitions:r})=>{e[t]=new Set(r)}));return e}}},7299:function(t,e,r){const o=r(6553);const s=r(9904);const n=r(359);const i=r(2615);const{KafkaJSFetcherRebalanceError:a,KafkaJSNoBrokerAvailableError:c}=r(1331);const createFetchManager=({logger:t,getNodeIds:e,fetch:r,handler:u,concurrency:p=1})=>{const d=t.namespace("FetchManager");const l=o(p,(t=>n({handler:u,workerId:t})));const f=i({workers:l});let h=[];const getFetchers=()=>h;const createFetchers=()=>{const t=e();const o=new Map;if(t.length===0){throw new c}const validateShouldRebalance=()=>{const r=e();const o=t.length!==r.length||t.some((t=>!r.includes(t)));if(o&&r.length!==0){throw new a}};const n=t.map((t=>s({nodeId:t,workerQueue:f,partitionAssignments:o,fetch:async t=>{validateShouldRebalance();return r(t)},logger:d})));d.debug(`Created ${n.length} fetchers`,{nodeIds:t,concurrency:p});return n};const start=async()=>{d.debug("Starting...");while(true){h=createFetchers();try{await Promise.all(h.map((t=>t.start())))}catch(t){await stop();if(t instanceof a){d.debug("Rebalancing fetchers...");continue}throw t}break}};const stop=async()=>{d.debug("Stopping fetchers...");await Promise.all(h.map((t=>t.stop())));d.debug("Stopped fetchers")};return{start:start,stop:stop,getFetchers:getFetchers}};t.exports=createFetchManager},9904:function(t,e,r){const o=r(2361);const createFetcher=({nodeId:t,workerQueue:e,partitionAssignments:r,fetch:s,logger:n})=>{const i=n.namespace(`Fetcher ${t}`);const a=new o;let c=false;const getWorkerQueue=()=>e;const assignmentKey=({topic:t,partition:e})=>`${t}|${e}`;const getAssignedFetcher=t=>r.get(assignmentKey(t));const assignTopicPartition=e=>r.set(assignmentKey(e),t);const unassignTopicPartition=t=>r.delete(assignmentKey(t));const filterUnassignedBatches=e=>e.filter((e=>{const r=getAssignedFetcher(e);if(r!=null&&r!==t){i.info("Filtering out batch due to partition already being processed by another fetcher",{topic:e.topic,partition:e.partition,assignedFetcher:r,fetcher:t});return false}return true}));const start=async()=>{if(c)return;c=true;while(c){try{const r=await s(t);if(c){const t=filterUnassignedBatches(r);if(t.length>0){t.forEach(assignTopicPartition);try{await e.push(...t)}finally{t.forEach(unassignTopicPartition)}}}}catch(t){c=false;a.emit("end");throw t}}a.emit("end")};const stop=async()=>{if(!c)return;c=false;await new Promise((t=>a.once("end",(()=>t()))))};return{start:start,stop:stop,getWorkerQueue:getWorkerQueue}};t.exports=createFetcher},7007:function(t,e,r){const o=r(8414);const s=Buffer.from([0,0,0,0]);const isAbortMarker=({key:t})=>{if(!t)return false;return Buffer.from(t).equals(s)};t.exports=({messages:t,abortedTransactions:e})=>{const r=new Map;if(!e||!e.length){return t}const s=[...e];return t.filter((t=>{if(s.length&&o.fromValue(t.offset).gte(s[0].firstOffset)){const{producerId:t}=s.shift();r.set(t,true)}const{producerId:e,inTransaction:n}=t.batchContext;if(isAbortMarker(t)){r.delete(e)}else if(r.has(e)&&n){return false}return true}))}},1884:function(t,e,r){const o=r(8414);const s=r(4091);const{initialRetryTime:n}=r(6395);const i=r(2665);const a=r(7335);const{events:c,wrap:u,unwrap:p}=r(3375);const d=r(547);const{KafkaJSNonRetriableError:l}=r(1331);const{roundRobin:f}=r(6662);const{EARLIEST_OFFSET:h,LATEST_OFFSET:m}=r(8691);const g=r(3541);const I=r(9964);const{keys:y,values:w}=Object;const{CONNECT:T,DISCONNECT:E,STOP:S,CRASH:b}=c;const A=w(c);const O=y(c).map((t=>`consumer.events.${t}`)).join(", ");const C=[o.fromValue(h).toString(),o.fromValue(m).toString()];t.exports=({cluster:t,groupId:e,retry:r,logger:h,partitionAssigners:m=[f],sessionTimeout:w=3e4,rebalanceTimeout:N=6e4,heartbeatInterval:R=3e3,maxBytesPerPartition:k=1048576,minBytes:x=1,maxBytes:v=10485760,maxWaitTimeInMs:_=5e3,isolationLevel:L=g.READ_COMMITTED,rackId:B="",instrumentationEmitter:P,metadataMaxAge:D})=>{if(!e){throw new l("Consumer groupId must be a non-empty string.")}const M=h.namespace("Consumer");const K=P||new d;const U=m.map((r=>r({groupId:e,logger:M,cluster:t})));const V={};let q=null;let G=null;let F=null;if(R>=w){throw new l(`Consumer heartbeatInterval (${R}) must be lower than sessionTimeout (${w}). It is recommended to set heartbeatInterval to approximately a third of the sessionTimeout.`)}const connect=async()=>{await t.connect();K.emit(T)};const disconnect=async()=>{try{await J();M.debug("consumer has stopped, disconnecting",{groupId:e});await t.disconnect();K.emit(E)}catch(t){M.error(`Caught error when disconnecting the consumer: ${t.message}`,{stack:t.stack,groupId:e});throw t}};const J=I((async()=>{try{if(q){await q.stop();q=null;G=null;K.emit(S)}clearTimeout(F);M.info("Stopped",{groupId:e})}catch(t){M.error(`Caught error when stopping the consumer: ${t.message}`,{stack:t.stack,groupId:e});throw t}}));const subscribe=async({topic:r,topics:o,fromBeginning:s=false})=>{if(G){throw new l("Cannot subscribe to topic while consumer is running")}if(!r&&!o){throw new l('Missing required argument "topics"')}if(o!=null&&!Array.isArray(o)){throw new l('Argument "topics" must be an array')}const n=o||[r];for(const t of n){if(typeof t!=="string"&&!(t instanceof RegExp)){throw new l(`Invalid topic ${t} (${typeof t}), the topic name has to be a String or a RegExp`)}}const i=n.some((t=>t instanceof RegExp));const a=i?await t.metadata():undefined;const c=[];for(const t of n){const r=t instanceof RegExp;if(r){const r=t;const o=a.topicMetadata.map((({topic:t})=>t)).filter((t=>r.test(t)));M.debug("Subscription based on RegExp",{groupId:e,topicRegExp:r.toString(),matchedTopics:o});c.push(...o)}else{c.push(t)}}for(const t of c){V[t]={fromBeginning:s}}await t.addMultipleTargetTopics(c)};const run=async({autoCommit:o=true,autoCommitInterval:s=null,autoCommitThreshold:c=null,eachBatchAutoResolve:u=true,partitionsConsumedConcurrently:p=1,eachBatch:d=null,eachMessage:l=null}={})=>{if(G){M.warn("consumer#run was called, but the consumer is already running",{groupId:e});return}const start=async n=>{M.info("Starting",{groupId:e});G=new i({logger:h,topics:y(V),topicConfigurations:V,retry:r,cluster:t,groupId:e,assigners:U,sessionTimeout:w,rebalanceTimeout:N,maxBytesPerPartition:k,minBytes:x,maxBytes:v,maxWaitTimeInMs:_,instrumentationEmitter:K,isolationLevel:L,rackId:B,metadataMaxAge:D,autoCommit:o,autoCommitInterval:s,autoCommitThreshold:c});q=new a({logger:h,consumerGroup:G,instrumentationEmitter:K,heartbeatInterval:R,retry:r,autoCommit:o,eachBatchAutoResolve:u,eachBatch:d,eachMessage:l,onCrash:n,concurrency:p});await q.start()};const onCrash=async o=>{M.error(`Crash: ${o.name}: ${o.message}`,{groupId:e,retryCount:o.retryCount,stack:o.stack});if(o.name==="KafkaJSConnectionClosedError"){t.removeBroker({host:o.host,port:o.port})}await disconnect();const getOriginalCause=t=>{if(t.cause){return getOriginalCause(t.cause)}return t};const s=o.name==="KafkaJSNumberOfRetriesExceeded"||getOriginalCause(o).retriable===true;const i=s&&(!r||!r.restartOnFailure||await r.restartOnFailure(o).catch((t=>{M.error('Caught error when invoking user-provided "restartOnFailure" callback. Defaulting to restarting.',{error:t.message||t,cause:o.message||o,groupId:e});return true})));K.emit(b,{error:o,groupId:e,restart:i});if(i){const t=o.retryTime||r&&r.initialRetryTime||n;M.error(`Restarting the consumer in ${t}ms`,{retryCount:o.retryCount,retryTime:t,groupId:e});F=setTimeout((()=>start(onCrash)),t)}};await start(onCrash)};const on=(t,e)=>{if(!A.includes(t)){throw new l(`Event name should be one of ${O}`)}return K.addListener(p(t),(r=>{r.type=u(r.type);Promise.resolve(e(r)).catch((e=>{M.error(`Failed to execute listener: ${e.message}`,{eventName:t,stack:e.stack})}))}))};const commitOffsets=async(t=[])=>{const e=t.reduce(((t,{topic:e,partition:r,offset:s,metadata:n=null})=>{if(!e){throw new l(`Invalid topic ${e}`)}if(isNaN(r)){throw new l(`Invalid partition, expected a number received ${r}`)}let i;try{i=o.fromValue(s)}catch(t){throw new l(`Invalid offset, expected a long received ${s}`)}if(i.lessThan(0)){throw new l("Offset must not be a negative number")}if(n!==null&&typeof n!=="string"){throw new l(`Invalid offset metadata, expected string or null, received ${n}`)}const a=t[e]||[];a.push({partition:r,offset:i,metadata:n});return{...t,[e]:a}}),{});if(!G){throw new l("Consumer group was not initialized, consumer#run must be called first")}const r=Object.keys(e);return q.commitOffsets({topics:r.map((t=>({topic:t,partitions:e[t]})))})};const seek=({topic:t,partition:e,offset:r})=>{if(!t){throw new l(`Invalid topic ${t}`)}if(isNaN(e)){throw new l(`Invalid partition, expected a number received ${e}`)}let s;try{s=o.fromValue(r)}catch(t){throw new l(`Invalid offset, expected a long received ${r}`)}if(s.lessThan(0)&&!C.includes(s.toString())){throw new l("Offset must not be a negative number")}if(!G){throw new l("Consumer group was not initialized, consumer#run must be called first")}G.seek({topic:t,partition:e,offset:s.toString()})};const describeGroup=async()=>{const o=await t.findGroupCoordinator({groupId:e});const n=s(r);return n((async()=>{const{groups:t}=await o.describeGroups({groupIds:[e]});return t.find((t=>t.groupId===e))}))};const pause=(t=[])=>{for(const e of t){if(!e||!e.topic){throw new l(`Invalid topic ${e&&e.topic||e}`)}else if(typeof e.partitions!=="undefined"&&(!Array.isArray(e.partitions)||e.partitions.some(isNaN))){throw new l(`Array of valid partitions required to pause specific partitions instead of ${e.partitions}`)}}if(!G){throw new l("Consumer group was not initialized, consumer#run must be called first")}G.pause(t)};const paused=()=>{if(!G){return[]}return G.paused()};const resume=(t=[])=>{for(const e of t){if(!e||!e.topic){throw new l(`Invalid topic ${e&&e.topic||e}`)}else if(typeof e.partitions!=="undefined"&&(!Array.isArray(e.partitions)||e.partitions.some(isNaN))){throw new l(`Array of valid partitions required to resume specific partitions instead of ${e.partitions}`)}}if(!G){throw new l("Consumer group was not initialized, consumer#run must be called first")}G.resume(t)};const getLogger=()=>M;return{connect:connect,disconnect:disconnect,subscribe:subscribe,stop:J,run:run,commitOffsets:commitOffsets,seek:seek,describeGroup:describeGroup,pause:pause,paused:paused,resume:resume,on:on,events:c,logger:getLogger}}},3375:function(t,e,r){const o=r(5780);const s=r(1347);const n=r(4976);const i=s("consumer");const a={HEARTBEAT:i("heartbeat"),COMMIT_OFFSETS:i("commit_offsets"),GROUP_JOIN:i("group_join"),FETCH:i("fetch"),FETCH_START:i("fetch_start"),START_BATCH_PROCESS:i("start_batch_process"),END_BATCH_PROCESS:i("end_batch_process"),CONNECT:i("connect"),DISCONNECT:i("disconnect"),STOP:i("stop"),CRASH:i("crash"),REBALANCING:i("rebalancing"),RECEIVED_UNSUBSCRIBED_TOPICS:i("received_unsubscribed_topics"),REQUEST:i(n.NETWORK_REQUEST),REQUEST_TIMEOUT:i(n.NETWORK_REQUEST_TIMEOUT),REQUEST_QUEUE_SIZE:i(n.NETWORK_REQUEST_QUEUE_SIZE)};const c={[a.REQUEST]:n.NETWORK_REQUEST,[a.REQUEST_TIMEOUT]:n.NETWORK_REQUEST_TIMEOUT,[a.REQUEST_QUEUE_SIZE]:n.NETWORK_REQUEST_QUEUE_SIZE};const u=o(c);const unwrap=t=>c[t]||t;const wrap=t=>u[t]||t;t.exports={events:a,wrap:wrap,unwrap:unwrap}},8216:function(t,e,r){const o=r(8414);const s=r(9229);const n=r(463);const{events:{COMMIT_OFFSETS:i}}=r(3375);const{keys:a,assign:c}=Object;const indexTopics=t=>t.reduce(((t,e)=>c(t,{[e]:{}})),{});const u={COMMITTED_OFFSETS:Symbol("private:OffsetManager:committedOffsets")};t.exports=class OffsetManager{constructor({cluster:t,coordinator:e,memberAssignment:r,autoCommit:o,autoCommitInterval:s,autoCommitThreshold:n,topicConfigurations:i,instrumentationEmitter:c,groupId:u,generationId:p,memberId:d}){this.cluster=t;this.coordinator=e;this.memberAssignment=r;this.topicConfigurations=i;this.instrumentationEmitter=c;this.groupId=u;this.generationId=p;this.memberId=d;this.autoCommit=o;this.autoCommitInterval=s;this.autoCommitThreshold=n;this.lastCommit=Date.now();this.topics=a(r);this.clearAllOffsets()}nextOffset(t,e){if(!this.resolvedOffsets[t][e]){this.resolvedOffsets[t][e]=this.committedOffsets()[t][e]}let r=this.resolvedOffsets[t][e];if(s(r)){r="0"}return o.fromValue(r)}async getCoordinator(){if(!this.coordinator.isConnected()){this.coordinator=await this.cluster.findBroker(this.coordinator)}return this.coordinator}resetOffset({topic:t,partition:e}){this.resolvedOffsets[t][e]=this.committedOffsets()[t][e]}resolveOffset({topic:t,partition:e,offset:r}){this.resolvedOffsets[t][e]=o.fromValue(r).add(1).toString()}countResolvedOffsets(){const t=this.committedOffsets();const subtractOffsets=(t,e)=>{const r=o.fromValue(t);return s(e)?r:r.subtract(o.fromValue(e))};const subtractPartitionOffsets=(t,e)=>a(t).map((r=>subtractOffsets(t[r],e[r])));const subtractTopicOffsets=e=>subtractPartitionOffsets(this.resolvedOffsets[e],t[e]);const e=this.topics.flatMap(subtractTopicOffsets);return e.reduce(((t,e)=>t.add(e)),o.fromValue(0))}async setDefaultOffset({topic:t,partition:e}){const{groupId:r,generationId:o,memberId:s}=this;const n=this.cluster.defaultOffset(this.topicConfigurations[t]);const i=await this.getCoordinator();await i.offsetCommit({groupId:r,memberId:s,groupGenerationId:o,topics:[{topic:t,partitions:[{partition:e,offset:n}]}]});this.clearOffsets({topic:t,partition:e})}async seek({topic:t,partition:e,offset:r}){if(!this.memberAssignment[t]||!this.memberAssignment[t].includes(e)){return}if(!this.autoCommit){this.resolveOffset({topic:t,partition:e,offset:o.fromValue(r).subtract(1).toString()});return}const{groupId:s,generationId:n,memberId:i}=this;const a=await this.getCoordinator();await a.offsetCommit({groupId:s,memberId:i,groupGenerationId:n,topics:[{topic:t,partitions:[{partition:e,offset:r}]}]});this.clearOffsets({topic:t,partition:e})}async commitOffsetsIfNecessary(){const t=Date.now();const e=this.autoCommitInterval!=null&&t>=this.lastCommit+this.autoCommitInterval;const r=this.autoCommitThreshold!=null&&this.countResolvedOffsets().gte(o.fromValue(this.autoCommitThreshold));if(e||r){return this.commitOffsets()}}uncommittedOffsets(){const offsets=t=>a(this.resolvedOffsets[t]);const emptyPartitions=({partitions:t})=>t.length>0;const toPartitions=t=>e=>({partition:e,offset:this.resolvedOffsets[t][e]});const changedOffsets=t=>({partition:e,offset:r})=>r!==this.committedOffsets()[t][e]&&o.fromValue(r).greaterThanOrEqual(0);const t=this.topics.map((t=>({topic:t,partitions:offsets(t).map(toPartitions(t)).filter(changedOffsets(t))}))).filter(emptyPartitions);return{topics:t}}async commitOffsets(t={}){const{groupId:e,generationId:r,memberId:o}=this;const{topics:s=this.uncommittedOffsets().topics}=t;if(s.length===0){this.lastCommit=Date.now();return}const n={groupId:e,memberId:o,groupGenerationId:r,topics:s};try{const t=await this.getCoordinator();await t.offsetCommit(n);this.instrumentationEmitter.emit(i,n);s.forEach((({topic:t,partitions:e})=>{const r=e.reduce(((t,{partition:e,offset:r})=>c(t,{[e]:r})),{});this[u.COMMITTED_OFFSETS][t]=c({},this.committedOffsets()[t],r)}));this.lastCommit=Date.now()}catch(t){if(t.type==="NOT_COORDINATOR_FOR_GROUP"){await this.cluster.refreshMetadata()}throw t}}async resolveOffsets(){const{groupId:t}=this;const invalidOffset=t=>e=>s(this.committedOffsets()[t][e]);const e=this.topics.map((t=>({topic:t,partitions:this.memberAssignment[t].filter(invalidOffset(t)).map((t=>({partition:t})))}))).filter((t=>t.partitions.length>0));if(e.length===0){return}const r=await this.getCoordinator();const{responses:o}=await r.offsetFetch({groupId:t,topics:e});const i=o.map((({topic:t,partitions:e})=>c({topic:t,partitions:e.filter((({offset:t})=>s(t))).map((({partition:t})=>c({partition:t})))},this.topicConfigurations[t])));const indexPartitions=(t,{partition:e,offset:r})=>c(t,{[e]:r});const hasUnresolvedPartitions=()=>i.some((t=>t.partitions.length>0));let a=o;if(hasUnresolvedPartitions()){const t=await this.cluster.fetchTopicsOffset(i);a=n(o,t)}a.forEach((({topic:t,partitions:e})=>{this.committedOffsets()[t]=e.reduce(indexPartitions,{...this.committedOffsets()[t]})}))}clearOffsets({topic:t,partition:e}){delete this.committedOffsets()[t][e];delete this.resolvedOffsets[t][e]}clearAllOffsets(){const t=this.committedOffsets();for(const e in t){delete t[e]}for(const e of this.topics){t[e]={}}this.resolvedOffsets=indexTopics(this.topics)}committedOffsets(){if(!this[u.COMMITTED_OFFSETS]){this[u.COMMITTED_OFFSETS]=this.groupId?this.cluster.committedOffsets({groupId:this.groupId}):{}}return this[u.COMMITTED_OFFSETS]}}},463:function(t,e,r){const o=r(9229);const{keys:s,assign:n}=Object;const indexPartitions=(t,{partition:e,offset:r})=>n(t,{[e]:r});const indexTopics=(t,{topic:e,partitions:r})=>n(t,{[e]:r.reduce(indexPartitions,{})});t.exports=(t,e)=>{const r=t.reduce(indexTopics,{});const n=e.reduce(indexTopics,{});return s(r).map((t=>{const e=r[t];return{topic:t,partitions:s(e).map((r=>{const s=e[r];const i=o(s)?n[t][r]:s;return{partition:Number(r),offset:i}}))}}))}},9229:function(t,e,r){const o=r(8414);t.exports=t=>!t&&t!==0||o.fromValue(t).isNegative()},7335:function(t,e,r){const{EventEmitter:o}=r(2361);const s=r(8414);const n=r(4091);const{isKafkaJSError:i,isRebalancing:a}=r(1331);const{events:{FETCH:c,FETCH_START:u,START_BATCH_PROCESS:p,END_BATCH_PROCESS:d,REBALANCING:l}}=r(3375);const f=r(7299);const isSameOffset=(t,e)=>s.fromValue(t).equals(s.fromValue(e));const h="consuming-start";const m="consuming-stop";t.exports=class Runner extends o{constructor({logger:t,consumerGroup:e,instrumentationEmitter:r,eachBatchAutoResolve:o=true,concurrency:s,eachBatch:i,eachMessage:a,heartbeatInterval:c,onCrash:u,retry:p,autoCommit:d=true}){super();this.logger=t.namespace("Runner");this.consumerGroup=e;this.instrumentationEmitter=r;this.eachBatchAutoResolve=o;this.eachBatch=i;this.eachMessage=a;this.heartbeatInterval=c;this.retrier=n(Object.assign({},p));this.onCrash=u;this.autoCommit=d;this.fetchManager=f({logger:this.logger,getNodeIds:()=>this.consumerGroup.getNodeIds(),fetch:t=>this.fetch(t),handler:t=>this.handleBatch(t),concurrency:s});this.running=false;this.consuming=false}get consuming(){return this._consuming}set consuming(t){if(this._consuming!==t){this._consuming=t;this.emit(t?h:m)}}async start(){if(this.running){return}try{await this.consumerGroup.connect();await this.consumerGroup.joinAndSync()}catch(t){return this.onCrash(t)}this.running=true;this.scheduleFetchManager()}scheduleFetchManager(){if(!this.running){this.consuming=false;this.logger.info("consumer not running, exiting",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId});return}this.consuming=true;this.retrier((async(t,e,r)=>{if(!this.running){return}try{await this.fetchManager.start()}catch(o){if(a(o)){this.logger.warn("The group is rebalancing, re-joining",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId,error:o.message});this.instrumentationEmitter.emit(l,{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId});await this.consumerGroup.joinAndSync();return}if(o.type==="UNKNOWN_MEMBER_ID"){this.logger.error("The coordinator is not aware of this member, re-joining the group",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId,error:o.message});this.consumerGroup.memberId=null;await this.consumerGroup.joinAndSync();return}if(o.name==="KafkaJSNotImplemented"){return t(o)}if(o.name==="KafkaJSNoBrokerAvailableError"){return t(o)}this.logger.debug("Error while scheduling fetch manager, trying again...",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId,error:o.message,stack:o.stack,retryCount:e,retryTime:r});throw o}})).then((()=>{this.scheduleFetchManager()})).catch((t=>{this.onCrash(t);this.consuming=false;this.running=false}))}async stop(){if(!this.running){return}this.logger.debug("stop consumer group",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId});this.running=false;try{await this.fetchManager.stop();await this.waitForConsumer();await this.consumerGroup.leave()}catch(t){}}waitForConsumer(){return new Promise((t=>{if(!this.consuming){return t()}this.logger.debug("waiting for consumer to finish...",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId});this.once(m,(()=>t()))}))}async heartbeat(){try{await this.consumerGroup.heartbeat({interval:this.heartbeatInterval})}catch(t){if(a(t)){await this.autoCommitOffsets()}throw t}}async processEachMessage(t){const{topic:e,partition:r}=t;const pause=()=>{this.consumerGroup.pause([{topic:e,partitions:[r]}]);return()=>this.consumerGroup.resume([{topic:e,partitions:[r]}])};for(const o of t.messages){if(!this.running||this.consumerGroup.hasSeekOffset({topic:e,partition:r})){break}try{await this.eachMessage({topic:e,partition:r,message:o,heartbeat:()=>this.heartbeat(),pause:pause})}catch(t){if(!i(t)){this.logger.error(`Error when calling eachMessage`,{topic:e,partition:r,offset:o.offset,stack:t.stack,error:t})}await this.autoCommitOffsets();throw t}this.consumerGroup.resolveOffset({topic:e,partition:r,offset:o.offset});await this.heartbeat();await this.autoCommitOffsetsIfNecessary();if(this.consumerGroup.isPaused(e,r)){break}}}async processEachBatch(t){const{topic:e,partition:r}=t;const o=t.messages[t.messages.length-1];const pause=()=>{this.consumerGroup.pause([{topic:e,partitions:[r]}]);return()=>this.consumerGroup.resume([{topic:e,partitions:[r]}])};try{await this.eachBatch({batch:t,resolveOffset:s=>{const n=o&&isSameOffset(s,o.offset)?t.lastOffset():s;this.consumerGroup.resolveOffset({topic:e,partition:r,offset:n})},heartbeat:()=>this.heartbeat(),pause:pause,commitOffsetsIfNecessary:async t=>t?this.consumerGroup.commitOffsets(t):this.consumerGroup.commitOffsetsIfNecessary(),uncommittedOffsets:()=>this.consumerGroup.uncommittedOffsets(),isRunning:()=>this.running,isStale:()=>this.consumerGroup.hasSeekOffset({topic:e,partition:r})})}catch(o){if(!i(o)){this.logger.error(`Error when calling eachBatch`,{topic:e,partition:r,offset:t.firstOffset(),stack:o.stack,error:o})}await this.autoCommitOffsets();throw o}if(this.eachBatchAutoResolve){this.consumerGroup.resolveOffset({topic:e,partition:r,offset:t.lastOffset()})}}async fetch(t){if(!this.running){this.logger.debug("consumer not running, exiting",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId});return[]}const e=Date.now();this.instrumentationEmitter.emit(u,{nodeId:t});const r=await this.consumerGroup.fetch(t);this.instrumentationEmitter.emit(c,{numberOfBatches:0,duration:Date.now()-e,nodeId:t});if(r.length===0){await this.heartbeat()}return r}async handleBatch(t){if(!this.running){this.logger.debug("consumer not running, exiting",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId});return}const onBatch=async t=>{const e=Date.now();const r={topic:t.topic,partition:t.partition,highWatermark:t.highWatermark,offsetLag:t.offsetLag(),offsetLagLow:t.offsetLagLow(),batchSize:t.messages.length,firstOffset:t.firstOffset(),lastOffset:t.lastOffset()};if(t.isEmptyDueToFiltering()){this.instrumentationEmitter.emit(p,r);this.consumerGroup.resolveOffset({topic:t.topic,partition:t.partition,offset:t.lastOffset()});await this.autoCommitOffsetsIfNecessary();this.instrumentationEmitter.emit(d,{...r,duration:Date.now()-e});await this.heartbeat();return}if(t.isEmpty()){await this.heartbeat();return}this.instrumentationEmitter.emit(p,r);if(this.eachMessage){await this.processEachMessage(t)}else if(this.eachBatch){await this.processEachBatch(t)}this.instrumentationEmitter.emit(d,{...r,duration:Date.now()-e});await this.autoCommitOffsets();await this.heartbeat()};await onBatch(t)}autoCommitOffsets(){if(this.autoCommit){return this.consumerGroup.commitOffsets()}}autoCommitOffsetsIfNecessary(){if(this.autoCommit){return this.consumerGroup.commitOffsetsIfNecessary()}}commitOffsets(t){if(!this.running){this.logger.debug("consumer not running, exiting",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId,offsets:t});return}return this.retrier((async(e,r,o)=>{try{await this.consumerGroup.commitOffsets(t)}catch(s){if(!this.running){this.logger.debug("consumer not running, exiting",{error:s.message,groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId,offsets:t});return}if(s.name==="KafkaJSNotImplemented"){return e(s)}this.logger.debug("Error while committing offsets, trying again...",{groupId:this.consumerGroup.groupId,memberId:this.consumerGroup.memberId,error:s.message,stack:s.stack,retryCount:r,retryTime:o,offsets:t});throw s}}))}}},6579:function(t){t.exports=class SeekOffsets extends Map{getKey(t,e){return JSON.stringify([t,e])}set(t,e,r){const o=this.getKey(t,e);super.set(o,r)}has(t,e){const r=this.getKey(t,e);return super.has(r)}pop(t,e){if(this.size===0||!this.has(t,e)){return}const r=this.getKey(t,e);const o=this.get(r);this.delete(r);return{topic:t,partition:e,offset:o}}}},2069:function(t){const createState=t=>({topic:t,paused:new Set,pauseAll:false,resumed:new Set});t.exports=class SubscriptionState{constructor(){this.assignedPartitionsByTopic={};this.subscriptionStatesByTopic={}}assign(t=[]){this.assignedPartitionsByTopic=t.reduce(((t,{topic:e,partitions:r=[]})=>({...t,[e]:{topic:e,partitions:r}})),{})}pause(t=[]){t.forEach((({topic:t,partitions:e})=>{const r=this.subscriptionStatesByTopic[t]||createState(t);if(typeof e==="undefined"){r.paused.clear();r.resumed.clear();r.pauseAll=true}else if(Array.isArray(e)){e.forEach((t=>{r.paused.add(t);r.resumed.delete(t)}));r.pauseAll=false}this.subscriptionStatesByTopic[t]=r}))}resume(t=[]){t.forEach((({topic:t,partitions:e})=>{const r=this.subscriptionStatesByTopic[t]||createState(t);if(typeof e==="undefined"){r.paused.clear();r.resumed.clear();r.pauseAll=false}else if(Array.isArray(e)){e.forEach((t=>{r.paused.delete(t);if(r.pauseAll){r.resumed.add(t)}}))}this.subscriptionStatesByTopic[t]=r}))}assigned(){return Object.values(this.assignedPartitionsByTopic).map((({topic:t,partitions:e})=>({topic:t,partitions:e.sort()})))}active(){return Object.values(this.assignedPartitionsByTopic).map((({topic:t,partitions:e})=>({topic:t,partitions:e.filter((e=>!this.isPaused(t,e))).sort()})))}paused(){return Object.values(this.assignedPartitionsByTopic).map((({topic:t,partitions:e})=>({topic:t,partitions:e.filter((e=>this.isPaused(t,e))).sort()}))).filter((({partitions:t})=>t.length!==0))}isPaused(t,e){const r=this.subscriptionStatesByTopic[t];if(!r){return false}const o=r.resumed.has(e);const s=r.paused.has(e);return r.pauseAll&&!o||s}}},359:function(t,e,r){const o=r(9964);const createWorker=({handler:t,workerId:e})=>{const r=o((async({next:r})=>{while(true){const o=r();if(!o)break;const{batch:s,resolve:n,reject:i}=o;try{await t(s,{workerId:e});n()}catch(t){i(t)}}}));return{run:r}};t.exports=createWorker},2615:function(t){const createWorkerQueue=({workers:t})=>{const e=[];const getWorkers=()=>t;const push=async(...r)=>{const o=r.map((t=>new Promise(((r,o)=>e.push({batch:t,resolve:r,reject:o})))));t.forEach((t=>t.run({next:()=>e.shift()})));const s=await Promise.allSettled(o);const n=s.find((t=>t.status==="rejected"));if(n){throw n.reason}};return{push:push,getWorkers:getWorkers}};t.exports=createWorkerQueue},4832:function(t){t.exports=()=>({KAFKAJS_DEBUG_PROTOCOL_BUFFERS:process.env.KAFKAJS_DEBUG_PROTOCOL_BUFFERS,KAFKAJS_DEBUG_EXTENDED_PROTOCOL_BUFFERS:process.env.KAFKAJS_DEBUG_EXTENDED_PROTOCOL_BUFFERS})},1331:function(t,e,r){const o=r(5557);const{bugs:s}=o;class KafkaJSError extends Error{constructor(t,{retriable:e=true,cause:r}={}){super(t,{cause:r});Error.captureStackTrace(this,this.constructor);this.message=t.message||t;this.name="KafkaJSError";this.retriable=e;this.helpUrl=t.helpUrl;this.cause=r}}class KafkaJSNonRetriableError extends KafkaJSError{constructor(t,{cause:e}={}){super(t,{retriable:false,cause:e});this.name="KafkaJSNonRetriableError"}}class KafkaJSProtocolError extends KafkaJSError{constructor(t,{retriable:e=t.retriable}={}){super(t,{retriable:e});this.type=t.type;this.code=t.code;this.name="KafkaJSProtocolError"}}class KafkaJSOffsetOutOfRange extends KafkaJSProtocolError{constructor(t,{topic:e,partition:r}){super(t);this.topic=e;this.partition=r;this.name="KafkaJSOffsetOutOfRange"}}class KafkaJSMemberIdRequired extends KafkaJSProtocolError{constructor(t,{memberId:e}){super(t);this.memberId=e;this.name="KafkaJSMemberIdRequired"}}class KafkaJSNumberOfRetriesExceeded extends KafkaJSNonRetriableError{constructor(t,{retryCount:e,retryTime:r}){super(t,{cause:t});this.stack=`${this.name}\n  Caused by: ${t.stack}`;this.retryCount=e;this.retryTime=r;this.name="KafkaJSNumberOfRetriesExceeded"}}class KafkaJSConnectionError extends KafkaJSError{constructor(t,{broker:e,code:r}={}){super(t);this.broker=e;this.code=r;this.name="KafkaJSConnectionError"}}class KafkaJSConnectionClosedError extends KafkaJSConnectionError{constructor(t,{host:e,port:r}={}){super(t,{broker:`${e}:${r}`});this.host=e;this.port=r;this.name="KafkaJSConnectionClosedError"}}class KafkaJSRequestTimeoutError extends KafkaJSError{constructor(t,{broker:e,correlationId:r,createdAt:o,sentAt:s,pendingDuration:n}={}){super(t);this.broker=e;this.correlationId=r;this.createdAt=o;this.sentAt=s;this.pendingDuration=n;this.name="KafkaJSRequestTimeoutError"}}class KafkaJSMetadataNotLoaded extends KafkaJSError{constructor(){super(...arguments);this.name="KafkaJSMetadataNotLoaded"}}class KafkaJSTopicMetadataNotLoaded extends KafkaJSMetadataNotLoaded{constructor(t,{topic:e}={}){super(t);this.topic=e;this.name="KafkaJSTopicMetadataNotLoaded"}}class KafkaJSStaleTopicMetadataAssignment extends KafkaJSError{constructor(t,{topic:e,unknownPartitions:r}={}){super(t);this.topic=e;this.unknownPartitions=r;this.name="KafkaJSStaleTopicMetadataAssignment"}}class KafkaJSDeleteGroupsError extends KafkaJSError{constructor(t,e=[]){super(t);this.groups=e;this.name="KafkaJSDeleteGroupsError"}}class KafkaJSServerDoesNotSupportApiKey extends KafkaJSNonRetriableError{constructor(t,{apiKey:e,apiName:r}={}){super(t);this.apiKey=e;this.apiName=r;this.name="KafkaJSServerDoesNotSupportApiKey"}}class KafkaJSBrokerNotFound extends KafkaJSError{constructor(){super(...arguments);this.name="KafkaJSBrokerNotFound"}}class KafkaJSPartialMessageError extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSPartialMessageError"}}class KafkaJSSASLAuthenticationError extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSSASLAuthenticationError"}}class KafkaJSGroupCoordinatorNotFound extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSGroupCoordinatorNotFound"}}class KafkaJSNotImplemented extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSNotImplemented"}}class KafkaJSTimeout extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSTimeout"}}class KafkaJSLockTimeout extends KafkaJSTimeout{constructor(){super(...arguments);this.name="KafkaJSLockTimeout"}}class KafkaJSUnsupportedMagicByteInMessageSet extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSUnsupportedMagicByteInMessageSet"}}class KafkaJSDeleteTopicRecordsError extends KafkaJSError{constructor({partitions:t}){const e=t.filter((({error:t})=>t!=null)).every((({error:t})=>t.retriable===true));super("Error while deleting records",{retriable:e});this.name="KafkaJSDeleteTopicRecordsError";this.partitions=t}}const n=s?s.url:null;class KafkaJSInvariantViolation extends KafkaJSNonRetriableError{constructor(t){const e=t.message||t;super(`Invariant violated: ${e}. This is likely a bug and should be reported.`);this.name="KafkaJSInvariantViolation";if(n!==null){const t=encodeURIComponent(`Invariant violation: ${e}`);this.helpUrl=`${n}/new?assignees=&labels=bug&template=bug_report.md&title=${t}`}}}class KafkaJSInvalidVarIntError extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSNonRetriableError"}}class KafkaJSInvalidLongError extends KafkaJSNonRetriableError{constructor(){super(...arguments);this.name="KafkaJSNonRetriableError"}}class KafkaJSCreateTopicError extends KafkaJSProtocolError{constructor(t,e){super(t);this.topic=e;this.name="KafkaJSCreateTopicError"}}class KafkaJSAlterPartitionReassignmentsError extends KafkaJSProtocolError{constructor(t,e,r){super(t);this.topic=e;this.partition=r;this.name="KafkaJSAlterPartitionReassignmentsError"}}class KafkaJSAggregateError extends Error{constructor(t,e){super(t);this.errors=e;this.name="KafkaJSAggregateError"}}class KafkaJSFetcherRebalanceError extends Error{}class KafkaJSNoBrokerAvailableError extends KafkaJSError{constructor(){super("No broker available");this.name="KafkaJSNoBrokerAvailableError"}}const isRebalancing=t=>t.type==="REBALANCE_IN_PROGRESS"||t.type==="NOT_COORDINATOR_FOR_GROUP"||t.type==="ILLEGAL_GENERATION";const isKafkaJSError=t=>t instanceof KafkaJSError;t.exports={KafkaJSError:KafkaJSError,KafkaJSNonRetriableError:KafkaJSNonRetriableError,KafkaJSPartialMessageError:KafkaJSPartialMessageError,KafkaJSBrokerNotFound:KafkaJSBrokerNotFound,KafkaJSProtocolError:KafkaJSProtocolError,KafkaJSConnectionError:KafkaJSConnectionError,KafkaJSConnectionClosedError:KafkaJSConnectionClosedError,KafkaJSRequestTimeoutError:KafkaJSRequestTimeoutError,KafkaJSSASLAuthenticationError:KafkaJSSASLAuthenticationError,KafkaJSNumberOfRetriesExceeded:KafkaJSNumberOfRetriesExceeded,KafkaJSOffsetOutOfRange:KafkaJSOffsetOutOfRange,KafkaJSMemberIdRequired:KafkaJSMemberIdRequired,KafkaJSGroupCoordinatorNotFound:KafkaJSGroupCoordinatorNotFound,KafkaJSNotImplemented:KafkaJSNotImplemented,KafkaJSMetadataNotLoaded:KafkaJSMetadataNotLoaded,KafkaJSTopicMetadataNotLoaded:KafkaJSTopicMetadataNotLoaded,KafkaJSStaleTopicMetadataAssignment:KafkaJSStaleTopicMetadataAssignment,KafkaJSDeleteGroupsError:KafkaJSDeleteGroupsError,KafkaJSTimeout:KafkaJSTimeout,KafkaJSLockTimeout:KafkaJSLockTimeout,KafkaJSServerDoesNotSupportApiKey:KafkaJSServerDoesNotSupportApiKey,KafkaJSUnsupportedMagicByteInMessageSet:KafkaJSUnsupportedMagicByteInMessageSet,KafkaJSDeleteTopicRecordsError:KafkaJSDeleteTopicRecordsError,KafkaJSInvariantViolation:KafkaJSInvariantViolation,KafkaJSInvalidVarIntError:KafkaJSInvalidVarIntError,KafkaJSInvalidLongError:KafkaJSInvalidLongError,KafkaJSCreateTopicError:KafkaJSCreateTopicError,KafkaJSAggregateError:KafkaJSAggregateError,KafkaJSFetcherRebalanceError:KafkaJSFetcherRebalanceError,KafkaJSNoBrokerAvailableError:KafkaJSNoBrokerAvailableError,KafkaJSAlterPartitionReassignmentsError:KafkaJSAlterPartitionReassignmentsError,isRebalancing:isRebalancing,isKafkaJSError:isKafkaJSError}},2520:function(t,e,r){const{createLogger:o,LEVELS:{INFO:s}}=r(762);const n=r(547);const i=r(6122);const a=r(4428);const c=r(1854);const u=r(1884);const p=r(8362);const d=r(3541);const l=r(4759);const f=r(4889);const h=r(8708);const m={CREATE_CLUSTER:Symbol("private:Kafka:createCluster"),CLUSTER_RETRY:Symbol("private:Kafka:clusterRetry"),LOGGER:Symbol("private:Kafka:logger"),OFFSETS:Symbol("private:Kafka:offsets")};const g=3e5;const I=f((t=>{if(process.env.KAFKAJS_NO_PARTITIONER_WARNING==null){t.warn(`KafkaJS v2.0.0 switched default partitioner. To retain the same partitioning behavior as in previous versions, create the producer with the option "createPartitioner: Partitioners.LegacyPartitioner". See the migration guide at ${h("docs/migration-guide-v2.0.0","producer-new-default-partitioner")} for details. Silence this warning by setting the environment variable "KAFKAJS_NO_PARTITIONER_WARNING=1"`)}}));t.exports=class Client{constructor({brokers:t,ssl:e,sasl:r,clientId:n,connectionTimeout:c=1e3,authenticationTimeout:u,reauthenticationThreshold:p,requestTimeout:d,enforceRequestTimeout:f=true,retry:h,socketFactory:g=l(),logLevel:I=s,logCreator:y=i}){this[m.OFFSETS]=new Map;this[m.LOGGER]=o({level:I,logCreator:y});this[m.CLUSTER_RETRY]=h;this[m.CREATE_CLUSTER]=({metadataMaxAge:o,allowAutoTopicCreation:s=true,maxInFlightRequests:i=null,instrumentationEmitter:l=null,isolationLevel:h})=>new a({logger:this[m.LOGGER],retry:this[m.CLUSTER_RETRY],offsets:this[m.OFFSETS],socketFactory:g,brokers:t,ssl:e,sasl:r,clientId:n,connectionTimeout:c,authenticationTimeout:u,reauthenticationThreshold:p,requestTimeout:d,enforceRequestTimeout:f,metadataMaxAge:o,instrumentationEmitter:l,allowAutoTopicCreation:s,maxInFlightRequests:i,isolationLevel:h})}producer({createPartitioner:t,retry:e,metadataMaxAge:r=g,allowAutoTopicCreation:o,idempotent:s,transactionalId:i,transactionTimeout:a,maxInFlightRequests:u}={}){const p=new n;const d=this[m.CREATE_CLUSTER]({metadataMaxAge:r,allowAutoTopicCreation:o,maxInFlightRequests:u,instrumentationEmitter:p});if(t==null){I(this[m.LOGGER])}return c({retry:{...this[m.CLUSTER_RETRY],...e},logger:this[m.LOGGER],cluster:d,createPartitioner:t,idempotent:s,transactionalId:i,transactionTimeout:a,instrumentationEmitter:p})}consumer({groupId:t,partitionAssigners:e,metadataMaxAge:r=g,sessionTimeout:o,rebalanceTimeout:s,heartbeatInterval:i,maxBytesPerPartition:a,minBytes:c,maxBytes:p,maxWaitTimeInMs:l,retry:f={retries:5},allowAutoTopicCreation:h,maxInFlightRequests:I,readUncommitted:y=false,rackId:w=""}={}){const T=y?d.READ_UNCOMMITTED:d.READ_COMMITTED;const E=new n;const S=this[m.CREATE_CLUSTER]({metadataMaxAge:r,allowAutoTopicCreation:h,maxInFlightRequests:I,isolationLevel:T,instrumentationEmitter:E});return u({retry:{...this[m.CLUSTER_RETRY],...f},logger:this[m.LOGGER],cluster:S,groupId:t,partitionAssigners:e,sessionTimeout:o,rebalanceTimeout:s,heartbeatInterval:i,maxBytesPerPartition:a,minBytes:c,maxBytes:p,maxWaitTimeInMs:l,isolationLevel:T,instrumentationEmitter:E,rackId:w,metadataMaxAge:r})}admin({retry:t}={}){const e=new n;const r=this[m.CREATE_CLUSTER]({allowAutoTopicCreation:false,instrumentationEmitter:e});return p({retry:{...this[m.CLUSTER_RETRY],...t},logger:this[m.LOGGER],instrumentationEmitter:e,cluster:r})}logger(){return this[m.LOGGER]}}},547:function(t,e,r){const{EventEmitter:o}=r(2361);const s=r(4870);const{KafkaJSError:n}=r(1331);t.exports=class InstrumentationEventEmitter{constructor(){this.emitter=new o}emit(t,e){if(!t){throw new n("Invalid event name",{retriable:false})}if(this.emitter.listenerCount(t)>0){const r=new s(t,e);this.emitter.emit(t,r)}}addListener(t,e){this.emitter.addListener(t,e);return()=>this.emitter.removeListener(t,e)}}},4870:function(t){let e=0;const nextId=()=>{if(e===Number.MAX_VALUE){e=0}return e++};class InstrumentationEvent{constructor(t,e){this.id=nextId();this.type=t;this.timestamp=Date.now();this.payload=e}}t.exports=InstrumentationEvent},1347:function(t){t.exports=t=>e=>`${t}.${e}`},6122:function(t,e,r){const{LEVELS:o}=r(762);t.exports=()=>({namespace:t,level:e,label:r,log:s})=>{const n=t?`[${t}] `:"";const i=JSON.stringify(Object.assign({level:r},s,{message:`${n}${s.message}`}));switch(e){case o.INFO:return console.info(i);case o.ERROR:return console.error(i);case o.WARN:return console.warn(i);case o.DEBUG:return console.log(i)}}},762:function(t){const{assign:e}=Object;const r={NOTHING:0,ERROR:1,WARN:2,INFO:4,DEBUG:5};const createLevel=(t,r,o,s,n)=>(i,a={})=>{if(r>o())return;n({namespace:s,level:r,label:t,log:e({timestamp:(new Date).toISOString(),logger:"kafkajs",message:i},a)})};const evaluateLogLevel=t=>{const e=(process.env.KAFKAJS_LOG_LEVEL||"").toUpperCase();return r[e]==null?t:r[e]};const createLogger=({level:t=r.INFO,logCreator:o}={})=>{let s=evaluateLogLevel(t);const n=o(s);const createNamespace=(t,e=null)=>{const r=evaluateLogLevel(e);return createLogFunctions(t,r)};const createLogFunctions=(t,o=null)=>{const currentLogLevel=()=>o==null?s:o;const i={info:createLevel("INFO",r.INFO,currentLogLevel,t,n),error:createLevel("ERROR",r.ERROR,currentLogLevel,t,n),warn:createLevel("WARN",r.WARN,currentLogLevel,t,n),debug:createLevel("DEBUG",r.DEBUG,currentLogLevel,t,n)};return e(i,{namespace:createNamespace,setLogLevel:t=>{s=t}})};return createLogFunctions()};t.exports={LEVELS:r,createLogger:createLogger}},3200:function(t,e,r){const o=r(3867);const s=r(5323);const n=r(9149);const{KafkaJSConnectionError:i,KafkaJSConnectionClosedError:a}=r(1331);const{INT_32_MAX_VALUE:c}=r(8691);const u=r(4832);const p=r(9094);const{CONNECTION_STATUS:d,CONNECTED_STATUS:l}=r(4994);const f=r(9964);const h=r(8414);const m=r(9727);const g=r(1062);const requestInfo=({apiName:t,apiKey:e,apiVersion:r})=>`${t}(key: ${e}, version: ${r})`;const isAuthenticatedRequest=t=>![g.ApiVersions,g.SaslHandshake,g.SaslAuthenticate].includes(t.apiKey);const I={SHOULD_REAUTHENTICATE:Symbol("private:Connection:shouldReauthenticate"),AUTHENTICATE:Symbol("private:Connection:authenticate")};t.exports=class Connection{constructor({host:t,port:e,logger:r,socketFactory:o,requestTimeout:s,reauthenticationThreshold:i=1e4,rack:a=null,ssl:c=null,sasl:l=null,clientId:g="kafkajs",connectionTimeout:y,enforceRequestTimeout:w=true,maxInFlightRequests:T=null,instrumentationEmitter:E=null}){this.host=t;this.port=e;this.rack=a;this.clientId=g;this.broker=`${this.host}:${this.port}`;this.logger=r.namespace("Connection");this.socketFactory=o;this.ssl=c;this.sasl=l;this.requestTimeout=s;this.connectionTimeout=y;this.reauthenticationThreshold=i;this.bytesBuffered=0;this.bytesNeeded=n.int32Size();this.chunks=[];this.connectionStatus=d.DISCONNECTED;this.correlationId=0;this.requestQueue=new p({instrumentationEmitter:E,maxInFlightRequests:T,requestTimeout:s,enforceRequestTimeout:w,clientId:g,broker:this.broker,logger:r.namespace("RequestQueue"),isConnected:()=>this.isConnected()});this.versions=null;this.authHandlers=null;this.authExpectResponse=false;const log=t=>(e,r={})=>{const o=this.logger[t];o(e,{broker:this.broker,clientId:g,...r})};this.logDebug=log("debug");this.logError=log("error");const S=u();this.shouldLogBuffers=S.KAFKAJS_DEBUG_PROTOCOL_BUFFERS==="1";this.shouldLogFetchBuffer=this.shouldLogBuffers&&S.KAFKAJS_DEBUG_EXTENDED_PROTOCOL_BUFFERS==="1";this.authenticatedAt=null;this.sessionLifetime=h.ZERO;this.supportAuthenticationProtocol=null;this[I.AUTHENTICATE]=f((async()=>{if(this.sasl&&!this.isAuthenticated()){const t=new m(this,this.logger,this.versions,this.supportAuthenticationProtocol);await t.authenticate();this.authenticatedAt=process.hrtime();this.sessionLifetime=h.fromValue(t.sessionLifetime)}}))}getSupportAuthenticationProtocol(){return this.supportAuthenticationProtocol}setSupportAuthenticationProtocol(t){this.supportAuthenticationProtocol=t}setVersions(t){this.versions=t}isConnected(){return l.includes(this.connectionStatus)}connect(){return new Promise(((t,e)=>{if(this.isConnected()){return t(true)}this.authenticatedAt=null;let r;const onConnect=()=>{clearTimeout(r);this.connectionStatus=d.CONNECTED;this.requestQueue.scheduleRequestTimeoutCheck();t(true)};const onData=t=>{this.processData(t)};const onEnd=async()=>{clearTimeout(r);const t=this.isConnected();if(this.authHandlers){this.authHandlers.onError()}else if(t){this.logDebug("Kafka server has closed connection");this.rejectRequests(new a("Closed connection",{host:this.host,port:this.port}))}await this.disconnect()};const onError=async t=>{clearTimeout(r);const o=new i(`Connection error: ${t.message}`,{broker:`${this.host}:${this.port}`,code:t.code});this.logError(o.message,{stack:t.stack});this.rejectRequests(o);await this.disconnect();e(o)};const onTimeout=async()=>{const t=new i("Connection timeout",{broker:`${this.host}:${this.port}`});this.logError(t.message);this.rejectRequests(t);await this.disconnect();e(t)};this.logDebug(`Connecting`,{ssl:!!this.ssl,sasl:!!this.sasl});try{r=setTimeout(onTimeout,this.connectionTimeout);this.socket=o({socketFactory:this.socketFactory,host:this.host,port:this.port,ssl:this.ssl,onConnect:onConnect,onData:onData,onEnd:onEnd,onError:onError,onTimeout:onTimeout})}catch(t){clearTimeout(r);e(new i(`Failed to connect: ${t.message}`,{broker:`${this.host}:${this.port}`}))}}))}async disconnect(){this.authenticatedAt=null;this.connectionStatus=d.DISCONNECTING;this.logDebug("disconnecting...");await this.requestQueue.waitForPendingRequests();this.requestQueue.destroy();if(this.socket){this.socket.end();this.socket.unref()}this.connectionStatus=d.DISCONNECTED;this.logDebug("disconnected");return true}isAuthenticated(){return this.authenticatedAt!=null&&!this[I.SHOULD_REAUTHENTICATE]()}[I.SHOULD_REAUTHENTICATE](){if(this.sessionLifetime.equals(h.ZERO)){return false}if(this.authenticatedAt==null){return true}const[t,e]=process.hrtime(this.authenticatedAt);const r=h.fromValue(t).multiply(1e3).add(h.fromValue(e).divide(1e6));const o=r.add(this.reauthenticationThreshold);return o.greaterThanOrEqual(this.sessionLifetime)}async authenticate(){await this[I.AUTHENTICATE]()}sendAuthRequest({request:t,response:e}){this.authExpectResponse=!!e;return new Promise((async(r,o)=>{this.authHandlers={onSuccess:t=>{this.authHandlers=null;this.authExpectResponse=false;e.decode(t).then((t=>e.parse(t))).then(r).catch(o)},onError:()=>{this.authHandlers=null;this.authExpectResponse=false;o(new i("Connection closed by the server",{broker:`${this.host}:${this.port}`}))}};try{const e=await t.encode();this.failIfNotConnected();this.socket.write(e,"binary")}catch(t){o(t)}}))}async send({request:t,response:e,requestTimeout:r=null,logResponseError:o=true}){if(!this.isAuthenticated()&&isAuthenticatedRequest(t)){await this[I.AUTHENTICATE]()}this.failIfNotConnected();const n=!t.expectResponse||t.expectResponse();const sendRequest=async()=>{const{clientId:e}=this;const o=this.nextCorrelationId();const i=await s({request:t,correlationId:o,clientId:e});const{apiKey:a,apiName:c,apiVersion:u}=t;this.logDebug(`Request ${requestInfo(t)}`,{correlationId:o,expectResponse:n,size:Buffer.byteLength(i.buffer)});return new Promise(((t,e)=>{try{this.failIfNotConnected();const s={apiKey:a,apiName:c,apiVersion:u,correlationId:o,resolve:t,reject:e};this.requestQueue.push({entry:s,expectResponse:n,requestTimeout:r,sendRequest:()=>{this.socket.write(i.buffer,"binary")}})}catch(t){e(t)}}))};const{correlationId:i,size:a,entry:c,payload:u}=await sendRequest();if(!n){return}try{const t=await e.decode(u);this.requestQueue.maybeThrottle(t.clientSideThrottleTime);const r=await e.parse(t);const o=c.apiName==="Fetch";this.logDebug(`Response ${requestInfo(c)}`,{correlationId:i,size:a,data:o&&!this.shouldLogFetchBuffer?"[filtered]":r});return r}catch(t){if(o){this.logError(`Response ${requestInfo(c)}`,{error:t.message,correlationId:i,size:a})}const e=Buffer.isBuffer(u);this.logDebug(`Response ${requestInfo(c)}`,{error:t.message,correlationId:i,payload:e&&!this.shouldLogBuffers?{type:"Buffer",data:"[filtered]"}:u});throw t}}failIfNotConnected(){if(!this.isConnected()){throw new i("Not connected",{broker:`${this.host}:${this.port}`})}}nextCorrelationId(){if(this.correlationId>=c){this.correlationId=0}return this.correlationId++}processData(t){if(this.authHandlers&&!this.authExpectResponse){return this.authHandlers.onSuccess(t)}this.chunks.push(t);this.bytesBuffered+=Buffer.byteLength(t);while(this.bytesNeeded<=this.bytesBuffered){const t=this.chunks.length>1?Buffer.concat(this.chunks):this.chunks[0];const e=new n(t);const r=e.readInt32();if(!e.canReadBytes(r)){this.chunks=[t];this.bytesBuffered=Buffer.byteLength(t);this.bytesNeeded=n.int32Size()+r;return}const o=new n(e.readBytes(r));const s=e.readAll();this.chunks=[s];this.bytesBuffered=Buffer.byteLength(s);this.bytesNeeded=n.int32Size();if(this.authHandlers){const e=n.int32Size()+r;const o=t.slice(0,e);return this.authHandlers.onSuccess(o)}const i=o.readInt32();const a=o.readAll();this.requestQueue.fulfillRequest({size:r,correlationId:i,payload:a})}}rejectRequests(t){this.requestQueue.rejectAll(t)}}},3853:function(t,e,r){const o=r(1062);const s=r(3200);t.exports=class ConnectionPool{constructor(t){this.logger=t.logger.namespace("ConnectionPool");this.connectionTimeout=t.connectionTimeout;this.host=t.host;this.port=t.port;this.rack=t.rack;this.ssl=t.ssl;this.sasl=t.sasl;this.clientId=t.clientId;this.socketFactory=t.socketFactory;this.pool=new Array(2).fill().map((()=>new s(t)))}isConnected(){return this.pool.some((t=>t.isConnected()))}isAuthenticated(){return this.pool.some((t=>t.isAuthenticated()))}setSupportAuthenticationProtocol(t){this.map((e=>e.setSupportAuthenticationProtocol(t)))}setVersions(t){this.map((e=>e.setVersions(t)))}map(t){return this.pool.map((e=>t(e)))}async send(t){const e=await this.getConnectionByRequest(t);return e.send(t)}getConnectionByRequest({request:{apiKey:t}}){const e={[o.Fetch]:1}[t]||0;return this.getConnection(e)}async getConnection(t=0){const e=this.pool[t];if(!e.isConnected()){await e.connect()}return e}async destroy(){await Promise.all(this.map((t=>t.disconnect())))}}},4994:function(t){const e={CONNECTED:"connected",DISCONNECTING:"disconnecting",DISCONNECTED:"disconnected"};const r=[e.CONNECTED,e.DISCONNECTING];t.exports={CONNECTION_STATUS:e,CONNECTED_STATUS:r}},4976:function(t,e,r){const o=r(1347);const s=o("network");t.exports={NETWORK_REQUEST:s("request"),NETWORK_REQUEST_TIMEOUT:s("request_timeout"),NETWORK_REQUEST_QUEUE_SIZE:s("request_queue_size")}},9094:function(t,e,r){const{EventEmitter:o}=r(2361);const s=r(871);const n=r(4976);const{KafkaJSInvariantViolation:i}=r(1331);const a={EMIT_QUEUE_SIZE_EVENT:Symbol("private:RequestQueue:emitQueueSizeEvent"),EMIT_REQUEST_QUEUE_EMPTY:Symbol("private:RequestQueue:emitQueueEmpty")};const c="requestQueueEmpty";const u=10;t.exports=class RequestQueue extends o{constructor({instrumentationEmitter:t=null,maxInFlightRequests:e,requestTimeout:r,enforceRequestTimeout:o,clientId:s,broker:i,logger:u,isConnected:p=(()=>true)}){super();this.instrumentationEmitter=t;this.maxInFlightRequests=e;this.requestTimeout=r;this.enforceRequestTimeout=o;this.clientId=s;this.broker=i;this.logger=u;this.isConnected=p;this.inflight=new Map;this.pending=[];this.throttledUntil=-1;this.throttleCheckTimeoutId=null;this[a.EMIT_REQUEST_QUEUE_EMPTY]=()=>{if(this.pending.length===0&&this.inflight.size===0){this.emit(c)}};this[a.EMIT_QUEUE_SIZE_EVENT]=()=>{t&&t.emit(n.NETWORK_REQUEST_QUEUE_SIZE,{broker:this.broker,clientId:this.clientId,queueSize:this.pending.length});this[a.EMIT_REQUEST_QUEUE_EMPTY]()}}scheduleRequestTimeoutCheck(){if(this.enforceRequestTimeout){this.destroy();this.requestTimeoutIntervalId=setInterval((()=>{this.inflight.forEach((t=>{if(Date.now()-t.sentAt>t.requestTimeout){t.timeoutRequest()}}));if(!this.isConnected()){this.destroy()}}),Math.min(this.requestTimeout,100))}}maybeThrottle(t){if(t!==null&&t>0){this.logger.debug(`Client side throttling in effect for ${t}ms`);const e=Date.now()+t;this.throttledUntil=Math.max(e,this.throttledUntil)}}createSocketRequest(t){const{correlationId:e}=t.entry;const r=this.requestTimeout;const o=t.requestTimeout;const n=Math.max(r,o||0);const c=new s({entry:t.entry,expectResponse:t.expectResponse,broker:this.broker,clientId:this.clientId,instrumentationEmitter:this.instrumentationEmitter,requestTimeout:n,send:()=>{if(this.inflight.has(e)){throw new i("Correlation id already exists")}this.inflight.set(e,c);t.sendRequest()},timeout:()=>{this.inflight.delete(e);this.checkPendingRequests();this[a.EMIT_REQUEST_QUEUE_EMPTY]()}});return c}push(t){const{correlationId:e}=t.entry;const r=this.createSocketRequest(t);if(this.canSendSocketRequestImmediately()){this.sendSocketRequest(r);return}this.pending.push(r);this.scheduleCheckPendingRequests();this.logger.debug(`Request enqueued`,{clientId:this.clientId,broker:this.broker,correlationId:e});this[a.EMIT_QUEUE_SIZE_EVENT]()}sendSocketRequest(t){t.send();if(!t.expectResponse){this.logger.debug(`Request does not expect a response, resolving immediately`,{clientId:this.clientId,broker:this.broker,correlationId:t.correlationId});this.inflight.delete(t.correlationId);t.completed({size:0,payload:null})}}fulfillRequest({correlationId:t,payload:e,size:r}){const o=this.inflight.get(t);this.inflight.delete(t);this.checkPendingRequests();if(o){o.completed({size:r,payload:e})}else{this.logger.warn(`Response without match`,{clientId:this.clientId,broker:this.broker,correlationId:t})}this[a.EMIT_REQUEST_QUEUE_EMPTY]()}rejectAll(t){const e=[...this.inflight.values(),...this.pending];for(const r of e){r.rejected(t);this.inflight.delete(r.correlationId)}this.pending=[];this.inflight.clear();this[a.EMIT_QUEUE_SIZE_EVENT]()}waitForPendingRequests(){return new Promise((t=>{if(this.pending.length===0&&this.inflight.size===0){return t()}this.logger.debug("Waiting for pending requests",{clientId:this.clientId,broker:this.broker,currentInflightRequests:this.inflight.size,currentPendingQueueSize:this.pending.length});this.once(c,(()=>t()))}))}destroy(){clearInterval(this.requestTimeoutIntervalId);clearTimeout(this.throttleCheckTimeoutId);this.throttleCheckTimeoutId=null}canSendSocketRequestImmediately(){const t=this.maxInFlightRequests!=null&&this.inflight.size>=this.maxInFlightRequests||this.throttledUntil>Date.now();return!t}checkPendingRequests(){while(this.pending.length>0&&this.canSendSocketRequestImmediately()){const t=this.pending.shift();this.sendSocketRequest(t);this.logger.debug(`Consumed pending request`,{clientId:this.clientId,broker:this.broker,correlationId:t.correlationId,pendingDuration:t.pendingDuration,currentPendingQueueSize:this.pending.length});this[a.EMIT_QUEUE_SIZE_EVENT]()}this.scheduleCheckPendingRequests()}scheduleCheckPendingRequests(){let t=this.throttledUntil-Date.now();if(!this.throttleCheckTimeoutId){if(this.pending.length>0){t=t>0?t:u}this.throttleCheckTimeoutId=setTimeout((()=>{this.throttleCheckTimeoutId=null;this.checkPendingRequests()}),t)}}}},871:function(t,e,r){const{KafkaJSRequestTimeoutError:o,KafkaJSNonRetriableError:s}=r(1331);const n=r(4976);const i={STATE:Symbol("private:SocketRequest:state"),EMIT_EVENT:Symbol("private:SocketRequest:emitEvent")};const a={PENDING:Symbol("PENDING"),SENT:Symbol("SENT"),COMPLETED:Symbol("COMPLETED"),REJECTED:Symbol("REJECTED")};t.exports=class SocketRequest{constructor({requestTimeout:t,broker:e,clientId:r,entry:o,expectResponse:s,send:n,timeout:c,instrumentationEmitter:u=null}){this.createdAt=Date.now();this.requestTimeout=t;this.broker=e;this.clientId=r;this.entry=o;this.correlationId=o.correlationId;this.expectResponse=s;this.sendRequest=n;this.timeoutHandler=c;this.sentAt=null;this.duration=null;this.pendingDuration=null;this[i.STATE]=a.PENDING;this[i.EMIT_EVENT]=(t,e)=>u&&u.emit(t,e)}send(){this.throwIfInvalidState({accepted:[a.PENDING],next:a.SENT});this.sendRequest();this.sentAt=Date.now();this.pendingDuration=this.sentAt-this.createdAt;this[i.STATE]=a.SENT}timeoutRequest(){const{apiName:t,apiKey:e,apiVersion:r}=this.entry;const s=`${t}(key: ${e}, version: ${r})`;const a={broker:this.broker,clientId:this.clientId,correlationId:this.correlationId,createdAt:this.createdAt,sentAt:this.sentAt,pendingDuration:this.pendingDuration};this.timeoutHandler();this.rejected(new o(`Request ${s} timed out`,a));this[i.EMIT_EVENT](n.NETWORK_REQUEST_TIMEOUT,{...a,apiName:t,apiKey:e,apiVersion:r})}completed({size:t,payload:e}){this.throwIfInvalidState({accepted:[a.SENT],next:a.COMPLETED});const{entry:r,correlationId:o,broker:s,clientId:c,createdAt:u,sentAt:p,pendingDuration:d}=this;this[i.STATE]=a.COMPLETED;this.duration=Date.now()-this.sentAt;r.resolve({correlationId:o,entry:r,size:t,payload:e});this[i.EMIT_EVENT](n.NETWORK_REQUEST,{broker:s,clientId:c,correlationId:o,size:t,createdAt:u,sentAt:p,pendingDuration:d,duration:this.duration,apiName:r.apiName,apiKey:r.apiKey,apiVersion:r.apiVersion})}rejected(t){this.throwIfInvalidState({accepted:[a.PENDING,a.SENT],next:a.REJECTED});this[i.STATE]=a.REJECTED;this.duration=Date.now()-this.sentAt;this.entry.reject(t)}throwIfInvalidState({accepted:t,next:e}){if(t.includes(this[i.STATE])){return}const r=this[i.STATE].toString();throw new s(`Invalid state, can't transition from ${r} to ${e.toString()}`)}}},3867:function(t){t.exports=({socketFactory:t,host:e,port:r,ssl:o,onConnect:s,onData:n,onEnd:i,onError:a,onTimeout:c})=>{const u=t({host:e,port:r,ssl:o,onConnect:s});u.on("data",n);u.on("end",i);u.on("error",a);u.on("timeout",c);return u}},4759:function(t,e,r){const o=6e4;t.exports=()=>{const t=r(1808);const e=r(4404);return({host:r,port:s,ssl:n,onConnect:i})=>{const a=n?e.connect(Object.assign({host:r,port:s},!t.isIP(r)?{servername:r}:{},n),i):t.connect({host:r,port:s},i);a.setKeepAlive(true,o);return a}}},2158:function(t){t.exports=t=>t.map((({topic:t,partitions:e,messagesPerPartition:r,sequencePerPartition:o})=>({topic:t,partitions:e.map((t=>({partition:t,messages:r[t]})))})))},654:function(t,e,r){const o=r(4091);const s=r(6249);const{KafkaJSNonRetriableError:n}=r(1331);const i=r(8853);const a=r(4103);const{INT_32_MAX_VALUE:c}=r(8691);const u=r(9491);const p=r(6428);const d=-1;const l=0;const f=["NOT_COORDINATOR_FOR_GROUP","GROUP_COORDINATOR_NOT_AVAILABLE","GROUP_LOAD_IN_PROGRESS","CONCURRENT_TRANSACTIONS"];const h=["UNKNOWN_TOPIC_OR_PARTITION","COORDINATOR_LOAD_IN_PROGRESS"];const m=["COORDINATOR_NOT_AVAILABLE","NOT_COORDINATOR"];t.exports=({logger:t,cluster:e,transactionTimeout:r=6e4,transactional:g,transactionalId:I})=>{if(g&&!I){throw new n("Cannot manage transactions without a transactionalId")}const y=o(e.retry);let w=d;let T=0;let E={};let S={};let b={};let A=false;const O=a({logger:t});O.on("transition",(({to:t})=>{if(t===p.READY){b={};A=false}}));const findTransactionCoordinator=()=>e.findGroupCoordinator({groupId:I,coordinatorType:i.TRANSACTION});const transactionalGuard=()=>{if(!g){throw new n("Method unavailable if non-transactional")}};const isOngoing=()=>A||Object.entries(b).some((([,t])=>Object.entries(t).some((([,t])=>t))));const C=O.createGuarded({getProducerId(){return w},getProducerEpoch(){return T},getTransactionalId(){return I},async initProducerId(){return y((async(o,s,n)=>{try{await e.refreshMetadataIfNecessary();const o=await(g?findTransactionCoordinator():e.findControllerBroker());const s=await o.initProducerId({transactionalId:g?I:undefined,transactionTimeout:r});O.transitionTo(p.READY);w=s.producerId;T=s.producerEpoch;E={};S={};t.debug("Initialized producer id & epoch",{producerId:w,producerEpoch:T})}catch(e){if(f.includes(e.type)){if(e.type==="CONCURRENT_TRANSACTIONS"){t.debug("There is an ongoing transaction on this transactionId, retrying",{error:e.message,stack:e.stack,transactionalId:I,retryCount:s,retryTime:n})}throw e}o(e)}}))},getSequence(t,e){if(!C.isInitialized()){return l}E[t]=E[t]||{};E[t][e]=E[t][e]||l;return E[t][e]},updateSequence(e,r,o){if(!C.isInitialized()){return}const s=C.getSequence(e,r);let n=s+o;if(n>=c){t.debug(`Sequence for ${e} ${r} exceeds max value (${n}). Rotating to 0.`);n=0}E[e][r]=n},beginTransaction(){transactionalGuard();O.transitionTo(p.TRANSACTING)},async addPartitionsToTransaction(t){transactionalGuard();const e={};t.forEach((({topic:t,partitions:r})=>{b[t]=b[t]||{};r.forEach((({partition:r})=>{if(!b[t][r]){e[t]=e[t]||[];e[t].push(r)}}))}));const r=Object.keys(e).map((t=>({topic:t,partitions:e[t]})));if(r.length){const t=await findTransactionCoordinator();await t.addPartitionsToTxn({transactionalId:I,producerId:w,producerEpoch:T,topics:r})}r.forEach((({topic:t,partitions:e})=>{e.forEach((e=>{b[t][e]=true}))}))},async commit(){transactionalGuard();O.transitionTo(p.COMMITTING);if(!isOngoing()){t.debug("No partitions or offsets registered, not sending EndTxn");O.transitionTo(p.READY);return}const e=await findTransactionCoordinator();await e.endTxn({producerId:w,producerEpoch:T,transactionalId:I,transactionResult:true});O.transitionTo(p.READY)},async abort(){transactionalGuard();O.transitionTo(p.ABORTING);if(!isOngoing()){t.debug("No partitions or offsets registered, not sending EndTxn");O.transitionTo(p.READY);return}const e=await findTransactionCoordinator();await e.endTxn({producerId:w,producerEpoch:T,transactionalId:I,transactionResult:false});O.transitionTo(p.READY)},isInitialized(){return w!==d},isTransactional(){return g},isInTransaction(){return O.state()===p.TRANSACTING},async acquireBrokerLock(t){if(this.isInitialized()){S[t.nodeId]=S[t.nodeId]||new s({timeout:65535});await S[t.nodeId].acquire()}},releaseBrokerLock(t){if(this.isInitialized())S[t.nodeId].release()},async sendOffsets({consumerGroupId:r,topics:o}){u(r,"Missing consumerGroupId");u(o,"Missing offset topics");const s=await findTransactionCoordinator();await s.addOffsetsToTxn({transactionalId:I,producerId:w,producerEpoch:T,groupId:r});A=true;let n=await e.findGroupCoordinator({groupId:r,coordinatorType:i.GROUP});return y((async(s,a,c)=>{try{await n.txnOffsetCommit({transactionalId:I,producerId:w,producerEpoch:T,groupId:r,topics:o})}catch(o){if(h.includes(o.type)){t.debug("Group coordinator is not ready yet, retrying",{error:o.message,stack:o.stack,transactionalId:I,retryCount:a,retryTime:c});throw o}if(m.includes(o.type)||o.code==="ECONNREFUSED"){t.debug("Invalid group coordinator, finding new group coordinator and retrying",{error:o.message,stack:o.stack,transactionalId:I,retryCount:a,retryTime:c});n=await e.findGroupCoordinator({groupId:r,coordinatorType:i.GROUP});throw o}s(o)}}))}},{initProducerId:{legalStates:[p.UNINITIALIZED,p.READY]},beginTransaction:{legalStates:[p.READY],async:false},addPartitionsToTransaction:{legalStates:[p.TRANSACTING]},sendOffsets:{legalStates:[p.TRANSACTING]},commit:{legalStates:[p.TRANSACTING]},abort:{legalStates:[p.TRANSACTING]}});return C}},4103:function(t,e,r){const{EventEmitter:o}=r(2361);const{KafkaJSNonRetriableError:s}=r(1331);const n=r(6428);const i={[n.UNINITIALIZED]:[n.READY],[n.READY]:[n.READY,n.TRANSACTING],[n.TRANSACTING]:[n.COMMITTING,n.ABORTING],[n.COMMITTING]:[n.READY],[n.ABORTING]:[n.READY]};t.exports=({logger:t,initialState:e=n.UNINITIALIZED})=>{let r=e;const guard=(t,e,{legalStates:o,async:n=true})=>{if(!t[e]){throw new s(`Cannot add guard on missing method "${e}"`)}return(...i)=>{const a=t[e];if(!o.includes(r)){const t=new s(`Transaction state exception: Cannot call "${e}" in state "${r}"`);if(n){return Promise.reject(t)}else{throw t}}return a.apply(t,i)}};const a=Object.assign(new o,{createGuarded(t,e){const r=Object.keys(e).reduce(((r,o)=>{r[o]=guard(t,o,e[o]);return r}),{});return{...t,...r}},transitionTo(e){t.debug(`Transaction state transition ${r} --\x3e ${e}`);if(!i[r].includes(e)){throw new s(`Transaction state exception: Invalid transition ${r} --\x3e ${e}`)}a.emit("transition",{to:e,from:r});r=e},state(){return r}});return a}},6428:function(t){t.exports={UNINITIALIZED:"UNINITIALIZED",READY:"READY",TRANSACTING:"TRANSACTING",COMMITTING:"COMMITTING",ABORTING:"ABORTING"}},559:function(t){t.exports=({topic:t,partitionMetadata:e,messages:r,partitioner:o})=>{if(e.length===0){return{}}return r.reduce(((r,s)=>{const n=o({topic:t,partitionMetadata:e,message:s});const i=r[n]||[];return Object.assign(r,{[n]:[...i,s]})}),{})}},1854:function(t,e,r){const o=r(4091);const{CONNECTION_STATUS:s}=r(4994);const{DefaultPartitioner:n}=r(1018);const i=r(547);const a=r(654);const c=r(2853);const{events:u,wrap:p,unwrap:d}=r(4225);const{KafkaJSNonRetriableError:l}=r(1331);const{values:f,keys:h}=Object;const m=f(u);const g=h(u).map((t=>`producer.events.${t}`)).join(", ");const{CONNECT:I,DISCONNECT:y}=u;t.exports=({cluster:t,logger:e,createPartitioner:r=n,retry:f,idempotent:h=false,transactionalId:w,transactionTimeout:T,instrumentationEmitter:E})=>{let S=s.DISCONNECTED;f=f||{retries:h?Number.MAX_SAFE_INTEGER:5};if(h&&f.retries<1){throw new l("Idempotent producer must allow retries to protect against transient errors")}const b=e.namespace("Producer");if(h&&f.retries<Number.MAX_SAFE_INTEGER){b.warn("Limiting retries for the idempotent producer may invalidate EoS guarantees")}const A=r();const O=o(Object.assign({},t.retry,f));const C=E||new i;const N=a({logger:b,cluster:t,transactionTimeout:T,transactional:false,transactionalId:w});const{send:R,sendBatch:k}=c({logger:b,cluster:t,partitioner:A,eosManager:N,idempotent:h,retrier:O,getConnectionStatus:()=>S});let x;const on=(t,e)=>{if(!m.includes(t)){throw new l(`Event name should be one of ${g}`)}return C.addListener(d(t),(r=>{r.type=p(r.type);Promise.resolve(e(r)).catch((e=>{b.error(`Failed to execute listener: ${e.message}`,{eventName:t,stack:e.stack})}))}))};const transaction=async()=>{if(!w){throw new l("Must provide transactional id for transactional producer")}let e=false;x=x||a({logger:b,cluster:t,transactionTimeout:T,transactional:true,transactionalId:w});if(x.isInTransaction()){throw new l("There is already an ongoing transaction for this producer. Please end the transaction before beginning another.")}if(!x.isInitialized()){await x.initProducerId()}x.beginTransaction();const{send:r,sendBatch:o}=c({logger:b,cluster:t,partitioner:A,retrier:O,eosManager:x,idempotent:true,getConnectionStatus:()=>S});const isActive=()=>x.isInTransaction()&&!e;const transactionGuard=t=>(...e)=>{if(!isActive()){return Promise.reject(new l("Cannot continue to use transaction once ended"))}return t(...e)};return{sendBatch:transactionGuard(o),send:transactionGuard(r),abort:transactionGuard((async()=>{await x.abort();e=true})),commit:transactionGuard((async()=>{await x.commit();e=true})),sendOffsets:transactionGuard((async({consumerGroupId:e,topics:r})=>{await x.sendOffsets({consumerGroupId:e,topics:r});for(const o of r){const{topic:r,partitions:s}=o;for(const{partition:o,offset:n}of s){t.markOffsetAsCommitted({groupId:e,topic:r,partition:o,offset:n})}}})),isActive:isActive}};const getLogger=()=>b;return{connect:async()=>{await t.connect();S=s.CONNECTED;C.emit(I);if(h&&!N.isInitialized()){await N.initProducerId()}},disconnect:async()=>{S=s.DISCONNECTING;await t.disconnect();S=s.DISCONNECTED;C.emit(y)},isIdempotent:()=>h,events:u,on:on,send:R,sendBatch:k,transaction:transaction,logger:getLogger}}},4225:function(t,e,r){const o=r(5780);const s=r(4976);const n=r(1347);const i=n("producer");const a={CONNECT:i("connect"),DISCONNECT:i("disconnect"),REQUEST:i(s.NETWORK_REQUEST),REQUEST_TIMEOUT:i(s.NETWORK_REQUEST_TIMEOUT),REQUEST_QUEUE_SIZE:i(s.NETWORK_REQUEST_QUEUE_SIZE)};const c={[a.REQUEST]:s.NETWORK_REQUEST,[a.REQUEST_TIMEOUT]:s.NETWORK_REQUEST_TIMEOUT,[a.REQUEST_QUEUE_SIZE]:s.NETWORK_REQUEST_QUEUE_SIZE};const u=o(c);const unwrap=t=>c[t]||t;const wrap=t=>u[t]||t;t.exports={events:a,wrap:wrap,unwrap:unwrap}},2853:function(t,e,r){const o=r(1463);const{KafkaJSError:s,KafkaJSNonRetriableError:n}=r(1331);const{CONNECTION_STATUS:i}=r(4994);t.exports=({logger:t,cluster:e,partitioner:r,eosManager:a,idempotent:c,retrier:u,getConnectionStatus:p})=>{const d=o({logger:t,cluster:e,retrier:u,partitioner:r,eosManager:a});const validateConnectionStatus=()=>{const t=p();switch(t){case i.DISCONNECTING:throw new n(`The producer is disconnecting; therefore, it can't safely accept messages anymore`);case i.DISCONNECTED:throw new s("The producer is disconnected")}};const sendBatch=async({acks:t=-1,timeout:e,compression:r,topicMessages:o=[]})=>{if(o.some((({topic:t})=>!t))){throw new n(`Invalid topic`)}if(c&&t!==-1){throw new n(`Not requiring ack for all messages invalidates the idempotent producer's EoS guarantees`)}for(const{topic:t,messages:e}of o){if(!e){throw new n(`Invalid messages array [${e}] for topic "${t}"`)}const r=e.find((t=>t.value===undefined));if(r){throw new n(`Invalid message without value for topic "${t}": ${JSON.stringify(r)}`)}}validateConnectionStatus();const s=o.reduce(((t,{topic:e,messages:r})=>{const o=t.findIndex((({topic:t})=>e===t));if(o===-1){t.push({topic:e,messages:r})}else{t[o].messages=[...t[o].messages,...r]}return t}),[]);return await d({acks:t,timeout:e,compression:r,topicMessages:s})};const send=async({acks:t,timeout:e,compression:r,topic:o,messages:s})=>{const n={topic:o,messages:s};return sendBatch({acks:t,timeout:e,compression:r,topicMessages:[n]})};return{send:send,sendBatch:sendBatch}}},673:function(t,e,r){const o=r(2753);const s=r(6797);t.exports=s(o)},2753:function(t,e,r){const o=r(8414);const s=o.fromValue(2538058380);const n=o.fromValue(1540483477);const i=o.fromValue(24);t.exports=t=>{const e=Buffer.isBuffer(t)?t:Buffer.from(String(t));const r=e.length;let a=o.fromValue(s.xor(r));let c=Math.floor(r/4);for(let t=0;t<c;t++){const r=t*4;let s=(e[r+0]&255)+((e[r+1]&255)<<8)+((e[r+2]&255)<<16)+((e[r+3]&255)<<24);s=o.fromValue(s);s=s.multiply(n);s=s.xor(s.toInt()>>>i);s=o.fromValue(s).multiply(n);a=a.multiply(n);a=a.xor(s)}switch(r%4){case 3:a=a.xor((e[(r&~3)+2]&255)<<16);case 2:a=a.xor((e[(r&~3)+1]&255)<<8);case 1:a=a.xor(e[r&~3]&255);a=a.multiply(n)}a=a.xor(a.toInt()>>>13);a=a.multiply(n);a=a.xor(a.toInt()>>>15);return a.toInt()}},1018:function(t,e,r){const o=r(673);const s=r(6739);t.exports={DefaultPartitioner:o,LegacyPartitioner:s,JavaCompatiblePartitioner:o}},6739:function(t,e,r){const o=r(6960);const s=r(6797);t.exports=s(o)},6960:function(t){const e=2538058380;const r=1540483477;const o=24;t.exports=t=>{const s=Buffer.isBuffer(t)?t:Buffer.from(String(t));const n=s.length;let i=e^n;let a=n/4;for(let t=0;t<a;t++){const e=t*4;let n=(s[e+0]&255)+((s[e+1]&255)<<8)+((s[e+2]&255)<<16)+((s[e+3]&255)<<24);n*=r;n^=n>>>o;n*=r;i*=r;i^=n}switch(n%4){case 3:i^=(s[(n&~3)+2]&255)<<16;case 2:i^=(s[(n&~3)+1]&255)<<8;case 1:i^=s[n&~3]&255;i*=r}i^=i>>>13;i*=r;i^=i>>>15;return i}},6797:function(t,e,r){const o=r(2575);const toPositive=t=>t&2147483647;t.exports=t=>()=>{const e={};return({topic:r,partitionMetadata:s,message:n})=>{if(!(r in e)){e[r]=o(32).readUInt32BE(0)}const i=s.length;const a=s.filter((t=>t.leader>=0));const c=a.length;if(n.partition!==null&&n.partition!==undefined){return n.partition}if(n.key!==null&&n.key!==undefined){return toPositive(t(n.key))%i}if(c>0){const t=toPositive(++e[r])%c;return a[t].partitionId}return toPositive(++e[r])%i}}},2575:function(t,e,r){const{KafkaJSNonRetriableError:o}=r(1331);const toNodeCompatible=t=>({randomBytes:e=>t.getRandomValues(Buffer.allocUnsafe(e))});let s=null;if(global&&global.crypto){s=global.crypto.randomBytes===undefined?toNodeCompatible(global.crypto):global.crypto}else if(global&&global.msCrypto){s=toNodeCompatible(global.msCrypto)}else if(global&&!global.crypto){s=r(6113)}const n=65536;t.exports=t=>{if(t>n){throw new o(`Byte length (${t}) exceeds the max number of bytes of entropy available (${n})`)}if(!s){throw new o("No available crypto implementation")}return s.randomBytes(t)}},2212:function(t){t.exports=({topics:t})=>t.flatMap((({topicName:t,partitions:e})=>e.map((e=>({topicName:t,...e})))))},1463:function(t,e,r){const{KafkaJSMetadataNotLoaded:o}=r(1331);const{staleMetadata:s}=r(1133);const n=r(559);const i=r(2158);const a=r(2212);const{keys:c}=Object;t.exports=({logger:t,cluster:e,partitioner:r,eosManager:u,retrier:p})=>async({acks:d,timeout:l,compression:f,topicMessages:h})=>{const m=new Map;const createProducerRequests=async s=>{const p=new Map;await e.refreshMetadataIfNecessary();for(const{topic:i,messages:a}of h){const u=e.findTopicPartitionMetadata(i);if(u.length===0){t.debug("Producing to topic without metadata",{topic:i,targetTopics:Array.from(e.targetTopics)});throw new o("Producing to topic without metadata")}const d=n({topic:i,partitionMetadata:u,messages:a,partitioner:r});const l=c(d);const f=e.findLeaderForPartitions(i,l);const h=c(f);p.set(i,{partitionsPerLeader:f,messagesPerPartition:d});for(const t of h){const r=await e.findBroker({nodeId:t});if(!s.has(r)){s.set(r,null)}}}const m=Array.from(s.keys());const g=m.filter((t=>!s.get(t)));return g.map((async t=>{const e=Array.from(p.entries());const r=e.filter((([e,{partitionsPerLeader:r}])=>!!r[t.nodeId])).map((([e,{partitionsPerLeader:r,messagesPerPartition:o,sequencePerPartition:s}])=>({topic:e,partitions:r[t.nodeId],messagesPerPartition:o})));const o=i(r);await u.acquireBrokerLock(t);try{if(u.isTransactional()){await u.addPartitionsToTransaction(o)}o.forEach((({topic:t,partitions:e})=>{e.forEach((e=>{e["firstSequence"]=u.getSequence(t,e.partition);u.updateSequence(t,e.partition,e.messages.length)}))}));let e;try{e=await t.produce({transactionalId:u.isTransactional()?u.getTransactionalId():undefined,producerId:u.getProducerId(),producerEpoch:u.getProducerEpoch(),acks:d,timeout:l,compression:f,topicData:o})}catch(t){o.forEach((({topic:t,partitions:e})=>{e.forEach((e=>{u.updateSequence(t,e.partition,-e.messages.length)}))}));throw t}const r=d!==0;const n=r?a(e):[];s.set(t,n)}catch(e){s.delete(t);throw e}finally{await u.releaseBrokerLock(t)}}))};return p((async(r,o,n)=>{const i=h.map((({topic:t})=>t));await e.addMultipleTargetTopics(i);try{const t=await createProducerRequests(m);await Promise.all(t);return Array.from(m.values()).flat()}catch(i){if(i.name==="KafkaJSConnectionClosedError"){e.removeBroker({host:i.host,port:i.port})}if(!e.isConnected()){t.debug(`Cluster has disconnected, reconnecting: ${i.message}`,{retryCount:o,retryTime:n});await e.connect();await e.refreshMetadata();throw i}if(s(i)||i.name==="KafkaJSMetadataNotLoaded"||i.name==="KafkaJSConnectionError"||i.name==="KafkaJSConnectionClosedError"||i.name==="KafkaJSProtocolError"&&i.retriable){t.error(`Failed to send messages: ${i.message}`,{retryCount:o,retryTime:n});await e.refreshMetadata();throw i}t.error(`${i.message}`,{retryCount:o,retryTime:n});if(i.retriable)throw i;r(i)}}))}},6149:function(t){t.exports={UNKNOWN:0,ANY:1,ALL:2,READ:3,WRITE:4,CREATE:5,DELETE:6,ALTER:7,DESCRIBE:8,CLUSTER_ACTION:9,DESCRIBE_CONFIGS:10,ALTER_CONFIGS:11,IDEMPOTENT_WRITE:12}},8164:function(t){t.exports={UNKNOWN:0,ANY:1,DENY:2,ALLOW:3}},3331:function(t){t.exports={UNKNOWN:0,ANY:1,TOPIC:2,GROUP:3,CLUSTER:4,TRANSACTIONAL_ID:5,DELEGATION_TOKEN:6}},1208:function(t){t.exports={UNKNOWN:0,TOPIC:2,BROKER:4,BROKER_LOGGER:8}},5834:function(t){t.exports={UNKNOWN:0,TOPIC_CONFIG:1,DYNAMIC_BROKER_CONFIG:2,DYNAMIC_DEFAULT_BROKER_CONFIG:3,STATIC_BROKER_CONFIG:4,DEFAULT_CONFIG:5,DYNAMIC_BROKER_LOGGER_CONFIG:6}},8853:function(t){t.exports={GROUP:0,TRANSACTION:1}},7793:function(t){var e=new Int32Array([0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117]);t.exports=t=>{const{buffer:r}=t;const o=r.length;let s=-1;for(let t=0;t<o;t++){s=e[(s^r[t])&255]^s>>>8}return s^-1}},9149:function(t,e,r){const{KafkaJSInvalidVarIntError:o,KafkaJSInvalidLongError:s}=r(1331);const n=r(8414);const i=1;const a=2;const c=4;const u=8;const p=8;const d=128;const l=127;t.exports=class Decoder{static int32Size(){return c}static decodeZigZag(t){return t>>>1^-(t&1)}static decodeZigZag64(t){return t.shiftRightUnsigned(1).xor(t.and(n.fromInt(1)).negate())}constructor(t){this.buffer=t;this.offset=0}readInt8(){const t=this.buffer.readInt8(this.offset);this.offset+=i;return t}canReadInt16(){return this.canReadBytes(a)}readInt16(){const t=this.buffer.readInt16BE(this.offset);this.offset+=a;return t}canReadInt32(){return this.canReadBytes(c)}readInt32(){const t=this.buffer.readInt32BE(this.offset);this.offset+=c;return t}canReadInt64(){return this.canReadBytes(u)}readInt64(){const t=this.buffer[this.offset];const e=this.buffer[this.offset+7];const r=(t<<24)+this.buffer[this.offset+1]*2**16+this.buffer[this.offset+2]*2**8+this.buffer[this.offset+3];const o=this.buffer[this.offset+4]*2**24+this.buffer[this.offset+5]*2**16+this.buffer[this.offset+6]*2**8+e;this.offset+=u;return(BigInt(r)<<32n)+BigInt(o)}readDouble(){const t=this.buffer.readDoubleBE(this.offset);this.offset+=p;return t}readString(){const t=this.readInt16();if(t===-1){return null}const e=this.buffer.slice(this.offset,this.offset+t);const r=e.toString("utf8");this.offset+=t;return r}readVarIntString(){const t=this.readVarInt();if(t===-1){return null}const e=this.buffer.slice(this.offset,this.offset+t);const r=e.toString("utf8");this.offset+=t;return r}readUVarIntString(){const t=this.readUVarInt();if(t===0){return null}const e=this.buffer.slice(this.offset,this.offset+t-1);const r=e.toString("utf8");this.offset+=t-1;return r}canReadBytes(t){return Buffer.byteLength(this.buffer)-this.offset>=t}readBytes(t=this.readInt32()){if(t===-1){return null}const e=this.buffer.slice(this.offset,this.offset+t);this.offset+=t;return e}readVarIntBytes(){const t=this.readVarInt();if(t===-1){return null}const e=this.buffer.slice(this.offset,this.offset+t);this.offset+=t;return e}readUVarIntBytes(){const t=this.readUVarInt();if(t===0){return null}const e=this.buffer.slice(this.offset,this.offset+t);this.offset+=t-1;return e}readBoolean(){return this.readInt8()===1}readAll(){const t=this.buffer.slice(this.offset);this.offset+=Buffer.byteLength(this.buffer);return t}readArray(t){const e=this.readInt32();if(e===-1){return[]}const r=new Array(e);for(let o=0;o<e;o++){r[o]=t(this)}return r}readVarIntArray(t){const e=this.readVarInt();if(e===-1){return[]}const r=new Array(e);for(let o=0;o<e;o++){r[o]=t(this)}return r}readUVarIntArray(t){const e=this.readUVarInt();if(e===0){return null}const r=new Array(e-1);for(let o=0;o<e-1;o++){r[o]=t(this)}return r}async readArrayAsync(t){const e=this.readInt32();if(e===-1){return[]}const r=new Array(e);for(let o=0;o<e;o++){r[o]=await t(this)}return r}readVarInt(){let t;let e=0;let r=0;do{t=this.buffer[this.offset++];e+=(t&l)<<r;r+=7}while(t>=d);return Decoder.decodeZigZag(e)}readUVarInt(){let t;let e=0;let r=0;while(((t=this.buffer[this.offset++])&d)!==0){e|=(t&l)<<r;r+=7;if(r>28){throw new o("Invalid VarInt, must contain 5 bytes or less")}}e|=t<<r;return e>>>0}readTaggedFields(){const t=this.readUVarInt();if(t===0){return null}const e={};for(let e=0;e<t;e++){this.readUVarInt();this.readUVarIntBytes()}return e}readVarLong(){let t;let e=n.fromInt(0);let r=0;do{if(r>63){throw new s("Invalid Long, must contain 9 bytes or less")}t=this.buffer[this.offset++];e=e.add(n.fromInt(t&l).shiftLeft(r));r+=7}while(t>=d);return Decoder.decodeZigZag64(e)}slice(t){return new Decoder(this.buffer.slice(this.offset,this.offset+t))}forward(t){this.offset+=t}}},7266:function(t,e,r){const o=r(8414);const s=1;const n=2;const i=4;const a=8;const c=8;const u=128;const p=127;const d=4294967168;const l=0xffffffffffffff80n;t.exports=class Encoder{static encodeZigZag(t){return t<<1^t>>31}static encodeZigZag64(t){const e=o.fromValue(t);return e.shiftLeft(1).xor(e.shiftRight(63))}static sizeOfVarInt(t){let e=this.encodeZigZag(t);let r=1;while((e&d)!==0){r+=1;e>>>=7}return r}static sizeOfVarLong(t){let e=Encoder.encodeZigZag64(t);let r=1;while(e.and(l).notEquals(o.fromInt(0))){r+=1;e=e.shiftRightUnsigned(7)}return r}static sizeOfVarIntBytes(t){const e=t==null?-1:Buffer.byteLength(t);if(e<0){return Encoder.sizeOfVarInt(-1)}return Encoder.sizeOfVarInt(e)+e}static nextPowerOfTwo(t){return 1<<31-Math.clz32(t)+1}constructor(t=511){this.buf=Buffer.alloc(Encoder.nextPowerOfTwo(t));this.offset=0}writeBufferInternal(t){const e=t.length;this.ensureAvailable(e);t.copy(this.buf,this.offset,0);this.offset+=e}ensureAvailable(t){if(this.offset+t>this.buf.length){const e=Encoder.nextPowerOfTwo(this.offset+t);const r=Buffer.alloc(e);this.buf.copy(r,0,0,this.offset);this.buf=r}}get buffer(){return this.buf.slice(0,this.offset)}writeInt8(t){this.ensureAvailable(s);this.buf.writeInt8(t,this.offset);this.offset+=s;return this}writeInt16(t){this.ensureAvailable(n);this.buf.writeInt16BE(t,this.offset);this.offset+=n;return this}writeInt32(t){this.ensureAvailable(i);this.buf.writeInt32BE(t,this.offset);this.offset+=i;return this}writeUInt32(t){this.ensureAvailable(i);this.buf.writeUInt32BE(t,this.offset);this.offset+=i;return this}writeInt64(t){this.ensureAvailable(a);const e=o.fromValue(t);this.buf.writeInt32BE(e.getHighBits(),this.offset);this.buf.writeInt32BE(e.getLowBits(),this.offset+i);this.offset+=a;return this}writeDouble(t){this.ensureAvailable(c);this.buf.writeDoubleBE(t,this.offset);this.offset+=c;return this}writeBoolean(t){t?this.writeInt8(1):this.writeInt8(0);return this}writeString(t){if(t==null){this.writeInt16(-1);return this}const e=Buffer.byteLength(t,"utf8");this.ensureAvailable(n+e);this.writeInt16(e);this.buf.write(t,this.offset,e,"utf8");this.offset+=e;return this}writeVarIntString(t){if(t==null){this.writeVarInt(-1);return this}const e=Buffer.byteLength(t,"utf8");this.writeVarInt(e);this.ensureAvailable(e);this.buf.write(t,this.offset,e,"utf8");this.offset+=e;return this}writeUVarIntString(t){if(t==null){this.writeUVarInt(0);return this}const e=Buffer.byteLength(t,"utf8");this.writeUVarInt(e+1);this.ensureAvailable(e);this.buf.write(t,this.offset,e,"utf8");this.offset+=e;return this}writeBytes(t){if(t==null){this.writeInt32(-1);return this}if(Buffer.isBuffer(t)){this.ensureAvailable(i+t.length);this.writeInt32(t.length);this.writeBufferInternal(t)}else{const e=String(t);const r=Buffer.byteLength(e,"utf8");this.ensureAvailable(i+r);this.writeInt32(r);this.buf.write(e,this.offset,r,"utf8");this.offset+=r}return this}writeVarIntBytes(t){if(t==null){this.writeVarInt(-1);return this}if(Buffer.isBuffer(t)){this.writeVarInt(t.length);this.writeBufferInternal(t)}else{const e=String(t);const r=Buffer.byteLength(e,"utf8");this.writeVarInt(r);this.ensureAvailable(r);this.buf.write(e,this.offset,r,"utf8");this.offset+=r}return this}writeUVarIntBytes(t){if(t==null){this.writeVarInt(0);return this}if(Buffer.isBuffer(t)){this.writeUVarInt(t.length+1);this.writeBufferInternal(t)}else{const e=String(t);const r=Buffer.byteLength(e,"utf8");this.writeUVarInt(r+1);this.ensureAvailable(r);this.buf.write(e,this.offset,r,"utf8");this.offset+=r}return this}writeEncoder(t){if(t==null||!Buffer.isBuffer(t.buf)){throw new Error("value should be an instance of Encoder")}this.writeBufferInternal(t.buffer);return this}writeEncoderArray(t){if(!Array.isArray(t)||t.some((t=>t==null||!Buffer.isBuffer(t.buf)))){throw new Error("all values should be an instance of Encoder[]")}t.forEach((t=>{this.writeBufferInternal(t.buffer)}));return this}writeBuffer(t){if(!Buffer.isBuffer(t)){throw new Error("value should be an instance of Buffer")}this.writeBufferInternal(t);return this}writeNullableArray(t,e){const r=t.length!==0?t.length:-1;this.writeArray(t,e,r);return this}writeArray(t,e,r){const o=r==null?t.length:r;this.writeInt32(o);if(e!==undefined){switch(e){case"int32":case"number":t.forEach((t=>this.writeInt32(t)));break;case"string":t.forEach((t=>this.writeString(t)));break;case"object":this.writeEncoderArray(t);break}}else{t.forEach((t=>{switch(typeof t){case"number":this.writeInt32(t);break;case"string":this.writeString(t);break;case"object":this.writeEncoder(t);break}}))}return this}writeVarIntArray(t,e){if(e==="object"){this.writeVarInt(t.length);this.writeEncoderArray(t)}else{const e=t.filter((t=>typeof t==="object"));this.writeVarInt(e.length);this.writeEncoderArray(e)}return this}writeUVarIntArray(t,e){if(e==="object"){this.writeUVarInt(t.length+1);this.writeEncoderArray(t)}else if(t===null){this.writeUVarInt(0)}else{const e=t.filter((t=>typeof t==="object"));this.writeUVarInt(e.length+1);this.writeEncoderArray(e)}return this}writeVarInt(t){return this.writeUVarInt(Encoder.encodeZigZag(t))}writeUVarInt(t){const e=[];while((t&d)!==0){e.push(t&p|u);t>>>=7}e.push(t&p);this.writeBufferInternal(Buffer.from(e));return this}writeVarLong(t){const e=[];let r=Encoder.encodeZigZag64(t);while(r.and(l).notEquals(o.fromInt(0))){e.push(r.and(p).or(u).toInt());r=r.shiftRightUnsigned(7)}e.push(r.toInt());this.writeBufferInternal(Buffer.from(e));return this}size(){return this.offset}toJSON(){return this.buffer.toJSON()}}},1133:function(t,e,r){const{KafkaJSProtocolError:o}=r(1331);const s=r(8708);const n=[{type:"UNKNOWN",code:-1,retriable:false,message:"The server experienced an unexpected error when processing the request"},{type:"OFFSET_OUT_OF_RANGE",code:1,retriable:false,message:"The requested offset is not within the range of offsets maintained by the server"},{type:"CORRUPT_MESSAGE",code:2,retriable:true,message:"This message has failed its CRC checksum, exceeds the valid size, or is otherwise corrupt"},{type:"UNKNOWN_TOPIC_OR_PARTITION",code:3,retriable:true,message:"This server does not host this topic-partition"},{type:"INVALID_FETCH_SIZE",code:4,retriable:false,message:"The requested fetch size is invalid"},{type:"LEADER_NOT_AVAILABLE",code:5,retriable:true,message:"There is no leader for this topic-partition as we are in the middle of a leadership election"},{type:"NOT_LEADER_FOR_PARTITION",code:6,retriable:true,message:"This server is not the leader for that topic-partition"},{type:"REQUEST_TIMED_OUT",code:7,retriable:true,message:"The request timed out"},{type:"BROKER_NOT_AVAILABLE",code:8,retriable:false,message:"The broker is not available"},{type:"REPLICA_NOT_AVAILABLE",code:9,retriable:true,message:"The replica is not available for the requested topic-partition"},{type:"MESSAGE_TOO_LARGE",code:10,retriable:false,message:"The request included a message larger than the max message size the server will accept"},{type:"STALE_CONTROLLER_EPOCH",code:11,retriable:false,message:"The controller moved to another broker"},{type:"OFFSET_METADATA_TOO_LARGE",code:12,retriable:false,message:"The metadata field of the offset request was too large"},{type:"NETWORK_EXCEPTION",code:13,retriable:true,message:"The server disconnected before a response was received"},{type:"GROUP_LOAD_IN_PROGRESS",code:14,retriable:true,message:"The coordinator is loading and hence can't process requests for this group"},{type:"GROUP_COORDINATOR_NOT_AVAILABLE",code:15,retriable:true,message:"The group coordinator is not available"},{type:"NOT_COORDINATOR_FOR_GROUP",code:16,retriable:true,message:"This is not the correct coordinator for this group"},{type:"INVALID_TOPIC_EXCEPTION",code:17,retriable:false,message:"The request attempted to perform an operation on an invalid topic"},{type:"RECORD_LIST_TOO_LARGE",code:18,retriable:false,message:"The request included message batch larger than the configured segment size on the server"},{type:"NOT_ENOUGH_REPLICAS",code:19,retriable:true,message:"Messages are rejected since there are fewer in-sync replicas than required"},{type:"NOT_ENOUGH_REPLICAS_AFTER_APPEND",code:20,retriable:true,message:"Messages are written to the log, but to fewer in-sync replicas than required"},{type:"INVALID_REQUIRED_ACKS",code:21,retriable:false,message:"Produce request specified an invalid value for required acks"},{type:"ILLEGAL_GENERATION",code:22,retriable:false,message:"Specified group generation id is not valid"},{type:"INCONSISTENT_GROUP_PROTOCOL",code:23,retriable:false,message:"The group member's supported protocols are incompatible with those of existing members"},{type:"INVALID_GROUP_ID",code:24,retriable:false,message:"The configured groupId is invalid"},{type:"UNKNOWN_MEMBER_ID",code:25,retriable:false,message:"The coordinator is not aware of this member"},{type:"INVALID_SESSION_TIMEOUT",code:26,retriable:false,message:"The session timeout is not within the range allowed by the broker (as configured by group.min.session.timeout.ms and group.max.session.timeout.ms)"},{type:"REBALANCE_IN_PROGRESS",code:27,retriable:false,message:"The group is rebalancing, so a rejoin is needed",helpUrl:s("docs/faq","what-does-it-mean-to-get-rebalance-in-progress-errors")},{type:"INVALID_COMMIT_OFFSET_SIZE",code:28,retriable:false,message:"The committing offset data size is not valid"},{type:"TOPIC_AUTHORIZATION_FAILED",code:29,retriable:false,message:"Not authorized to access topics: [Topic authorization failed]"},{type:"GROUP_AUTHORIZATION_FAILED",code:30,retriable:false,message:"Not authorized to access group: Group authorization failed"},{type:"CLUSTER_AUTHORIZATION_FAILED",code:31,retriable:false,message:"Cluster authorization failed"},{type:"INVALID_TIMESTAMP",code:32,retriable:false,message:"The timestamp of the message is out of acceptable range"},{type:"UNSUPPORTED_SASL_MECHANISM",code:33,retriable:false,message:"The broker does not support the requested SASL mechanism"},{type:"ILLEGAL_SASL_STATE",code:34,retriable:false,message:"Request is not valid given the current SASL state"},{type:"UNSUPPORTED_VERSION",code:35,retriable:false,message:"The version of API is not supported"},{type:"TOPIC_ALREADY_EXISTS",code:36,retriable:false,message:"Topic with this name already exists"},{type:"INVALID_PARTITIONS",code:37,retriable:false,message:"Number of partitions is invalid"},{type:"INVALID_REPLICATION_FACTOR",code:38,retriable:false,message:"Replication-factor is invalid"},{type:"INVALID_REPLICA_ASSIGNMENT",code:39,retriable:false,message:"Replica assignment is invalid"},{type:"INVALID_CONFIG",code:40,retriable:false,message:"Configuration is invalid"},{type:"NOT_CONTROLLER",code:41,retriable:true,message:"This is not the correct controller for this cluster"},{type:"INVALID_REQUEST",code:42,retriable:false,message:"This most likely occurs because of a request being malformed by the client library or the message was sent to an incompatible broker. See the broker logs for more details"},{type:"UNSUPPORTED_FOR_MESSAGE_FORMAT",code:43,retriable:false,message:"The message format version on the broker does not support the request"},{type:"POLICY_VIOLATION",code:44,retriable:false,message:"Request parameters do not satisfy the configured policy"},{type:"OUT_OF_ORDER_SEQUENCE_NUMBER",code:45,retriable:false,message:"The broker received an out of order sequence number"},{type:"DUPLICATE_SEQUENCE_NUMBER",code:46,retriable:false,message:"The broker received a duplicate sequence number"},{type:"INVALID_PRODUCER_EPOCH",code:47,retriable:false,message:"Producer attempted an operation with an old epoch. Either there is a newer producer with the same transactionalId, or the producer's transaction has been expired by the broker"},{type:"INVALID_TXN_STATE",code:48,retriable:false,message:"The producer attempted a transactional operation in an invalid state"},{type:"INVALID_PRODUCER_ID_MAPPING",code:49,retriable:false,message:"The producer attempted to use a producer id which is not currently assigned to its transactional id"},{type:"INVALID_TRANSACTION_TIMEOUT",code:50,retriable:false,message:"The transaction timeout is larger than the maximum value allowed by the broker (as configured by max.transaction.timeout.ms)"},{type:"CONCURRENT_TRANSACTIONS",code:51,retriable:true,message:"The producer attempted to update a transaction while another concurrent operation on the same transaction was ongoing"},{type:"TRANSACTION_COORDINATOR_FENCED",code:52,retriable:false,message:"Indicates that the transaction coordinator sending a WriteTxnMarker is no longer the current coordinator for a given producer"},{type:"TRANSACTIONAL_ID_AUTHORIZATION_FAILED",code:53,retriable:false,message:"Transactional Id authorization failed"},{type:"SECURITY_DISABLED",code:54,retriable:false,message:"Security features are disabled"},{type:"OPERATION_NOT_ATTEMPTED",code:55,retriable:false,message:"The broker did not attempt to execute this operation. This may happen for batched RPCs where some operations in the batch failed, causing the broker to respond without trying the rest"},{type:"KAFKA_STORAGE_ERROR",code:56,retriable:true,message:"Disk error when trying to access log file on the disk"},{type:"LOG_DIR_NOT_FOUND",code:57,retriable:false,message:"The user-specified log directory is not found in the broker config"},{type:"SASL_AUTHENTICATION_FAILED",code:58,retriable:false,message:"SASL Authentication failed",helpUrl:s("docs/configuration","sasl")},{type:"UNKNOWN_PRODUCER_ID",code:59,retriable:false,message:"This exception is raised by the broker if it could not locate the producer metadata associated with the producerId in question. This could happen if, for instance, the producer's records were deleted because their retention time had elapsed. Once the last records of the producerId are removed, the producer's metadata is removed from the broker, and future appends by the producer will return this exception"},{type:"REASSIGNMENT_IN_PROGRESS",code:60,retriable:false,message:"A partition reassignment is in progress"},{type:"DELEGATION_TOKEN_AUTH_DISABLED",code:61,retriable:false,message:"Delegation Token feature is not enabled"},{type:"DELEGATION_TOKEN_NOT_FOUND",code:62,retriable:false,message:"Delegation Token is not found on server"},{type:"DELEGATION_TOKEN_OWNER_MISMATCH",code:63,retriable:false,message:"Specified Principal is not valid Owner/Renewer"},{type:"DELEGATION_TOKEN_REQUEST_NOT_ALLOWED",code:64,retriable:false,message:"Delegation Token requests are not allowed on PLAINTEXT/1-way SSL channels and on delegation token authenticated channels"},{type:"DELEGATION_TOKEN_AUTHORIZATION_FAILED",code:65,retriable:false,message:"Delegation Token authorization failed"},{type:"DELEGATION_TOKEN_EXPIRED",code:66,retriable:false,message:"Delegation Token is expired"},{type:"INVALID_PRINCIPAL_TYPE",code:67,retriable:false,message:"Supplied principalType is not supported"},{type:"NON_EMPTY_GROUP",code:68,retriable:false,message:"The group is not empty"},{type:"GROUP_ID_NOT_FOUND",code:69,retriable:false,message:"The group id was not found"},{type:"FETCH_SESSION_ID_NOT_FOUND",code:70,retriable:true,message:"The fetch session ID was not found"},{type:"INVALID_FETCH_SESSION_EPOCH",code:71,retriable:true,message:"The fetch session epoch is invalid"},{type:"LISTENER_NOT_FOUND",code:72,retriable:true,message:"There is no listener on the leader broker that matches the listener on which metadata request was processed"},{type:"TOPIC_DELETION_DISABLED",code:73,retriable:false,message:"Topic deletion is disabled"},{type:"FENCED_LEADER_EPOCH",code:74,retriable:true,message:"The leader epoch in the request is older than the epoch on the broker"},{type:"UNKNOWN_LEADER_EPOCH",code:75,retriable:true,message:"The leader epoch in the request is newer than the epoch on the broker"},{type:"UNSUPPORTED_COMPRESSION_TYPE",code:76,retriable:false,message:"The requesting client does not support the compression type of given partition"},{type:"STALE_BROKER_EPOCH",code:77,retriable:false,message:"Broker epoch has changed"},{type:"OFFSET_NOT_AVAILABLE",code:78,retriable:true,message:"The leader high watermark has not caught up from a recent leader election so the offsets cannot be guaranteed to be monotonically increasing"},{type:"MEMBER_ID_REQUIRED",code:79,retriable:false,message:"The group member needs to have a valid member id before actually entering a consumer group"},{type:"PREFERRED_LEADER_NOT_AVAILABLE",code:80,retriable:true,message:"The preferred leader was not available"},{type:"GROUP_MAX_SIZE_REACHED",code:81,retriable:false,message:"The consumer group has reached its max size. It already has the configured maximum number of members"},{type:"FENCED_INSTANCE_ID",code:82,retriable:false,message:"The broker rejected this static consumer since another consumer with the same group instance id has registered with a different member id"},{type:"ELIGIBLE_LEADERS_NOT_AVAILABLE",code:83,retriable:true,message:"Eligible topic partition leaders are not available"},{type:"ELECTION_NOT_NEEDED",code:84,retriable:true,message:"Leader election not needed for topic partition"},{type:"NO_REASSIGNMENT_IN_PROGRESS",code:85,retriable:false,message:"No partition reassignment is in progress"},{type:"GROUP_SUBSCRIBED_TO_TOPIC",code:86,retriable:false,message:"Deleting offsets of a topic is forbidden while the consumer group is actively subscribed to it"},{type:"INVALID_RECORD",code:87,retriable:false,message:"This record has failed the validation on broker and hence be rejected"},{type:"UNSTABLE_OFFSET_COMMIT",code:88,retriable:true,message:"There are unstable offsets that need to be cleared"}];const unknownErrorCode=t=>({type:"KAFKAJS_UNKNOWN_ERROR_CODE",code:-99,retriable:false,message:`Unknown error code ${t}`});const i=0;const a=35;const failure=t=>t!==i;const createErrorFromCode=t=>new o(n.find((e=>e.code===t))||unknownErrorCode(t));const failIfVersionNotSupported=t=>{if(t===a){throw createErrorFromCode(a)}};const staleMetadata=t=>["UNKNOWN_TOPIC_OR_PARTITION","LEADER_NOT_AVAILABLE","NOT_LEADER_FOR_PARTITION"].includes(t.type);t.exports={failure:failure,errorCodes:n,createErrorFromCode:createErrorFromCode,failIfVersionNotSupported:failIfVersionNotSupported,staleMetadata:staleMetadata}},3541:function(t){t.exports={READ_UNCOMMITTED:0,READ_COMMITTED:1}},2076:function(t,e,r){const o=r(8414);const s=r(9149);const n=r(1280);const{lookupCodecByAttributes:i}=r(5516);const{KafkaJSPartialMessageError:a}=r(1331);t.exports=async(t,e=null)=>{const r=[];const o=e||t.readInt32();const n=t.slice(o);while(n.offset<o){try{const t=EntryDecoder(n);const e=i(t.attributes);if(e){const o=await e.decompress(t.value);r.push(...EntriesDecoder(new s(o),t))}else{r.push(t)}}catch(t){if(t.name==="KafkaJSPartialMessageError"){break}if(t.name==="KafkaJSUnsupportedMagicByteInMessageSet"){break}throw t}}t.forward(o);return r};const EntriesDecoder=(t,e)=>{const r=[];while(t.offset<t.buffer.length){r.push(EntryDecoder(t))}if(e.magicByte>0&&e.offset>=0){const t=o.fromValue(e.offset);const s=o.fromValue(r[r.length-1].offset);const n=t-s;for(const t of r){t.offset=o.fromValue(t.offset).add(n).toString()}}return r};const EntryDecoder=t=>{if(!t.canReadInt64()){throw new a(`Tried to decode a partial message: There isn't enough bytes to read the offset`)}const e=t.readInt64().toString();if(!t.canReadInt32()){throw new a(`Tried to decode a partial message: There isn't enough bytes to read the message size`)}const r=t.readInt32();return n(e,r,t)}},8126:function(t,e,r){const o=r(7266);const s=r(5629);const{Types:n}=r(5516);t.exports=({messageVersion:t=0,compression:e,entries:r})=>{const i=e!==n.None;const a=s({version:t});const c=new o;r.forEach(((t,e)=>{const r=a(t);c.writeInt64(i?e:-1);c.writeInt32(r.size());c.writeEncoder(r)}));return c}},4891:function(t,e,r){const{promisify:o}=r(3837);const s=r(9796);const n=o(s.gzip);const i=o(s.unzip);t.exports={async compress(t){return await n(t.buffer)},async decompress(t){return await i(t)}}},5516:function(t,e,r){const{KafkaJSNotImplemented:o}=r(1331);const s=7;const n={None:0,GZIP:1,Snappy:2,LZ4:3,ZSTD:4};const i={[n.GZIP]:()=>r(4891),[n.Snappy]:()=>{throw new o("Snappy compression not implemented")},[n.LZ4]:()=>{throw new o("LZ4 compression not implemented")},[n.ZSTD]:()=>{throw new o("ZSTD compression not implemented")}};const lookupCodec=t=>i[t]?i[t]():null;const lookupCodecByAttributes=t=>{const e=i[t&s];return e?e():null};t.exports={Types:n,Codecs:i,lookupCodec:lookupCodec,lookupCodecByAttributes:lookupCodecByAttributes,COMPRESSION_CODEC_MASK:s}},1280:function(t,e,r){const{KafkaJSPartialMessageError:o,KafkaJSUnsupportedMagicByteInMessageSet:s}=r(1331);const n=r(7993);const i=r(7848);const decodeMessage=(t,e)=>{switch(e){case 0:return n(t);case 1:return i(t);default:throw new s(`Unsupported MessageSet message version, magic byte: ${e}`)}};t.exports=(t,e,r)=>{const s=Buffer.byteLength(r.slice(e).buffer);if(s<e){throw new o(`Tried to decode a partial message: remainingBytes(${s}) < messageSize(${e})`)}const n=r.readInt32();const i=r.readInt8();const a=decodeMessage(r,i);return Object.assign({offset:t,size:e,crc:n,magicByte:i},a)}},5629:function(t,e,r){const o={0:r(2694),1:r(3038)};t.exports=({version:t=0})=>o[t]},7993:function(t){t.exports=t=>({attributes:t.readInt8(),key:t.readBytes(),value:t.readBytes()})},2694:function(t,e,r){const o=r(7266);const s=r(7793);const{Types:n,COMPRESSION_CODEC_MASK:i}=r(5516);t.exports=({compression:t=n.None,key:e,value:r})=>{const a=(new o).writeInt8(0).writeInt8(t&i).writeBytes(e).writeBytes(r);const c=s(a);return(new o).writeInt32(c).writeEncoder(a)}},7848:function(t){t.exports=t=>({attributes:t.readInt8(),timestamp:t.readInt64().toString(),key:t.readBytes(),value:t.readBytes()})},3038:function(t,e,r){const o=r(7266);const s=r(7793);const{Types:n,COMPRESSION_CODEC_MASK:i}=r(5516);t.exports=({compression:t=n.None,timestamp:e=Date.now(),key:r,value:a})=>{const c=(new o).writeInt8(1).writeInt8(t&i).writeInt64(e).writeBytes(r).writeBytes(a);const u=s(c);return(new o).writeInt32(u).writeEncoder(c)}},5751:function(t){const crc32C=t=>{let r=0^-1;for(let o=0;o<t.length;o++){r=e[(r^t[o])&255]^r>>>8}return(r^-1)>>>0};t.exports=crc32C;var e=new Int32Array([0,4067132163,3778769143,324072436,3348797215,904991772,648144872,3570033899,2329499855,2024987596,1809983544,2575936315,1296289744,3207089363,2893594407,1578318884,274646895,3795141740,4049975192,51262619,3619967088,632279923,922689671,3298075524,2592579488,1760304291,2075979607,2312596564,1562183871,2943781820,3156637768,1313733451,549293790,3537243613,3246849577,871202090,3878099393,357341890,102525238,4101499445,2858735121,1477399826,1264559846,3107202533,1845379342,2677391885,2361733625,2125378298,820201905,3263744690,3520608582,598981189,4151959214,85089709,373468761,3827903834,3124367742,1213305469,1526817161,2842354314,2107672161,2412447074,2627466902,1861252501,1098587580,3004210879,2688576843,1378610760,2262928035,1955203488,1742404180,2511436119,3416409459,969524848,714683780,3639785095,205050476,4266873199,3976438427,526918040,1361435347,2739821008,2954799652,1114974503,2529119692,1691668175,2005155131,2247081528,3690758684,697762079,986182379,3366744552,476452099,3993867776,4250756596,255256311,1640403810,2477592673,2164122517,1922457750,2791048317,1412925310,1197962378,3037525897,3944729517,427051182,170179418,4165941337,746937522,3740196785,3451792453,1070968646,1905808397,2213795598,2426610938,1657317369,3053634322,1147748369,1463399397,2773627110,4215344322,153784257,444234805,3893493558,1021025245,3467647198,3722505002,797665321,2197175160,1889384571,1674398607,2443626636,1164749927,3070701412,2757221520,1446797203,137323447,4198817972,3910406976,461344835,3484808360,1037989803,781091935,3705997148,2460548119,1623424788,1939049696,2180517859,1429367560,2807687179,3020495871,1180866812,410100952,3927582683,4182430767,186734380,3756733383,763408580,1053836080,3434856499,2722870694,1344288421,1131464017,2971354706,1708204729,2545590714,2229949006,1988219213,680717673,3673779818,3383336350,1002577565,4010310262,493091189,238226049,4233660802,2987750089,1082061258,1395524158,2705686845,1972364758,2279892693,2494862625,1725896226,952904198,3399985413,3656866545,731699698,4283874585,222117402,510512622,3959836397,3280807620,837199303,582374963,3504198960,68661723,4135334616,3844915500,390545967,1230274059,3141532936,2825850620,1510247935,2395924756,2091215383,1878366691,2644384480,3553878443,565732008,854102364,3229815391,340358836,3861050807,4117890627,119113024,1493875044,2875275879,3090270611,1247431312,2660249211,1828433272,2141937292,2378227087,3811616794,291187481,34330861,4032846830,615137029,3603020806,3314634738,939183345,1776939221,2609017814,2295496738,2058945313,2926798794,1545135305,1330124605,3173225534,4084100981,17165430,307568514,3762199681,888469610,3332340585,3587147933,665062302,2042050490,2346497209,2559330125,1793573966,3190661285,1279665062,1595330642,2910671697])},1943:function(t,e,r){const o=r(5751);const unsigned=t=>Uint32Array.from([t])[0];t.exports=t=>unsigned(o(t))},2693:function(t){t.exports=t=>({key:t.readVarIntString(),value:t.readVarIntBytes()})},8458:function(t,e,r){const o=r(7266);t.exports=({key:t,value:e})=>(new o).writeVarIntString(t).writeVarIntBytes(e)},7219:function(t,e,r){const o=r(8414);const s=r(2693);const n=r(3231);t.exports=(t,e={})=>{const{firstOffset:r,firstTimestamp:i,magicByte:a,isControlBatch:c=false,timestampType:u,maxTimestamp:p}=e;const d=t.readInt8();const l=t.readVarLong();const f=u===n.LOG_APPEND_TIME&&p?p:o.fromValue(i).add(l).toString();const h=t.readVarInt();const m=o.fromValue(r).add(h).toString();const g=t.readVarIntBytes();const I=t.readVarIntBytes();const y=t.readVarIntArray(s).reduce(((t,{key:e,value:r})=>({...t,[e]:t[e]===undefined?r:Array.isArray(t[e])?t[e].concat([r]):[t[e],r]})),{});return{magicByte:a,attributes:d,timestamp:f,offset:m,key:g,value:I,headers:y,isControlRecord:c,batchContext:e}}},8821:function(t,e,r){const o=r(7266);const s=r(8458);t.exports=({offsetDelta:t=0,timestampDelta:e=0,key:r,value:n,headers:i={}})=>{const a=Object.keys(i).flatMap((t=>!Array.isArray(i[t])?[{key:t,value:i[t]}]:i[t].map((e=>({key:t,value:e})))));const c=1+o.sizeOfVarLong(e)+o.sizeOfVarInt(t)+o.sizeOfVarIntBytes(r)+o.sizeOfVarIntBytes(n)+sizeOfHeaders(a);return(new o).writeVarInt(c).writeInt8(0).writeVarLong(e).writeVarInt(t).writeVarIntBytes(r).writeVarIntBytes(n).writeVarIntArray(a.map(s))};const sizeOfHeaders=t=>{let e=o.sizeOfVarInt(t.length);for(const r of t){const t=Buffer.byteLength(r.key);const s=Buffer.byteLength(r.value);e+=o.sizeOfVarInt(t)+t;if(r.value===null){e+=o.sizeOfVarInt(-1)}else{e+=o.sizeOfVarInt(s)+s}}return e}},5723:function(t,e,r){const o=r(9149);const{KafkaJSPartialMessageError:s}=r(1331);const{lookupCodecByAttributes:n}=r(5516);const i=r(7219);const a=r(3231);const c=8;const u=16;const p=32;t.exports=async t=>{const e=t.readInt64().toString();const r=t.readInt32();const o=t.slice(r);t.forward(r);const i=Buffer.byteLength(o.buffer);if(i<r){throw new s(`Tried to decode a partial record batch: remainingBytes(${i}) < recordBatchLength(${r})`)}const d=o.readInt32();const l=o.readInt8();const f=o.readInt32();const h=o.readInt16();const m=o.readInt32();const g=o.readInt64().toString();const I=o.readInt64().toString();const y=o.readInt64().toString();const w=o.readInt16();const T=o.readInt32();const E=(h&u)>0;const S=(h&p)>0;const b=(h&c)>0?a.LOG_APPEND_TIME:a.CREATE_TIME;const A=n(h);const O={firstOffset:e,firstTimestamp:g,partitionLeaderEpoch:d,inTransaction:E,isControlBatch:S,lastOffsetDelta:m,producerId:y,producerEpoch:w,firstSequence:T,maxTimestamp:I,timestampType:b};const C=await decodeRecords(A,o,{...O,magicByte:l});return{...O,records:C}};const decodeRecords=async(t,e,r)=>{if(!t){return e.readArray((t=>decodeRecord(t,r)))}const s=e.readInt32();if(s<=0){return[]}const n=e.readAll();const i=await t.decompress(n);const a=new o(i);const c=new Array(s);for(let t=0;t<s;t++){c[t]=decodeRecord(a,r)}return c};const decodeRecord=(t,e)=>{const r=t.readVarIntBytes();return i(new o(r),e)}},7315:function(t,e,r){const o=r(8414);const s=r(7266);const n=r(1943);const{Types:i,lookupCodec:a,COMPRESSION_CODEC_MASK:c}=r(5516);const u=2;const p=0;const d=16;const RecordBatch=async({compression:t=i.None,firstOffset:e=o.fromInt(0),firstTimestamp:r=Date.now(),maxTimestamp:a=Date.now(),partitionLeaderEpoch:l=0,lastOffsetDelta:f=0,transactional:h=false,producerId:m=o.fromValue(-1),producerEpoch:g=0,firstSequence:I=0,records:y=[]})=>{const w=t&c;const T=h?d:0;const E=w|p|T;const S=(new s).writeInt16(E).writeInt32(f).writeInt64(r).writeInt64(a).writeInt64(m).writeInt16(g).writeInt32(I);if(t===i.None){if(y.every((t=>typeof t===typeof y[0]))){S.writeArray(y,typeof y[0])}else{S.writeArray(y)}}else{const e=await compressRecords(t,y);S.writeInt32(y.length).writeBuffer(e)}const b=(new s).writeInt32(l).writeInt8(u).writeUInt32(n(S.buffer)).writeEncoder(S);return(new s).writeInt64(e).writeBytes(b.buffer)};const compressRecords=async(t,e)=>{const r=a(t);const o=new s;o.writeEncoderArray(e);return r.compress(o)};t.exports={RecordBatch:RecordBatch,MAGIC_BYTE:u}},5323:function(t,e,r){const o=r(7266);t.exports=async({correlationId:t,clientId:e,request:{apiKey:r,apiVersion:s,encode:n}})=>{const i=await n();const a=(new o).writeInt16(r).writeInt16(s).writeInt32(t).writeString(e).writeEncoder(i);return(new o).writeInt32(a.size()).writeEncoder(a)}},8305:function(t,e,r){const o={0:({transactionalId:t,producerId:e,producerEpoch:o,groupId:s})=>{const n=r(9649);const i=r(9228);return{request:n({transactionalId:t,producerId:e,producerEpoch:o,groupId:s}),response:i}},1:({transactionalId:t,producerId:e,producerEpoch:o,groupId:s})=>{const n=r(4351);const i=r(8890);return{request:n({transactionalId:t,producerId:e,producerEpoch:o,groupId:s}),response:i}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},9649:function(t,e,r){const o=r(7266);const{AddOffsetsToTxn:s}=r(1062);t.exports=({transactionalId:t,producerId:e,producerEpoch:r,groupId:n})=>({apiKey:s,apiVersion:0,apiName:"AddOffsetsToTxn",encode:async()=>(new o).writeString(t).writeInt64(e).writeInt16(r).writeString(n)})},9228:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();i(s);return{throttleTime:r,errorCode:s}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},4351:function(t,e,r){const o=r(9649);t.exports=({transactionalId:t,producerId:e,producerEpoch:r,groupId:s})=>Object.assign(o({transactionalId:t,producerId:e,producerEpoch:r,groupId:s}),{apiVersion:1})},8890:function(t,e,r){const{parse:o,decode:s}=r(9228);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},5790:function(t,e,r){const o={0:({transactionalId:t,producerId:e,producerEpoch:o,topics:s})=>{const n=r(664);const i=r(8491);return{request:n({transactionalId:t,producerId:e,producerEpoch:o,topics:s}),response:i}},1:({transactionalId:t,producerId:e,producerEpoch:o,topics:s})=>{const n=r(271);const i=r(3067);return{request:n({transactionalId:t,producerId:e,producerEpoch:o,topics:s}),response:i}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},664:function(t,e,r){const o=r(7266);const{AddPartitionsToTxn:s}=r(1062);t.exports=({transactionalId:t,producerId:e,producerEpoch:r,topics:n})=>({apiKey:s,apiVersion:0,apiName:"AddPartitionsToTxn",encode:async()=>(new o).writeString(t).writeInt64(e).writeInt16(r).writeArray(n.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=t=>(new o).writeInt32(t)},8491:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=await e.readArrayAsync(decodeError);return{throttleTime:r,errors:s}};const decodeError=async t=>({topic:t.readString(),partitionErrors:await t.readArrayAsync(decodePartitionError)});const decodePartitionError=t=>({partition:t.readInt32(),errorCode:t.readInt16()});const parse=async t=>{const e=t.errors.map((({partitionErrors:t})=>({partitionsWithErrors:t.filter((({errorCode:t})=>s(t)))}))).filter((({partitionsWithErrors:t})=>t.length));if(e.length>0){throw n(e[0].partitionsWithErrors[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},271:function(t,e,r){const o=r(664);t.exports=({transactionalId:t,producerId:e,producerEpoch:r,topics:s})=>Object.assign(o({transactionalId:t,producerId:e,producerEpoch:r,topics:s}),{apiVersion:1})},3067:function(t,e,r){const{parse:o,decode:s}=r(8491);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},4636:function(t,e,r){const o={0:({resources:t,validateOnly:e})=>{const o=r(4702);const s=r(8112);return{request:o({resources:t,validateOnly:e}),response:s}},1:({resources:t,validateOnly:e})=>{const o=r(9245);const s=r(3991);return{request:o({resources:t,validateOnly:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},4702:function(t,e,r){const o=r(7266);const{AlterConfigs:s}=r(1062);t.exports=({resources:t,validateOnly:e=false})=>({apiKey:s,apiVersion:0,apiName:"AlterConfigs",encode:async()=>(new o).writeArray(t.map(encodeResource)).writeBoolean(e)});const encodeResource=({type:t,name:e,configEntries:r})=>(new o).writeInt8(t).writeString(e).writeArray(r.map(encodeConfigEntries));const encodeConfigEntries=({name:t,value:e})=>(new o).writeString(t).writeString(e)},8112:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decodeResources=t=>({errorCode:t.readInt16(),errorMessage:t.readString(),resourceType:t.readInt8(),resourceName:t.readString()});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readArray(decodeResources);return{throttleTime:r,resources:s}};const parse=async t=>{const e=t.resources.filter((({errorCode:t})=>s(t)));if(e.length>0){throw n(e[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},9245:function(t,e,r){const o=r(4702);t.exports=({resources:t,validateOnly:e})=>Object.assign(o({resources:t,validateOnly:e}),{apiVersion:1})},3991:function(t,e,r){const{parse:o,decode:s}=r(8112);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},7379:function(t,e,r){const o={0:({topics:t,timeout:e})=>{const o=r(2127);const s=r(2876);return{request:o({topics:t,timeout:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},2127:function(t,e,r){const o=r(7266);const{AlterPartitionReassignments:s}=r(1062);t.exports=({topics:t,timeout:e=5e3})=>({apiKey:s,apiVersion:0,apiName:"AlterPartitionReassignments",encode:async()=>(new o).writeUVarIntBytes().writeInt32(e).writeUVarIntArray(t.map(encodeTopics)).writeUVarIntBytes()});const encodeTopics=({topic:t,partitionAssignment:e})=>(new o).writeUVarIntString(t).writeUVarIntArray(e.map(encodePartitionAssignment)).writeUVarIntBytes();const encodePartitionAssignment=({partition:t,replicas:e})=>(new o).writeInt32(t).writeUVarIntArray(e.map(encodeReplicas)).writeUVarIntBytes();const encodeReplicas=t=>(new o).writeInt32(t)},2876:function(t,e,r){const{KafkaJSAggregateError:o,KafkaJSAlterPartitionReassignmentsError:s}=r(1331);const n=r(9149);const{failure:i,createErrorFromCode:a}=r(1133);const decodeResponses=t=>{const e={topic:t.readUVarIntString(),partitions:t.readUVarIntArray(decodePartitions)};t.readTaggedFields();return e};const decodePartitions=t=>{const e={partition:t.readInt32(),errorCode:t.readInt16()};t.readUVarIntString();t.readTaggedFields();return e};const decode=async t=>{const e=new n(t);e.readTaggedFields();const r=e.readInt32();const o=e.readInt16();e.readUVarIntString();return{throttleTime:r,errorCode:o,responses:e.readUVarIntArray(decodeResponses)}};const parse=async t=>{if(i(t.errorCode)){throw new s(a(t.errorCode))}const e=t.responses.flatMap((({partitions:t,topic:e})=>t.filter((t=>i(t.errorCode))).map((t=>({...t,topic:e})))));if(e.length>0){throw new o("Errors altering partition reassignments",e.map((({topic:t,partition:e,errorCode:r})=>new s(a(r),t,e))))}return t};t.exports={decode:decode,parse:parse}},1062:function(t){t.exports={Produce:0,Fetch:1,ListOffsets:2,Metadata:3,LeaderAndIsr:4,StopReplica:5,UpdateMetadata:6,ControlledShutdown:7,OffsetCommit:8,OffsetFetch:9,GroupCoordinator:10,JoinGroup:11,Heartbeat:12,LeaveGroup:13,SyncGroup:14,DescribeGroups:15,ListGroups:16,SaslHandshake:17,ApiVersions:18,CreateTopics:19,DeleteTopics:20,DeleteRecords:21,InitProducerId:22,OffsetForLeaderEpoch:23,AddPartitionsToTxn:24,AddOffsetsToTxn:25,EndTxn:26,WriteTxnMarkers:27,TxnOffsetCommit:28,DescribeAcls:29,CreateAcls:30,DeleteAcls:31,DescribeConfigs:32,AlterConfigs:33,AlterReplicaLogDirs:34,DescribeLogDirs:35,SaslAuthenticate:36,CreatePartitions:37,CreateDelegationToken:38,RenewDelegationToken:39,ExpireDelegationToken:40,DescribeDelegationToken:41,DeleteGroups:42,ElectPreferredLeaders:43,IncrementalAlterConfigs:44,AlterPartitionReassignments:45,ListPartitionReassignments:46}},7242:function(t,e,r){const o=false;const s={0:()=>{const t=r(4055);const e=r(5417);return{request:t(),response:e,logResponseError:true}},1:()=>{const t=r(8347);const e=r(9411);return{request:t(),response:e,logResponseError:o}},2:()=>{const t=r(597);const e=r(2655);return{request:t(),response:e,logResponseError:o}}};t.exports={versions:Object.keys(s),protocol:({version:t})=>s[t]}},4055:function(t,e,r){const o=r(7266);const{ApiVersions:s}=r(1062);t.exports=()=>({apiKey:s,apiVersion:0,apiName:"ApiVersions",encode:async()=>new o})},5417:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const apiVersion=t=>({apiKey:t.readInt16(),minVersion:t.readInt16(),maxVersion:t.readInt16()});const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);return{errorCode:r,apiVersions:e.readArray(apiVersion)}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},8347:function(t,e,r){const o=r(4055);t.exports=()=>({...o(),apiVersion:1})},9411:function(t,e,r){const o=r(9149);const{failIfVersionNotSupported:s}=r(1133);const{parse:n}=r(5417);const apiVersion=t=>({apiKey:t.readInt16(),minVersion:t.readInt16(),maxVersion:t.readInt16()});const decode=async t=>{const e=new o(t);const r=e.readInt16();s(r);const n=e.readArray(apiVersion);const i=e.canReadInt32()?e.readInt32():0;return{errorCode:r,apiVersions:n,throttleTime:i}};t.exports={decode:decode,parse:n}},597:function(t,e,r){const o=r(4055);t.exports=()=>({...o(),apiVersion:2})},2655:function(t,e,r){const{parse:o,decode:s}=r(9411);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},2809:function(t,e,r){const o={0:({creations:t})=>{const e=r(1545);const o=r(701);return{request:e({creations:t}),response:o}},1:({creations:t})=>{const e=r(1717);const o=r(5756);return{request:e({creations:t}),response:o}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},1545:function(t,e,r){const o=r(7266);const{CreateAcls:s}=r(1062);const encodeCreations=({resourceType:t,resourceName:e,principal:r,host:s,operation:n,permissionType:i})=>(new o).writeInt8(t).writeString(e).writeString(r).writeString(s).writeInt8(n).writeInt8(i);t.exports=({creations:t})=>({apiKey:s,apiVersion:0,apiName:"CreateAcls",encode:async()=>(new o).writeArray(t.map(encodeCreations))})},701:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decodeCreationResponse=t=>({errorCode:t.readInt16(),errorMessage:t.readString()});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readArray(decodeCreationResponse);return{throttleTime:r,creationResponses:s}};const parse=async t=>{const e=t.creationResponses.filter((({errorCode:t})=>s(t)));if(e.length>0){throw n(e[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},1717:function(t,e,r){const o=r(7266);const{CreateAcls:s}=r(1062);const encodeCreations=({resourceType:t,resourceName:e,resourcePatternType:r,principal:s,host:n,operation:i,permissionType:a})=>(new o).writeInt8(t).writeString(e).writeInt8(r).writeString(s).writeString(n).writeInt8(i).writeInt8(a);t.exports=({creations:t})=>({apiKey:s,apiVersion:1,apiName:"CreateAcls",encode:async()=>(new o).writeArray(t.map(encodeCreations))})},5756:function(t,e,r){const{parse:o,decode:s}=r(701);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},3457:function(t,e,r){const o={0:({topicPartitions:t,timeout:e,validateOnly:o})=>{const s=r(8334);const n=r(7901);return{request:s({topicPartitions:t,timeout:e,validateOnly:o}),response:n}},1:({topicPartitions:t,validateOnly:e,timeout:o})=>{const s=r(8119);const n=r(1917);return{request:s({topicPartitions:t,validateOnly:e,timeout:o}),response:n}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},8334:function(t,e,r){const o=r(7266);const{CreatePartitions:s}=r(1062);t.exports=({topicPartitions:t,validateOnly:e=false,timeout:r=5e3})=>({apiKey:s,apiVersion:0,apiName:"CreatePartitions",encode:async()=>(new o).writeArray(t.map(encodeTopicPartitions)).writeInt32(r).writeBoolean(e)});const encodeTopicPartitions=({topic:t,count:e,assignments:r=[]})=>(new o).writeString(t).writeInt32(e).writeNullableArray(r.map(encodeAssignments));const encodeAssignments=t=>(new o).writeNullableArray(t)},7901:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const topicNameComparator=(t,e)=>t.topic.localeCompare(e.topic);const topicErrors=t=>({topic:t.readString(),errorCode:t.readInt16(),errorMessage:t.readString()});const decode=async t=>{const e=new o(t);const r=e.readInt32();return{throttleTime:r,topicErrors:e.readArray(topicErrors).sort(topicNameComparator)}};const parse=async t=>{const e=t.topicErrors.filter((({errorCode:t})=>s(t)));if(e.length>0){throw n(e[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},8119:function(t,e,r){const o=r(8334);t.exports=({topicPartitions:t,validateOnly:e,timeout:r})=>Object.assign(o({topicPartitions:t,validateOnly:e,timeout:r}),{apiVersion:1})},1917:function(t,e,r){const{parse:o,decode:s}=r(7901);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},5829:function(t,e,r){const o={0:({topics:t,timeout:e})=>{const o=r(7408);const s=r(2857);return{request:o({topics:t,timeout:e}),response:s}},1:({topics:t,validateOnly:e,timeout:o})=>{const s=r(5222);const n=r(8613);return{request:s({topics:t,validateOnly:e,timeout:o}),response:n}},2:({topics:t,validateOnly:e,timeout:o})=>{const s=r(2726);const n=r(7670);return{request:s({topics:t,validateOnly:e,timeout:o}),response:n}},3:({topics:t,validateOnly:e,timeout:o})=>{const s=r(6911);const n=r(5e3);return{request:s({topics:t,validateOnly:e,timeout:o}),response:n}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},7408:function(t,e,r){const o=r(7266);const{CreateTopics:s}=r(1062);t.exports=({topics:t,timeout:e=5e3})=>({apiKey:s,apiVersion:0,apiName:"CreateTopics",encode:async()=>(new o).writeArray(t.map(encodeTopics)).writeInt32(e)});const encodeTopics=({topic:t,numPartitions:e=-1,replicationFactor:r=-1,replicaAssignment:s=[],configEntries:n=[]})=>(new o).writeString(t).writeInt32(e).writeInt16(r).writeArray(s.map(encodeReplicaAssignment)).writeArray(n.map(encodeConfigEntries));const encodeReplicaAssignment=({partition:t,replicas:e})=>(new o).writeInt32(t).writeArray(e);const encodeConfigEntries=({name:t,value:e})=>(new o).writeString(t).writeString(e)},2857:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const{KafkaJSAggregateError:i,KafkaJSCreateTopicError:a}=r(1331);const topicNameComparator=(t,e)=>t.topic.localeCompare(e.topic);const topicErrors=t=>({topic:t.readString(),errorCode:t.readInt16()});const decode=async t=>{const e=new o(t);return{topicErrors:e.readArray(topicErrors).sort(topicNameComparator)}};const parse=async t=>{const e=t.topicErrors.filter((({errorCode:t})=>s(t)));if(e.length>0){throw new i("Topic creation errors",e.map((t=>new a(n(t.errorCode),t.topic))))}return t};t.exports={decode:decode,parse:parse}},5222:function(t,e,r){const o=r(7266);const{CreateTopics:s}=r(1062);t.exports=({topics:t,validateOnly:e=false,timeout:r=5e3})=>({apiKey:s,apiVersion:1,apiName:"CreateTopics",encode:async()=>(new o).writeArray(t.map(encodeTopics)).writeInt32(r).writeBoolean(e)});const encodeTopics=({topic:t,numPartitions:e=-1,replicationFactor:r=-1,replicaAssignment:s=[],configEntries:n=[]})=>(new o).writeString(t).writeInt32(e).writeInt16(r).writeArray(s.map(encodeReplicaAssignment)).writeArray(n.map(encodeConfigEntries));const encodeReplicaAssignment=({partition:t,replicas:e})=>(new o).writeInt32(t).writeArray(e);const encodeConfigEntries=({name:t,value:e})=>(new o).writeString(t).writeString(e)},8613:function(t,e,r){const o=r(9149);const{parse:s}=r(2857);const topicNameComparator=(t,e)=>t.topic.localeCompare(e.topic);const topicErrors=t=>({topic:t.readString(),errorCode:t.readInt16(),errorMessage:t.readString()});const decode=async t=>{const e=new o(t);return{topicErrors:e.readArray(topicErrors).sort(topicNameComparator)}};t.exports={decode:decode,parse:s}},2726:function(t,e,r){const o=r(5222);t.exports=({topics:t,validateOnly:e,timeout:r})=>Object.assign(o({topics:t,validateOnly:e,timeout:r}),{apiVersion:2})},7670:function(t,e,r){const o=r(9149);const{parse:s}=r(8613);const topicNameComparator=(t,e)=>t.topic.localeCompare(e.topic);const topicErrors=t=>({topic:t.readString(),errorCode:t.readInt16(),errorMessage:t.readString()});const decode=async t=>{const e=new o(t);return{throttleTime:e.readInt32(),topicErrors:e.readArray(topicErrors).sort(topicNameComparator)}};t.exports={decode:decode,parse:s}},6911:function(t,e,r){const o=r(2726);t.exports=({topics:t,validateOnly:e,timeout:r})=>Object.assign(o({topics:t,validateOnly:e,timeout:r}),{apiVersion:3})},5e3:function(t,e,r){const{parse:o,decode:s}=r(7670);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},6012:function(t,e,r){const o={0:({filters:t})=>{const e=r(4766);const o=r(6161);return{request:e({filters:t}),response:o}},1:({filters:t})=>{const e=r(7363);const o=r(7320);return{request:e({filters:t}),response:o}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},4766:function(t,e,r){const o=r(7266);const{DeleteAcls:s}=r(1062);const encodeFilters=({resourceType:t,resourceName:e,principal:r,host:s,operation:n,permissionType:i})=>(new o).writeInt8(t).writeString(e).writeString(r).writeString(s).writeInt8(n).writeInt8(i);t.exports=({filters:t})=>({apiKey:s,apiVersion:0,apiName:"DeleteAcls",encode:async()=>(new o).writeArray(t.map(encodeFilters))})},6161:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decodeMatchingAcls=t=>({errorCode:t.readInt16(),errorMessage:t.readString(),resourceType:t.readInt8(),resourceName:t.readString(),principal:t.readString(),host:t.readString(),operation:t.readInt8(),permissionType:t.readInt8()});const decodeFilterResponse=t=>({errorCode:t.readInt16(),errorMessage:t.readString(),matchingAcls:t.readArray(decodeMatchingAcls)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readArray(decodeFilterResponse);return{throttleTime:r,filterResponses:s}};const parse=async t=>{const e=t.filterResponses.filter((({errorCode:t})=>s(t)));if(e.length>0){throw n(e[0].errorCode)}for(const e of t.filterResponses){const t=e.matchingAcls;const r=t.filter((({errorCode:t})=>s(t)));if(r.length>0){throw n(r[0].errorCode)}}return t};t.exports={decodeMatchingAcls:decodeMatchingAcls,decodeFilterResponse:decodeFilterResponse,decode:decode,parse:parse}},7363:function(t,e,r){const o=r(7266);const{DeleteAcls:s}=r(1062);const encodeFilters=({resourceType:t,resourceName:e,resourcePatternType:r,principal:s,host:n,operation:i,permissionType:a})=>(new o).writeInt8(t).writeString(e).writeInt8(r).writeString(s).writeString(n).writeInt8(i).writeInt8(a);t.exports=({filters:t})=>({apiKey:s,apiVersion:1,apiName:"DeleteAcls",encode:async()=>(new o).writeArray(t.map(encodeFilters))})},7320:function(t,e,r){const o=r(9149);const{parse:s}=r(6161);const decodeMatchingAcls=t=>({errorCode:t.readInt16(),errorMessage:t.readString(),resourceType:t.readInt8(),resourceName:t.readString(),resourcePatternType:t.readInt8(),principal:t.readString(),host:t.readString(),operation:t.readInt8(),permissionType:t.readInt8()});const decodeFilterResponse=t=>({errorCode:t.readInt16(),errorMessage:t.readString(),matchingAcls:t.readArray(decodeMatchingAcls)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readArray(decodeFilterResponse);return{throttleTime:0,clientSideThrottleTime:r,filterResponses:s}};t.exports={decode:decode,parse:s}},3517:function(t,e,r){const o={0:t=>{const e=r(5104);const o=r(750);return{request:e(t),response:o}},1:t=>{const e=r(7502);const o=r(3519);return{request:e(t),response:o}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},5104:function(t,e,r){const o=r(7266);const{DeleteGroups:s}=r(1062);t.exports=t=>({apiKey:s,apiVersion:0,apiName:"DeleteGroups",encode:async()=>(new o).writeArray(t.map(encodeGroups))});const encodeGroups=t=>(new o).writeString(t)},750:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decodeGroup=t=>({groupId:t.readString(),errorCode:t.readInt16()});const decode=async t=>{const e=new o(t);const r=e.readInt32();const i=e.readArray(decodeGroup);for(const t of i){if(s(t.errorCode)){t.error=n(t.errorCode)}}return{throttleTimeMs:r,results:i}};const parse=async t=>t;t.exports={decode:decode,parse:parse}},7502:function(t,e,r){const o=r(5104);t.exports=t=>Object.assign(o(t),{apiVersion:1})},3519:function(t,e,r){const{parse:o,decode:s}=r(750);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},9360:function(t,e,r){const o={0:({topics:t,timeout:e})=>{const o=r(6101);const s=r(5033);return{request:o({topics:t,timeout:e}),response:s({topics:t})}},1:({topics:t,timeout:e})=>{const o=r(3692);const s=r(9406);return{request:o({topics:t,timeout:e}),response:s({topics:t})}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},6101:function(t,e,r){const o=r(7266);const{DeleteRecords:s}=r(1062);t.exports=({topics:t,timeout:e=5e3})=>({apiKey:s,apiVersion:0,apiName:"DeleteRecords",encode:async()=>(new o).writeArray(t.map((({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map((({partition:t,offset:e})=>(new o).writeInt32(t).writeInt64(e))))))).writeInt32(e)})},5033:function(t,e,r){const o=r(9149);const{KafkaJSDeleteTopicRecordsError:s}=r(1331);const{failure:n,createErrorFromCode:i}=r(1133);const topicNameComparator=(t,e)=>t.topic.localeCompare(e.topic);const decode=async t=>{const e=new o(t);return{throttleTime:e.readInt32(),topics:e.readArray((t=>({topic:t.readString(),partitions:t.readArray((t=>({partition:t.readInt32(),lowWatermark:t.readInt64(),errorCode:t.readInt16()})))}))).sort(topicNameComparator)}};const parse=t=>async e=>{const r=e.topics.map((({partitions:t})=>({partitionsWithErrors:t.filter((({errorCode:t})=>n(t)))}))).filter((({partitionsWithErrors:t})=>t.length));if(r.length>0){const[{topic:o}]=e.topics;const[{partitions:n}]=t;const[{partitionsWithErrors:a}]=r;throw new s({topic:o,partitions:a.map((({partition:t,errorCode:e})=>({partition:t,error:i(e),offset:n.find((e=>e.partition===t)).offset})))})}return e};t.exports=({topics:t})=>({decode:decode,parse:parse(t)})},3692:function(t,e,r){const o=r(6101);t.exports=({topics:t,timeout:e})=>Object.assign(o({topics:t,timeout:e}),{apiVersion:1})},9406:function(t,e,r){const o=r(5033);t.exports=({topics:t})=>{const{parse:e,decode:r}=o({topics:t});const decode=async t=>{const e=await r(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};return{decode:decode,parse:e}}},956:function(t,e,r){const o={0:({topics:t,timeout:e})=>{const o=r(7292);const s=r(9505);return{request:o({topics:t,timeout:e}),response:s}},1:({topics:t,timeout:e})=>{const o=r(5972);const s=r(8646);return{request:o({topics:t,timeout:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},7292:function(t,e,r){const o=r(7266);const{DeleteTopics:s}=r(1062);t.exports=({topics:t,timeout:e=5e3})=>({apiKey:s,apiVersion:0,apiName:"DeleteTopics",encode:async()=>(new o).writeArray(t).writeInt32(e)})},9505:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const topicNameComparator=(t,e)=>t.topic.localeCompare(e.topic);const topicErrors=t=>({topic:t.readString(),errorCode:t.readInt16()});const decode=async t=>{const e=new o(t);return{topicErrors:e.readArray(topicErrors).sort(topicNameComparator)}};const parse=async t=>{const e=t.topicErrors.filter((({errorCode:t})=>s(t)));if(e.length>0){throw n(e[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},5972:function(t,e,r){const o=r(7292);t.exports=({topics:t,timeout:e})=>Object.assign(o({topics:t,timeout:e}),{apiVersion:1})},8646:function(t,e,r){const o=r(9149);const{parse:s}=r(9505);const topicNameComparator=(t,e)=>t.topic.localeCompare(e.topic);const topicErrors=t=>({topic:t.readString(),errorCode:t.readInt16()});const decode=async t=>{const e=new o(t);const r=e.readInt32();return{throttleTime:0,clientSideThrottleTime:r,topicErrors:e.readArray(topicErrors).sort(topicNameComparator)}};t.exports={decode:decode,parse:s}},2465:function(t,e,r){const o={0:({resourceType:t,resourceName:e,principal:o,host:s,operation:n,permissionType:i})=>{const a=r(5439);const c=r(5148);return{request:a({resourceType:t,resourceName:e,principal:o,host:s,operation:n,permissionType:i}),response:c}},1:({resourceType:t,resourceName:e,resourcePatternType:o,principal:s,host:n,operation:i,permissionType:a})=>{const c=r(8609);const u=r(6e3);return{request:c({resourceType:t,resourceName:e,resourcePatternType:o,principal:s,host:n,operation:i,permissionType:a}),response:u}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},5439:function(t,e,r){const o=r(7266);const{DescribeAcls:s}=r(1062);t.exports=({resourceType:t,resourceName:e,principal:r,host:n,operation:i,permissionType:a})=>({apiKey:s,apiVersion:0,apiName:"DescribeAcls",encode:async()=>(new o).writeInt8(t).writeString(e).writeString(r).writeString(n).writeInt8(i).writeInt8(a)})},5148:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decodeAcls=t=>({principal:t.readString(),host:t.readString(),operation:t.readInt8(),permissionType:t.readInt8()});const decodeResources=t=>({resourceType:t.readInt8(),resourceName:t.readString(),acls:t.readArray(decodeAcls)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();const n=e.readString();const i=e.readArray(decodeResources);return{throttleTime:r,errorCode:s,errorMessage:n,resources:i}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},8609:function(t,e,r){const o=r(7266);const{DescribeAcls:s}=r(1062);t.exports=({resourceType:t,resourceName:e,resourcePatternType:r,principal:n,host:i,operation:a,permissionType:c})=>({apiKey:s,apiVersion:1,apiName:"DescribeAcls",encode:async()=>(new o).writeInt8(t).writeString(e).writeInt8(r).writeString(n).writeString(i).writeInt8(a).writeInt8(c)})},6e3:function(t,e,r){const{parse:o}=r(5148);const s=r(9149);const decodeAcls=t=>({principal:t.readString(),host:t.readString(),operation:t.readInt8(),permissionType:t.readInt8()});const decodeResources=t=>({resourceType:t.readInt8(),resourceName:t.readString(),resourcePatternType:t.readInt8(),acls:t.readArray(decodeAcls)});const decode=async t=>{const e=new s(t);const r=e.readInt32();const o=e.readInt16();const n=e.readString();const i=e.readArray(decodeResources);return{throttleTime:0,clientSideThrottleTime:r,errorCode:o,errorMessage:n,resources:i}};t.exports={decode:decode,parse:o}},2723:function(t,e,r){const o={0:({resources:t})=>{const e=r(815);const o=r(6580);return{request:e({resources:t}),response:o}},1:({resources:t,includeSynonyms:e})=>{const o=r(1909);const s=r(3755);return{request:o({resources:t,includeSynonyms:e}),response:s}},2:({resources:t,includeSynonyms:e})=>{const o=r(8954);const s=r(1628);return{request:o({resources:t,includeSynonyms:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},815:function(t,e,r){const o=r(7266);const{DescribeConfigs:s}=r(1062);t.exports=({resources:t})=>({apiKey:s,apiVersion:0,apiName:"DescribeConfigs",encode:async()=>(new o).writeArray(t.map(encodeResource))});const encodeResource=({type:t,name:e,configNames:r=[]})=>(new o).writeInt8(t).writeString(e).writeNullableArray(r)},6580:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const i=r(5834);const a=r(1208);const decodeConfigEntries=(t,e)=>{const r=t.readString();const o=t.readString();const s=t.readBoolean();const n=t.readBoolean();const c=t.readBoolean();let u;if(n){u=i.DEFAULT_CONFIG}else{switch(e){case a.BROKER:u=i.STATIC_BROKER_CONFIG;break;case a.TOPIC:u=i.TOPIC_CONFIG;break;default:u=i.UNKNOWN}}return{configName:r,configValue:o,readOnly:s,isDefault:n,configSource:u,isSensitive:c}};const decodeResources=t=>{const e=t.readInt16();const r=t.readString();const o=t.readInt8();const s=t.readString();const n=t.readArray((t=>decodeConfigEntries(t,o)));return{errorCode:e,errorMessage:r,resourceType:o,resourceName:s,configEntries:n}};const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readArray(decodeResources);return{throttleTime:r,resources:s}};const parse=async t=>{const e=t.resources.filter((({errorCode:t})=>s(t)));if(e.length>0){throw n(e[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},1909:function(t,e,r){const o=r(7266);const{DescribeConfigs:s}=r(1062);t.exports=({resources:t,includeSynonyms:e=false})=>({apiKey:s,apiVersion:1,apiName:"DescribeConfigs",encode:async()=>(new o).writeArray(t.map(encodeResource)).writeBoolean(e)});const encodeResource=({type:t,name:e,configNames:r=[]})=>(new o).writeInt8(t).writeString(e).writeNullableArray(r)},3755:function(t,e,r){const o=r(9149);const{parse:s}=r(6580);const{DEFAULT_CONFIG:n}=r(5834);const decodeSynonyms=t=>({configName:t.readString(),configValue:t.readString(),configSource:t.readInt8()});const decodeConfigEntries=t=>{const e=t.readString();const r=t.readString();const o=t.readBoolean();const s=t.readInt8();const i=t.readBoolean();const a=t.readArray(decodeSynonyms);return{configName:e,configValue:r,readOnly:o,isDefault:s===n,configSource:s,isSensitive:i,configSynonyms:a}};const decodeResources=t=>({errorCode:t.readInt16(),errorMessage:t.readString(),resourceType:t.readInt8(),resourceName:t.readString(),configEntries:t.readArray(decodeConfigEntries)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readArray(decodeResources);return{throttleTime:r,resources:s}};t.exports={decode:decode,parse:s}},8954:function(t,e,r){const o=r(1909);t.exports=({resources:t,includeSynonyms:e})=>Object.assign(o({resources:t,includeSynonyms:e}),{apiVersion:2})},1628:function(t,e,r){const{parse:o,decode:s}=r(3755);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},870:function(t,e,r){const o={0:({groupIds:t})=>{const e=r(8381);const o=r(4340);return{request:e({groupIds:t}),response:o}},1:({groupIds:t})=>{const e=r(2205);const o=r(4523);return{request:e({groupIds:t}),response:o}},2:({groupIds:t})=>{const e=r(9049);const o=r(9214);return{request:e({groupIds:t}),response:o}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},8381:function(t,e,r){const o=r(7266);const{DescribeGroups:s}=r(1062);t.exports=({groupIds:t})=>({apiKey:s,apiVersion:0,apiName:"DescribeGroups",encode:async()=>(new o).writeArray(t)})},4340:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decoderMember=t=>({memberId:t.readString(),clientId:t.readString(),clientHost:t.readString(),memberMetadata:t.readBytes(),memberAssignment:t.readBytes()});const decodeGroup=t=>({errorCode:t.readInt16(),groupId:t.readString(),state:t.readString(),protocolType:t.readString(),protocol:t.readString(),members:t.readArray(decoderMember)});const decode=async t=>{const e=new o(t);const r=e.readArray(decodeGroup);return{groups:r}};const parse=async t=>{const e=t.groups.filter((({errorCode:t})=>s(t)));if(e.length>0){throw n(e[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},2205:function(t,e,r){const o=r(8381);t.exports=({groupIds:t})=>Object.assign(o({groupIds:t}),{apiVersion:1})},4523:function(t,e,r){const o=r(9149);const{parse:s}=r(4340);const decoderMember=t=>({memberId:t.readString(),clientId:t.readString(),clientHost:t.readString(),memberMetadata:t.readBytes(),memberAssignment:t.readBytes()});const decodeGroup=t=>({errorCode:t.readInt16(),groupId:t.readString(),state:t.readString(),protocolType:t.readString(),protocol:t.readString(),members:t.readArray(decoderMember)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readArray(decodeGroup);return{throttleTime:r,groups:s}};t.exports={decode:decode,parse:s}},9049:function(t,e,r){const o=r(2205);t.exports=({groupIds:t})=>Object.assign(o({groupIds:t}),{apiVersion:2})},9214:function(t,e,r){const{parse:o,decode:s}=r(4523);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},2542:function(t,e,r){const o={0:({transactionalId:t,producerId:e,producerEpoch:o,transactionResult:s})=>{const n=r(6627);const i=r(9748);return{request:n({transactionalId:t,producerId:e,producerEpoch:o,transactionResult:s}),response:i}},1:({transactionalId:t,producerId:e,producerEpoch:o,transactionResult:s})=>{const n=r(2633);const i=r(9845);return{request:n({transactionalId:t,producerId:e,producerEpoch:o,transactionResult:s}),response:i}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},6627:function(t,e,r){const o=r(7266);const{EndTxn:s}=r(1062);t.exports=({transactionalId:t,producerId:e,producerEpoch:r,transactionResult:n})=>({apiKey:s,apiVersion:0,apiName:"EndTxn",encode:async()=>(new o).writeString(t).writeInt64(e).writeInt16(r).writeBoolean(n)})},9748:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();i(s);return{throttleTime:r,errorCode:s}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},2633:function(t,e,r){const o=r(6627);t.exports=({transactionalId:t,producerId:e,producerEpoch:r,transactionResult:s})=>Object.assign(o({transactionalId:t,producerId:e,producerEpoch:r,transactionResult:s}),{apiVersion:1})},9845:function(t,e,r){const{parse:o,decode:s}=r(9748);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},1369:function(t,e,r){const o=r(3541);const s=-1;const n=100;const requestTimeout=t=>Number.isSafeInteger(t+n)?t+n:t;const i={0:({replicaId:t=s,maxWaitTime:e,minBytes:o,topics:n})=>{const i=r(7249);const a=r(2795);return{request:i({replicaId:t,maxWaitTime:e,minBytes:o,topics:n}),response:a,requestTimeout:requestTimeout(e)}},1:({replicaId:t=s,maxWaitTime:e,minBytes:o,topics:n})=>{const i=r(5515);const a=r(2668);return{request:i({replicaId:t,maxWaitTime:e,minBytes:o,topics:n}),response:a,requestTimeout:requestTimeout(e)}},2:({replicaId:t=s,maxWaitTime:e,minBytes:o,topics:n})=>{const i=r(8064);const a=r(3494);return{request:i({replicaId:t,maxWaitTime:e,minBytes:o,topics:n}),response:a,requestTimeout:requestTimeout(e)}},3:({replicaId:t=s,maxWaitTime:e,minBytes:o,maxBytes:n,topics:i})=>{const a=r(2416);const c=r(4016);return{request:a({replicaId:t,maxWaitTime:e,minBytes:o,maxBytes:n,topics:i}),response:c,requestTimeout:requestTimeout(e)}},4:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,maxWaitTime:n,minBytes:i,maxBytes:a,topics:c})=>{const u=r(7544);const p=r(2657);return{request:u({replicaId:t,isolationLevel:e,maxWaitTime:n,minBytes:i,maxBytes:a,topics:c}),response:p,requestTimeout:requestTimeout(n)}},5:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,maxWaitTime:n,minBytes:i,maxBytes:a,topics:c})=>{const u=r(9622);const p=r(7939);return{request:u({replicaId:t,isolationLevel:e,maxWaitTime:n,minBytes:i,maxBytes:a,topics:c}),response:p,requestTimeout:requestTimeout(n)}},6:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,maxWaitTime:n,minBytes:i,maxBytes:a,topics:c})=>{const u=r(9282);const p=r(1358);return{request:u({replicaId:t,isolationLevel:e,maxWaitTime:n,minBytes:i,maxBytes:a,topics:c}),response:p,requestTimeout:requestTimeout(n)}},7:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,sessionId:n=0,sessionEpoch:i=-1,forgottenTopics:a=[],maxWaitTime:c,minBytes:u,maxBytes:p,topics:d})=>{const l=r(2040);const f=r(1721);return{request:l({replicaId:t,isolationLevel:e,sessionId:n,sessionEpoch:i,forgottenTopics:a,maxWaitTime:c,minBytes:u,maxBytes:p,topics:d}),response:f,requestTimeout:requestTimeout(c)}},8:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,sessionId:n=0,sessionEpoch:i=-1,forgottenTopics:a=[],maxWaitTime:c,minBytes:u,maxBytes:p,topics:d})=>{const l=r(3592);const f=r(6998);return{request:l({replicaId:t,isolationLevel:e,sessionId:n,sessionEpoch:i,forgottenTopics:a,maxWaitTime:c,minBytes:u,maxBytes:p,topics:d}),response:f,requestTimeout:requestTimeout(c)}},9:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,sessionId:n=0,sessionEpoch:i=-1,forgottenTopics:a=[],maxWaitTime:c,minBytes:u,maxBytes:p,topics:d})=>{const l=r(126);const f=r(4654);return{request:l({replicaId:t,isolationLevel:e,sessionId:n,sessionEpoch:i,forgottenTopics:a,maxWaitTime:c,minBytes:u,maxBytes:p,topics:d}),response:f,requestTimeout:requestTimeout(c)}},10:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,sessionId:n=0,sessionEpoch:i=-1,forgottenTopics:a=[],maxWaitTime:c,minBytes:u,maxBytes:p,topics:d})=>{const l=r(4771);const f=r(2135);return{request:l({replicaId:t,isolationLevel:e,sessionId:n,sessionEpoch:i,forgottenTopics:a,maxWaitTime:c,minBytes:u,maxBytes:p,topics:d}),response:f,requestTimeout:requestTimeout(c)}},11:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,sessionId:n=0,sessionEpoch:i=-1,forgottenTopics:a=[],maxWaitTime:c,minBytes:u,maxBytes:p,topics:d,rackId:l})=>{const f=r(6049);const h=r(5562);return{request:f({replicaId:t,isolationLevel:e,sessionId:n,sessionEpoch:i,forgottenTopics:a,maxWaitTime:c,minBytes:u,maxBytes:p,topics:d,rackId:l}),response:h,requestTimeout:requestTimeout(c)}}};t.exports={versions:Object.keys(i),protocol:({version:t})=>i[t]}},7249:function(t,e,r){const o=r(7266);const{Fetch:s}=r(1062);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,topics:n})=>({apiKey:s,apiVersion:0,apiName:"Fetch",encode:async()=>(new o).writeInt32(t).writeInt32(e).writeInt32(r).writeArray(n.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,fetchOffset:e,maxBytes:r})=>(new o).writeInt32(t).writeInt64(e).writeInt32(r)},2795:function(t,e,r){const o=r(9149);const{KafkaJSOffsetOutOfRange:s}=r(1331);const{failure:n,createErrorFromCode:i,errorCodes:a}=r(1133);const c=r(2076);const decodePartition=async t=>({partition:t.readInt32(),errorCode:t.readInt16(),highWatermark:t.readInt64().toString(),messages:await c(t)});const decodeResponse=async t=>({topicName:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decode=async t=>{const e=new o(t);const r=await e.readArrayAsync(decodeResponse);return{responses:r}};const{code:u}=a.find((t=>t.type==="OFFSET_OUT_OF_RANGE"));const parse=async t=>{const e=t.responses.flatMap((({topicName:t,partitions:e})=>e.filter((t=>n(t.errorCode))).map((e=>Object.assign({},e,{topic:t})))));if(e.length>0){const{errorCode:t,topic:r,partition:o}=e[0];if(t===u){throw new s(i(t),{topic:r,partition:o})}throw i(t)}return t};t.exports={decode:decode,parse:parse}},4771:function(t,e,r){const o=r(3541);const s=r(126);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:n,topics:i,isolationLevel:a=o.READ_COMMITTED,sessionId:c=0,sessionEpoch:u=-1,forgottenTopics:p=[]})=>Object.assign(s({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:n,topics:i,isolationLevel:a,sessionId:c,sessionEpoch:u,forgottenTopics:p}),{apiVersion:10})},2135:function(t,e,r){const{decode:o,parse:s}=r(4654);t.exports={decode:o,parse:s}},6049:function(t,e,r){const o=r(7266);const{Fetch:s}=r(1062);const n=r(3541);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:i,topics:a,rackId:c="",isolationLevel:u=n.READ_COMMITTED,sessionId:p=0,sessionEpoch:d=-1,forgottenTopics:l=[]})=>({apiKey:s,apiVersion:11,apiName:"Fetch",encode:async()=>(new o).writeInt32(t).writeInt32(e).writeInt32(r).writeInt32(i).writeInt8(u).writeInt32(p).writeInt32(d).writeArray(a.map(encodeTopic)).writeArray(l.map(encodeForgottenTopics)).writeString(c)});const encodeForgottenTopics=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e);const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,currentLeaderEpoch:e=-1,fetchOffset:r,logStartOffset:s=-1,maxBytes:n})=>(new o).writeInt32(t).writeInt32(e).writeInt64(r).writeInt64(s).writeInt32(n)},5562:function(t,e,r){const o=r(9149);const{parse:s}=r(2668);const n=r(1594);const decodeAbortedTransactions=t=>({producerId:t.readInt64().toString(),firstOffset:t.readInt64().toString()});const decodePartition=async t=>({partition:t.readInt32(),errorCode:t.readInt16(),highWatermark:t.readInt64().toString(),lastStableOffset:t.readInt64().toString(),lastStartOffset:t.readInt64().toString(),abortedTransactions:t.readArray(decodeAbortedTransactions),preferredReadReplica:t.readInt32(),messages:await n(t)});const decodeResponse=async t=>({topicName:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();const n=e.readInt32();const i=await e.readArrayAsync(decodeResponse);return{throttleTime:0,clientSideThrottleTime:r,errorCode:s,sessionId:n,responses:i}};t.exports={decode:decode,parse:s}},5515:function(t,e,r){const o=r(7249);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,topics:s})=>Object.assign(o({replicaId:t,maxWaitTime:e,minBytes:r,topics:s}),{apiVersion:1})},2668:function(t,e,r){const o=r(9149);const{parse:s}=r(2795);const n=r(2076);const decodePartition=async t=>({partition:t.readInt32(),errorCode:t.readInt16(),highWatermark:t.readInt64().toString(),messages:await n(t)});const decodeResponse=async t=>({topicName:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=await e.readArrayAsync(decodeResponse);return{throttleTime:r,responses:s}};t.exports={decode:decode,parse:s}},8064:function(t,e,r){const o=r(7249);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,topics:s})=>Object.assign(o({replicaId:t,maxWaitTime:e,minBytes:r,topics:s}),{apiVersion:2})},3494:function(t,e,r){const{decode:o,parse:s}=r(2668);t.exports={decode:o,parse:s}},2416:function(t,e,r){const o=r(7266);const{Fetch:s}=r(1062);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:n,topics:i})=>({apiKey:s,apiVersion:3,apiName:"Fetch",encode:async()=>(new o).writeInt32(t).writeInt32(e).writeInt32(r).writeInt32(n).writeArray(i.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,fetchOffset:e,maxBytes:r})=>(new o).writeInt32(t).writeInt64(e).writeInt32(r)},4016:function(t,e,r){const{decode:o,parse:s}=r(2668);t.exports={decode:o,parse:s}},1594:function(t,e,r){const o=r(9149);const s=r(2076);const n=r(5723);const{MAGIC_BYTE:i}=r(7315);const a=16;const c=49;const decodeMessages=async t=>{const e=t.readInt32();if(e<=0||!t.canReadBytes(e)){return[]}const r=t.readBytes(e);const u=new o(r);const p=r.slice(a).readInt8(0);if(p===i){const t=[];while(u.canReadBytes(c)){try{const e=await n(u);t.push(...e.records)}catch(t){if(t.name==="KafkaJSPartialMessageError"){break}throw t}}return t}return s(u,e)};t.exports=decodeMessages},7544:function(t,e,r){const o=r(7266);const{Fetch:s}=r(1062);const n=r(3541);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:i,topics:a,isolationLevel:c=n.READ_COMMITTED})=>({apiKey:s,apiVersion:4,apiName:"Fetch",encode:async()=>(new o).writeInt32(t).writeInt32(e).writeInt32(r).writeInt32(i).writeInt8(c).writeArray(a.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,fetchOffset:e,maxBytes:r})=>(new o).writeInt32(t).writeInt64(e).writeInt32(r)},2657:function(t,e,r){const o=r(9149);const{parse:s}=r(2668);const n=r(1594);const decodeAbortedTransactions=t=>({producerId:t.readInt64().toString(),firstOffset:t.readInt64().toString()});const decodePartition=async t=>({partition:t.readInt32(),errorCode:t.readInt16(),highWatermark:t.readInt64().toString(),lastStableOffset:t.readInt64().toString(),abortedTransactions:t.readArray(decodeAbortedTransactions),messages:await n(t)});const decodeResponse=async t=>({topicName:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=await e.readArrayAsync(decodeResponse);return{throttleTime:r,responses:s}};t.exports={decode:decode,parse:s}},9622:function(t,e,r){const o=r(7266);const{Fetch:s}=r(1062);const n=r(3541);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:i,topics:a,isolationLevel:c=n.READ_COMMITTED})=>({apiKey:s,apiVersion:5,apiName:"Fetch",encode:async()=>(new o).writeInt32(t).writeInt32(e).writeInt32(r).writeInt32(i).writeInt8(c).writeArray(a.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,fetchOffset:e,logStartOffset:r=-1,maxBytes:s})=>(new o).writeInt32(t).writeInt64(e).writeInt64(r).writeInt32(s)},7939:function(t,e,r){const o=r(9149);const{parse:s}=r(2668);const n=r(1594);const decodeAbortedTransactions=t=>({producerId:t.readInt64().toString(),firstOffset:t.readInt64().toString()});const decodePartition=async t=>({partition:t.readInt32(),errorCode:t.readInt16(),highWatermark:t.readInt64().toString(),lastStableOffset:t.readInt64().toString(),lastStartOffset:t.readInt64().toString(),abortedTransactions:t.readArray(decodeAbortedTransactions),messages:await n(t)});const decodeResponse=async t=>({topicName:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=await e.readArrayAsync(decodeResponse);return{throttleTime:r,responses:s}};t.exports={decode:decode,parse:s}},9282:function(t,e,r){const o=r(3541);const s=r(9622);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:n,topics:i,isolationLevel:a=o.READ_COMMITTED})=>Object.assign(s({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:n,topics:i,isolationLevel:a}),{apiVersion:6})},1358:function(t,e,r){const{decode:o,parse:s}=r(7939);t.exports={decode:o,parse:s}},2040:function(t,e,r){const o=r(7266);const{Fetch:s}=r(1062);const n=r(3541);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:i,topics:a,isolationLevel:c=n.READ_COMMITTED,sessionId:u=0,sessionEpoch:p=-1,forgottenTopics:d=[]})=>({apiKey:s,apiVersion:7,apiName:"Fetch",encode:async()=>(new o).writeInt32(t).writeInt32(e).writeInt32(r).writeInt32(i).writeInt8(c).writeInt32(u).writeInt32(p).writeArray(a.map(encodeTopic)).writeArray(d.map(encodeForgottenTopics))});const encodeForgottenTopics=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e);const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,fetchOffset:e,logStartOffset:r=-1,maxBytes:s})=>(new o).writeInt32(t).writeInt64(e).writeInt64(r).writeInt32(s)},1721:function(t,e,r){const o=r(9149);const{parse:s}=r(2668);const n=r(1594);const decodeAbortedTransactions=t=>({producerId:t.readInt64().toString(),firstOffset:t.readInt64().toString()});const decodePartition=async t=>({partition:t.readInt32(),errorCode:t.readInt16(),highWatermark:t.readInt64().toString(),lastStableOffset:t.readInt64().toString(),lastStartOffset:t.readInt64().toString(),abortedTransactions:t.readArray(decodeAbortedTransactions),messages:await n(t)});const decodeResponse=async t=>({topicName:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();const n=e.readInt32();const i=await e.readArrayAsync(decodeResponse);return{throttleTime:r,errorCode:s,sessionId:n,responses:i}};t.exports={decode:decode,parse:s}},3592:function(t,e,r){const o=r(3541);const s=r(2040);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:n,topics:i,isolationLevel:a=o.READ_COMMITTED,sessionId:c=0,sessionEpoch:u=-1,forgottenTopics:p=[]})=>Object.assign(s({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:n,topics:i,isolationLevel:a,sessionId:c,sessionEpoch:u,forgottenTopics:p}),{apiVersion:8})},6998:function(t,e,r){const o=r(9149);const{parse:s}=r(2668);const n=r(1594);const decodeAbortedTransactions=t=>({producerId:t.readInt64().toString(),firstOffset:t.readInt64().toString()});const decodePartition=async t=>({partition:t.readInt32(),errorCode:t.readInt16(),highWatermark:t.readInt64().toString(),lastStableOffset:t.readInt64().toString(),lastStartOffset:t.readInt64().toString(),abortedTransactions:t.readArray(decodeAbortedTransactions),messages:await n(t)});const decodeResponse=async t=>({topicName:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();const n=e.readInt32();const i=await e.readArrayAsync(decodeResponse);return{throttleTime:0,clientSideThrottleTime:r,errorCode:s,sessionId:n,responses:i}};t.exports={decode:decode,parse:s}},126:function(t,e,r){const o=r(7266);const{Fetch:s}=r(1062);const n=r(3541);t.exports=({replicaId:t,maxWaitTime:e,minBytes:r,maxBytes:i,topics:a,isolationLevel:c=n.READ_COMMITTED,sessionId:u=0,sessionEpoch:p=-1,forgottenTopics:d=[]})=>({apiKey:s,apiVersion:9,apiName:"Fetch",encode:async()=>(new o).writeInt32(t).writeInt32(e).writeInt32(r).writeInt32(i).writeInt8(c).writeInt32(u).writeInt32(p).writeArray(a.map(encodeTopic)).writeArray(d.map(encodeForgottenTopics))});const encodeForgottenTopics=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e);const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,currentLeaderEpoch:e=-1,fetchOffset:r,logStartOffset:s=-1,maxBytes:n})=>(new o).writeInt32(t).writeInt32(e).writeInt64(r).writeInt64(s).writeInt32(n)},4654:function(t,e,r){const{decode:o,parse:s}=r(6998);t.exports={decode:o,parse:s}},10:function(t,e,r){const o=r(8853);const s={0:({groupId:t})=>{const e=r(2013);const o=r(8070);return{request:e({groupId:t}),response:o}},1:({groupId:t,coordinatorType:e=o.GROUP})=>{const s=r(8687);const n=r(3162);return{request:s({coordinatorKey:t,coordinatorType:e}),response:n}},2:({groupId:t,coordinatorType:e=o.GROUP})=>{const s=r(8203);const n=r(5241);return{request:s({coordinatorKey:t,coordinatorType:e}),response:n}}};t.exports={versions:Object.keys(s),protocol:({version:t})=>s[t]}},2013:function(t,e,r){const o=r(7266);const{GroupCoordinator:s}=r(1062);t.exports=({groupId:t})=>({apiKey:s,apiVersion:0,apiName:"GroupCoordinator",encode:async()=>(new o).writeString(t)})},8070:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);const s={nodeId:e.readInt32(),host:e.readString(),port:e.readInt32()};return{errorCode:r,coordinator:s}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},8687:function(t,e,r){const o=r(7266);const{GroupCoordinator:s}=r(1062);t.exports=({coordinatorKey:t,coordinatorType:e})=>({apiKey:s,apiVersion:1,apiName:"GroupCoordinator",encode:async()=>(new o).writeString(t).writeInt8(e)})},3162:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();i(s);const n=e.readString();const a={nodeId:e.readInt32(),host:e.readString(),port:e.readInt32()};return{throttleTime:r,errorCode:s,errorMessage:n,coordinator:a}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},8203:function(t,e,r){const o=r(8687);t.exports=({coordinatorKey:t,coordinatorType:e})=>Object.assign(o({coordinatorKey:t,coordinatorType:e}),{apiVersion:2})},5241:function(t,e,r){const{parse:o,decode:s}=r(3162);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},3489:function(t,e,r){const o={0:({groupId:t,groupGenerationId:e,memberId:o})=>{const s=r(255);const n=r(9634);return{request:s({groupId:t,groupGenerationId:e,memberId:o}),response:n}},1:({groupId:t,groupGenerationId:e,memberId:o})=>{const s=r(1210);const n=r(9554);return{request:s({groupId:t,groupGenerationId:e,memberId:o}),response:n}},2:({groupId:t,groupGenerationId:e,memberId:o})=>{const s=r(1205);const n=r(1459);return{request:s({groupId:t,groupGenerationId:e,memberId:o}),response:n}},3:({groupId:t,groupGenerationId:e,memberId:o,groupInstanceId:s})=>{const n=r(8272);const i=r(1397);return{request:n({groupId:t,groupGenerationId:e,memberId:o,groupInstanceId:s}),response:i}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},255:function(t,e,r){const o=r(7266);const{Heartbeat:s}=r(1062);t.exports=({groupId:t,groupGenerationId:e,memberId:r})=>({apiKey:s,apiVersion:0,apiName:"Heartbeat",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r)})},9634:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);return{errorCode:r}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},1210:function(t,e,r){const o=r(255);t.exports=({groupId:t,groupGenerationId:e,memberId:r})=>Object.assign(o({groupId:t,groupGenerationId:e,memberId:r}),{apiVersion:1})},9554:function(t,e,r){const o=r(9149);const{failIfVersionNotSupported:s}=r(1133);const{parse:n}=r(9634);const decode=async t=>{const e=new o(t);const r=e.readInt32();const n=e.readInt16();s(n);return{throttleTime:r,errorCode:n}};t.exports={decode:decode,parse:n}},1205:function(t,e,r){const o=r(1210);t.exports=({groupId:t,groupGenerationId:e,memberId:r})=>Object.assign(o({groupId:t,groupGenerationId:e,memberId:r}),{apiVersion:2})},1459:function(t,e,r){const{parse:o,decode:s}=r(9554);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},8272:function(t,e,r){const o=r(7266);const{Heartbeat:s}=r(1062);t.exports=({groupId:t,groupGenerationId:e,memberId:r,groupInstanceId:n})=>({apiKey:s,apiVersion:3,apiName:"Heartbeat",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r).writeString(n)})},1397:function(t,e,r){const{parse:o,decode:s}=r(1459);t.exports={decode:s,parse:o}},7966:function(t,e,r){const o=r(1062);const{KafkaJSServerDoesNotSupportApiKey:s,KafkaJSNotImplemented:n}=r(1331);const i={versions:[],protocol:()=>{throw new n}};const a={Produce:r(2229),Fetch:r(1369),ListOffsets:r(2344),Metadata:r(8993),LeaderAndIsr:i,StopReplica:i,UpdateMetadata:i,ControlledShutdown:i,OffsetCommit:r(9843),OffsetFetch:r(6547),GroupCoordinator:r(10),JoinGroup:r(7024),Heartbeat:r(3489),LeaveGroup:r(4113),SyncGroup:r(1013),DescribeGroups:r(870),ListGroups:r(8636),SaslHandshake:r(7934),ApiVersions:r(7242),CreateTopics:r(5829),DeleteTopics:r(956),DeleteRecords:r(9360),InitProducerId:r(9920),OffsetForLeaderEpoch:i,AddPartitionsToTxn:r(5790),AddOffsetsToTxn:r(8305),EndTxn:r(2542),WriteTxnMarkers:i,TxnOffsetCommit:r(8017),DescribeAcls:r(2465),CreateAcls:r(2809),DeleteAcls:r(6012),DescribeConfigs:r(2723),AlterConfigs:r(4636),AlterReplicaLogDirs:i,DescribeLogDirs:i,SaslAuthenticate:r(9807),CreatePartitions:r(3457),CreateDelegationToken:i,RenewDelegationToken:i,ExpireDelegationToken:i,DescribeDelegationToken:i,DeleteGroups:r(3517),ElectLeaders:i,IncrementalAlterConfigs:i,AlterPartitionReassignments:r(7379),ListPartitionReassignments:r(9366)};const c=Object.keys(o);const u=Object.values(o);const findApiName=t=>c[u.indexOf(t)];const lookup=t=>(e,r)=>{const o=t[e];const n=r.versions.map(Number);const i=Math.max(...n);if(!o||o.maxVersion==null){throw new s(`The Kafka server does not support the requested API version`,{apiKey:e,apiName:findApiName(e)})}const a=Math.min(i,o.maxVersion);return r.protocol({version:a})};t.exports={requests:a,lookup:lookup}},9920:function(t,e,r){const o={0:({transactionalId:t,transactionTimeout:e=5e3})=>{const o=r(3172);const s=r(8769);return{request:o({transactionalId:t,transactionTimeout:e}),response:s}},1:({transactionalId:t,transactionTimeout:e=5e3})=>{const o=r(7844);const s=r(5203);return{request:o({transactionalId:t,transactionTimeout:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},3172:function(t,e,r){const o=r(7266);const{InitProducerId:s}=r(1062);t.exports=({transactionalId:t,transactionTimeout:e})=>({apiKey:s,apiVersion:0,apiName:"InitProducerId",encode:async()=>(new o).writeString(t).writeInt32(e)})},8769:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();i(s);return{throttleTime:r,errorCode:s,producerId:e.readInt64().toString(),producerEpoch:e.readInt16()}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},7844:function(t,e,r){const o=r(3172);t.exports=({transactionalId:t,transactionTimeout:e})=>Object.assign(o({transactionalId:t,transactionTimeout:e}),{apiVersion:1})},5203:function(t,e,r){const{parse:o,decode:s}=r(8769);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},7024:function(t,e,r){const o=5e3;const requestTimeout=({rebalanceTimeout:t,sessionTimeout:e})=>{const r=t||e;return Number.isSafeInteger(r+o)?r+o:r};const logResponseError=t=>t!=null&&t!=="";const s={0:({groupId:t,sessionTimeout:e,memberId:o,protocolType:s,groupProtocols:n})=>{const i=r(2491);const a=r(7164);return{request:i({groupId:t,sessionTimeout:e,memberId:o,protocolType:s,groupProtocols:n}),response:a,requestTimeout:requestTimeout({rebalanceTimeout:null,sessionTimeout:e})}},1:({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i})=>{const a=r(6098);const c=r(6753);return{request:a({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i}),response:c,requestTimeout:requestTimeout({rebalanceTimeout:o,sessionTimeout:e})}},2:({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i})=>{const a=r(1306);const c=r(7104);return{request:a({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i}),response:c,requestTimeout:requestTimeout({rebalanceTimeout:o,sessionTimeout:e})}},3:({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i})=>{const a=r(6867);const c=r(7727);return{request:a({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i}),response:c,requestTimeout:requestTimeout({rebalanceTimeout:o,sessionTimeout:e})}},4:({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i})=>{const a=r(1375);const c=r(3684);return{request:a({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,protocolType:n,groupProtocols:i}),response:c,requestTimeout:requestTimeout({rebalanceTimeout:o,sessionTimeout:e}),logResponseError:logResponseError(s)}},5:({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,groupInstanceId:n,protocolType:i,groupProtocols:a})=>{const c=r(1591);const u=r(9376);return{request:c({groupId:t,sessionTimeout:e,rebalanceTimeout:o,memberId:s,groupInstanceId:n,protocolType:i,groupProtocols:a}),response:u,requestTimeout:requestTimeout({rebalanceTimeout:o,sessionTimeout:e}),logResponseError:logResponseError(s)}}};t.exports={versions:Object.keys(s),protocol:({version:t})=>s[t]}},2491:function(t,e,r){const o=r(7266);const{JoinGroup:s}=r(1062);t.exports=({groupId:t,sessionTimeout:e,memberId:r,protocolType:n,groupProtocols:i})=>({apiKey:s,apiVersion:0,apiName:"JoinGroup",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r).writeString(n).writeArray(i.map(encodeGroupProtocols))});const encodeGroupProtocols=({name:t,metadata:e=Buffer.alloc(0)})=>(new o).writeString(t).writeBytes(e)},7164:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);return{errorCode:r,generationId:e.readInt32(),groupProtocol:e.readString(),leaderId:e.readString(),memberId:e.readString(),members:e.readArray((t=>({memberId:t.readString(),memberMetadata:t.readBytes()})))}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},6098:function(t,e,r){const o=r(7266);const{JoinGroup:s}=r(1062);t.exports=({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:n,protocolType:i,groupProtocols:a})=>({apiKey:s,apiVersion:1,apiName:"JoinGroup",encode:async()=>(new o).writeString(t).writeInt32(e).writeInt32(r).writeString(n).writeString(i).writeArray(a.map(encodeGroupProtocols))});const encodeGroupProtocols=({name:t,metadata:e=Buffer.alloc(0)})=>(new o).writeString(t).writeBytes(e)},6753:function(t,e,r){const{parse:o,decode:s}=r(7164);t.exports={decode:s,parse:o}},1306:function(t,e,r){const o=r(6098);t.exports=({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:s,protocolType:n,groupProtocols:i})=>Object.assign(o({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:s,protocolType:n,groupProtocols:i}),{apiVersion:2})},7104:function(t,e,r){const o=r(9149);const{failIfVersionNotSupported:s}=r(1133);const{parse:n}=r(7164);const decode=async t=>{const e=new o(t);const r=e.readInt32();const n=e.readInt16();s(n);return{throttleTime:r,errorCode:n,generationId:e.readInt32(),groupProtocol:e.readString(),leaderId:e.readString(),memberId:e.readString(),members:e.readArray((t=>({memberId:t.readString(),memberMetadata:t.readBytes()})))}};t.exports={decode:decode,parse:n}},6867:function(t,e,r){const o=r(1306);t.exports=({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:s,protocolType:n,groupProtocols:i})=>Object.assign(o({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:s,protocolType:n,groupProtocols:i}),{apiVersion:3})},7727:function(t,e,r){const{parse:o,decode:s}=r(7104);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},1375:function(t,e,r){const o=r(6867);t.exports=({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:s,protocolType:n,groupProtocols:i})=>Object.assign(o({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:s,protocolType:n,groupProtocols:i}),{apiVersion:4})},3684:function(t,e,r){const{decode:o}=r(7727);const{KafkaJSMemberIdRequired:s}=r(1331);const{failure:n,createErrorFromCode:i,errorCodes:a}=r(1133);const{code:c}=a.find((t=>t.type==="MEMBER_ID_REQUIRED"));const parse=async t=>{if(n(t.errorCode)){if(t.errorCode===c){throw new s(i(t.errorCode),{memberId:t.memberId})}throw i(t.errorCode)}return t};t.exports={decode:o,parse:parse}},1591:function(t,e,r){const o=r(7266);const{JoinGroup:s}=r(1062);t.exports=({groupId:t,sessionTimeout:e,rebalanceTimeout:r,memberId:n,groupInstanceId:i=null,protocolType:a,groupProtocols:c})=>({apiKey:s,apiVersion:5,apiName:"JoinGroup",encode:async()=>(new o).writeString(t).writeInt32(e).writeInt32(r).writeString(n).writeString(i).writeString(a).writeArray(c.map(encodeGroupProtocols))});const encodeGroupProtocols=({name:t,metadata:e=Buffer.alloc(0)})=>(new o).writeString(t).writeBytes(e)},9376:function(t,e,r){const o=r(9149);const{KafkaJSMemberIdRequired:s}=r(1331);const{failure:n,createErrorFromCode:i,errorCodes:a,failIfVersionNotSupported:c}=r(1133);const{code:u}=a.find((t=>t.type==="MEMBER_ID_REQUIRED"));const parse=async t=>{if(n(t.errorCode)){if(t.errorCode===u){throw new s(i(t.errorCode),{memberId:t.memberId})}throw i(t.errorCode)}return t};const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=e.readInt16();c(s);return{throttleTime:0,clientSideThrottleTime:r,errorCode:s,generationId:e.readInt32(),groupProtocol:e.readString(),leaderId:e.readString(),memberId:e.readString(),members:e.readArray((t=>({memberId:t.readString(),groupInstanceId:t.readString(),memberMetadata:t.readBytes()})))}};t.exports={decode:decode,parse:parse}},4113:function(t,e,r){const o={0:({groupId:t,memberId:e})=>{const o=r(1980);const s=r(9206);return{request:o({groupId:t,memberId:e}),response:s}},1:({groupId:t,memberId:e})=>{const o=r(4497);const s=r(9276);return{request:o({groupId:t,memberId:e}),response:s}},2:({groupId:t,memberId:e})=>{const o=r(1152);const s=r(8072);return{request:o({groupId:t,memberId:e}),response:s}},3:({groupId:t,memberId:e,groupInstanceId:o})=>{const s=r(7235);const n=r(6405);return{request:s({groupId:t,members:[{memberId:e,groupInstanceId:o}]}),response:n}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},1980:function(t,e,r){const o=r(7266);const{LeaveGroup:s}=r(1062);t.exports=({groupId:t,memberId:e})=>({apiKey:s,apiVersion:0,apiName:"LeaveGroup",encode:async()=>(new o).writeString(t).writeString(e)})},9206:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);return{errorCode:r}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},4497:function(t,e,r){const o=r(1980);t.exports=({groupId:t,memberId:e})=>Object.assign(o({groupId:t,memberId:e}),{apiVersion:1})},9276:function(t,e,r){const o=r(9149);const{failIfVersionNotSupported:s}=r(1133);const{parse:n}=r(9206);const decode=async t=>{const e=new o(t);const r=e.readInt32();const n=e.readInt16();s(n);return{throttleTime:r,errorCode:n}};t.exports={decode:decode,parse:n}},1152:function(t,e,r){const o=r(4497);t.exports=({groupId:t,memberId:e})=>Object.assign(o({groupId:t,memberId:e}),{apiVersion:2})},8072:function(t,e,r){const{parse:o,decode:s}=r(9276);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},7235:function(t,e,r){const o=r(7266);const{LeaveGroup:s}=r(1062);t.exports=({groupId:t,members:e})=>({apiKey:s,apiVersion:3,apiName:"LeaveGroup",encode:async()=>(new o).writeString(t).writeArray(e.map((t=>encodeMember(t))))});const encodeMember=({memberId:t,groupInstanceId:e=null})=>(new o).writeString(t).writeString(e)},6405:function(t,e,r){const o=r(9149);const{failIfVersionNotSupported:s,failure:n,createErrorFromCode:i}=r(1133);const{parse:a}=r(8072);const decode=async t=>{const e=new o(t);const r=e.readInt32();const n=e.readInt16();const i=e.readArray(decodeMembers);s(n);return{throttleTime:0,clientSideThrottleTime:r,errorCode:n,members:i}};const decodeMembers=t=>({memberId:t.readString(),groupInstanceId:t.readString(),errorCode:t.readInt16()});const parse=async t=>{const e=a(t);const r=t.members.find((t=>n(t.errorCode)));if(r){throw i(r.errorCode)}return e};t.exports={decode:decode,parse:parse}},8636:function(t,e,r){const o={0:()=>{const t=r(4708);const e=r(3739);return{request:t(),response:e}},1:()=>{const t=r(6404);const e=r(5983);return{request:t(),response:e}},2:()=>{const t=r(5543);const e=r(3255);return{request:t(),response:e}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},4708:function(t,e,r){const o=r(7266);const{ListGroups:s}=r(1062);t.exports=()=>({apiKey:s,apiVersion:0,apiName:"ListGroups",encode:async()=>new o})},3739:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decodeGroup=t=>({groupId:t.readString(),protocolType:t.readString()});const decode=async t=>{const e=new o(t);const r=e.readInt16();const s=e.readArray(decodeGroup);return{errorCode:r,groups:s}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decodeGroup:decodeGroup,decode:decode,parse:parse}},6404:function(t,e,r){const o=r(4708);t.exports=()=>Object.assign(o(),{apiVersion:1})},5983:function(t,e,r){const o=r(3739);const s=r(9149);const decode=async t=>{const e=new s(t);const r=e.readInt32();const n=e.readInt16();const i=e.readArray(o.decodeGroup);return{throttleTime:r,errorCode:n,groups:i}};t.exports={decode:decode,parse:o.parse}},5543:function(t,e,r){const o=r(6404);t.exports=()=>Object.assign(o(),{apiVersion:2})},3255:function(t,e,r){const{parse:o,decode:s}=r(5983);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},2344:function(t,e,r){const o=r(3541);const s=-1;const n={0:({replicaId:t=s,topics:e})=>{const o=r(4871);const n=r(3040);return{request:o({replicaId:t,topics:e}),response:n}},1:({replicaId:t=s,topics:e})=>{const o=r(130);const n=r(7550);return{request:o({replicaId:t,topics:e}),response:n}},2:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,topics:n})=>{const i=r(7481);const a=r(8790);return{request:i({replicaId:t,isolationLevel:e,topics:n}),response:a}},3:({replicaId:t=s,isolationLevel:e=o.READ_COMMITTED,topics:n})=>{const i=r(8231);const a=r(1073);return{request:i({replicaId:t,isolationLevel:e,topics:n}),response:a}}};t.exports={versions:Object.keys(n),protocol:({version:t})=>n[t]}},4871:function(t,e,r){const o=r(7266);const{ListOffsets:s}=r(1062);t.exports=({replicaId:t,topics:e})=>({apiKey:s,apiVersion:0,apiName:"ListOffsets",encode:async()=>(new o).writeInt32(t).writeArray(e.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,timestamp:e=-1,maxNumOffsets:r=1})=>(new o).writeInt32(t).writeInt64(e).writeInt32(r)},3040:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);return{responses:e.readArray(decodeResponses)}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),errorCode:t.readInt16(),offsets:t.readArray(decodeOffsets)});const decodeOffsets=t=>t.readInt64().toString();const parse=async t=>{const e=t.responses.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));const r=e[0];if(r){throw n(r.errorCode)}return t};t.exports={decode:decode,parse:parse}},130:function(t,e,r){const o=r(7266);const{ListOffsets:s}=r(1062);t.exports=({replicaId:t,topics:e})=>({apiKey:s,apiVersion:1,apiName:"ListOffsets",encode:async()=>(new o).writeInt32(t).writeArray(e.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,timestamp:e=-1})=>(new o).writeInt32(t).writeInt64(e)},7550:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);return{responses:e.readArray(decodeResponses)}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),errorCode:t.readInt16(),timestamp:t.readInt64().toString(),offset:t.readInt64().toString()});const parse=async t=>{const e=t.responses.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));const r=e[0];if(r){throw n(r.errorCode)}return t};t.exports={decode:decode,parse:parse}},7481:function(t,e,r){const o=r(7266);const{ListOffsets:s}=r(1062);t.exports=({replicaId:t,isolationLevel:e,topics:r})=>({apiKey:s,apiVersion:2,apiName:"ListOffsets",encode:async()=>(new o).writeInt32(t).writeInt8(e).writeArray(r.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,timestamp:e=-1})=>(new o).writeInt32(t).writeInt64(e)},8790:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);return{throttleTime:e.readInt32(),responses:e.readArray(decodeResponses)}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),errorCode:t.readInt16(),timestamp:t.readInt64().toString(),offset:t.readInt64().toString()});const parse=async t=>{const e=t.responses.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));const r=e[0];if(r){throw n(r.errorCode)}return t};t.exports={decode:decode,parse:parse}},8231:function(t,e,r){const o=r(7481);t.exports=({replicaId:t,isolationLevel:e,topics:r})=>Object.assign(o({replicaId:t,isolationLevel:e,topics:r}),{apiVersion:3})},1073:function(t,e,r){const{parse:o,decode:s}=r(8790);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},9366:function(t,e,r){const o={0:({topics:t,timeout:e})=>{const o=r(5850);const s=r(7218);return{request:o({topics:t,timeout:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},5850:function(t,e,r){const o=r(7266);const{ListPartitionReassignments:s}=r(1062);t.exports=({topics:t=null,timeout:e=5e3})=>({apiKey:s,apiVersion:0,apiName:"ListPartitionReassignments",encode:async()=>(new o).writeUVarIntBytes().writeInt32(e).writeUVarIntArray(t===null?t:t.map(encodeTopics)).writeUVarIntBytes()});const encodeTopics=({topic:t,partitions:e})=>(new o).writeUVarIntString(t).writeUVarIntArray(e.map(encodePartitions)).writeUVarIntBytes();const encodePartitions=t=>(new o).writeInt32(t)},7218:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decodeReplicas=t=>t.readInt32();const decodePartitions=t=>{const e={partition:t.readInt32(),replicas:t.readUVarIntArray(decodeReplicas),addingReplicas:t.readUVarIntArray(decodeReplicas),removingReplicas:t.readUVarIntArray(decodeReplicas)};t.readTaggedFields();return e};const decodeTopics=t=>{const e={name:t.readUVarIntString(),partitions:t.readUVarIntArray(decodePartitions)};t.readTaggedFields();return e};const decode=async t=>{const e=new o(t);e.readTaggedFields();const r=e.readInt32();const s=e.readInt16();e.readUVarIntString();return{throttleTime:r,errorCode:s,topics:e.readUVarIntArray(decodeTopics)}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},8993:function(t,e,r){const o={0:({topics:t})=>{const e=r(8478);const o=r(5428);return{request:e({topics:t}),response:o}},1:({topics:t})=>{const e=r(2936);const o=r(465);return{request:e({topics:t}),response:o}},2:({topics:t})=>{const e=r(5778);const o=r(9511);return{request:e({topics:t}),response:o}},3:({topics:t})=>{const e=r(1296);const o=r(8210);return{request:e({topics:t}),response:o}},4:({topics:t,allowAutoTopicCreation:e})=>{const o=r(5799);const s=r(3285);return{request:o({topics:t,allowAutoTopicCreation:e}),response:s}},5:({topics:t,allowAutoTopicCreation:e})=>{const o=r(3648);const s=r(6811);return{request:o({topics:t,allowAutoTopicCreation:e}),response:s}},6:({topics:t,allowAutoTopicCreation:e})=>{const o=r(6799);const s=r(6386);return{request:o({topics:t,allowAutoTopicCreation:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},8478:function(t,e,r){const o=r(7266);const{Metadata:s}=r(1062);t.exports=({topics:t})=>({apiKey:s,apiVersion:0,apiName:"Metadata",encode:async()=>(new o).writeArray(t)})},5428:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const broker=t=>({nodeId:t.readInt32(),host:t.readString(),port:t.readInt32()});const topicMetadata=t=>({topicErrorCode:t.readInt16(),topic:t.readString(),partitionMetadata:t.readArray(partitionMetadata)});const partitionMetadata=t=>({partitionErrorCode:t.readInt16(),partitionId:t.readInt32(),leader:t.readInt32(),replicas:t.readArray((t=>t.readInt32())),isr:t.readArray((t=>t.readInt32()))});const decode=async t=>{const e=new o(t);return{brokers:e.readArray(broker),topicMetadata:e.readArray(topicMetadata)}};const parse=async t=>{const e=t.topicMetadata.filter((t=>s(t.topicErrorCode)));if(e.length>0){const{topicErrorCode:t}=e[0];throw n(t)}const r=t.topicMetadata.flatMap((t=>t.partitionMetadata.filter((t=>s(t.partitionErrorCode)))));if(r.length>0){const{partitionErrorCode:t}=r[0];throw n(t)}return t};t.exports={decode:decode,parse:parse}},2936:function(t,e,r){const o=r(7266);const{Metadata:s}=r(1062);t.exports=({topics:t})=>({apiKey:s,apiVersion:1,apiName:"Metadata",encode:async()=>(new o).writeNullableArray(t)})},465:function(t,e,r){const o=r(9149);const{parse:s}=r(5428);const broker=t=>({nodeId:t.readInt32(),host:t.readString(),port:t.readInt32(),rack:t.readString()});const topicMetadata=t=>({topicErrorCode:t.readInt16(),topic:t.readString(),isInternal:t.readBoolean(),partitionMetadata:t.readArray(partitionMetadata)});const partitionMetadata=t=>({partitionErrorCode:t.readInt16(),partitionId:t.readInt32(),leader:t.readInt32(),replicas:t.readArray((t=>t.readInt32())),isr:t.readArray((t=>t.readInt32()))});const decode=async t=>{const e=new o(t);return{brokers:e.readArray(broker),controllerId:e.readInt32(),topicMetadata:e.readArray(topicMetadata)}};t.exports={decode:decode,parse:s}},5778:function(t,e,r){const o=r(2936);t.exports=({topics:t})=>Object.assign(o({topics:t}),{apiVersion:2})},9511:function(t,e,r){const o=r(9149);const{parse:s}=r(5428);const broker=t=>({nodeId:t.readInt32(),host:t.readString(),port:t.readInt32(),rack:t.readString()});const topicMetadata=t=>({topicErrorCode:t.readInt16(),topic:t.readString(),isInternal:t.readBoolean(),partitionMetadata:t.readArray(partitionMetadata)});const partitionMetadata=t=>({partitionErrorCode:t.readInt16(),partitionId:t.readInt32(),leader:t.readInt32(),replicas:t.readArray((t=>t.readInt32())),isr:t.readArray((t=>t.readInt32()))});const decode=async t=>{const e=new o(t);return{brokers:e.readArray(broker),clusterId:e.readString(),controllerId:e.readInt32(),topicMetadata:e.readArray(topicMetadata)}};t.exports={decode:decode,parse:s}},1296:function(t,e,r){const o=r(2936);t.exports=({topics:t})=>Object.assign(o({topics:t}),{apiVersion:3})},8210:function(t,e,r){const o=r(9149);const{parse:s}=r(5428);const broker=t=>({nodeId:t.readInt32(),host:t.readString(),port:t.readInt32(),rack:t.readString()});const topicMetadata=t=>({topicErrorCode:t.readInt16(),topic:t.readString(),isInternal:t.readBoolean(),partitionMetadata:t.readArray(partitionMetadata)});const partitionMetadata=t=>({partitionErrorCode:t.readInt16(),partitionId:t.readInt32(),leader:t.readInt32(),replicas:t.readArray((t=>t.readInt32())),isr:t.readArray((t=>t.readInt32()))});const decode=async t=>{const e=new o(t);return{throttleTime:e.readInt32(),brokers:e.readArray(broker),clusterId:e.readString(),controllerId:e.readInt32(),topicMetadata:e.readArray(topicMetadata)}};t.exports={decode:decode,parse:s}},5799:function(t,e,r){const o=r(7266);const{Metadata:s}=r(1062);t.exports=({topics:t,allowAutoTopicCreation:e=true})=>({apiKey:s,apiVersion:4,apiName:"Metadata",encode:async()=>(new o).writeNullableArray(t).writeBoolean(e)})},3285:function(t,e,r){const{parse:o,decode:s}=r(8210);t.exports={parse:o,decode:s}},3648:function(t,e,r){const o=r(5799);t.exports=({topics:t,allowAutoTopicCreation:e=true})=>Object.assign(o({topics:t,allowAutoTopicCreation:e}),{apiVersion:5})},6811:function(t,e,r){const o=r(9149);const{parse:s}=r(5428);const broker=t=>({nodeId:t.readInt32(),host:t.readString(),port:t.readInt32(),rack:t.readString()});const topicMetadata=t=>({topicErrorCode:t.readInt16(),topic:t.readString(),isInternal:t.readBoolean(),partitionMetadata:t.readArray(partitionMetadata)});const partitionMetadata=t=>({partitionErrorCode:t.readInt16(),partitionId:t.readInt32(),leader:t.readInt32(),replicas:t.readArray((t=>t.readInt32())),isr:t.readArray((t=>t.readInt32())),offlineReplicas:t.readArray((t=>t.readInt32()))});const decode=async t=>{const e=new o(t);return{throttleTime:e.readInt32(),brokers:e.readArray(broker),clusterId:e.readString(),controllerId:e.readInt32(),topicMetadata:e.readArray(topicMetadata)}};t.exports={decode:decode,parse:s}},6799:function(t,e,r){const o=r(3648);t.exports=({topics:t,allowAutoTopicCreation:e=true})=>Object.assign(o({topics:t,allowAutoTopicCreation:e}),{apiVersion:6})},6386:function(t,e,r){const{parse:o,decode:s}=r(6811);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},9843:function(t,e,r){const o=-1;const s={0:({groupId:t,topics:e})=>{const o=r(9802);const s=r(1697);return{request:o({groupId:t,topics:e}),response:s}},1:({groupId:t,groupGenerationId:e,memberId:o,topics:s})=>{const n=r(3693);const i=r(2801);return{request:n({groupId:t,groupGenerationId:e,memberId:o,topics:s}),response:i}},2:({groupId:t,groupGenerationId:e,memberId:s,retentionTime:n=o,topics:i})=>{const a=r(1179);const c=r(9551);return{request:a({groupId:t,groupGenerationId:e,memberId:s,retentionTime:n,topics:i}),response:c}},3:({groupId:t,groupGenerationId:e,memberId:s,retentionTime:n=o,topics:i})=>{const a=r(2774);const c=r(6843);return{request:a({groupId:t,groupGenerationId:e,memberId:s,retentionTime:n,topics:i}),response:c}},4:({groupId:t,groupGenerationId:e,memberId:s,retentionTime:n=o,topics:i})=>{const a=r(6979);const c=r(3110);return{request:a({groupId:t,groupGenerationId:e,memberId:s,retentionTime:n,topics:i}),response:c}},5:({groupId:t,groupGenerationId:e,memberId:o,topics:s})=>{const n=r(6858);const i=r(4171);return{request:n({groupId:t,groupGenerationId:e,memberId:o,topics:s}),response:i}}};t.exports={versions:Object.keys(s),protocol:({version:t})=>s[t]}},9802:function(t,e,r){const o=r(7266);const{OffsetCommit:s}=r(1062);t.exports=({groupId:t,topics:e})=>({apiKey:s,apiVersion:0,apiName:"OffsetCommit",encode:async()=>(new o).writeString(t).writeArray(e.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,offset:e,metadata:r=null})=>(new o).writeInt32(t).writeInt64(e).writeString(r)},1697:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);return{responses:e.readArray(decodeResponses)}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),errorCode:t.readInt16()});const parse=async t=>{const e=t.responses.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));const r=e[0];if(r){throw n(r.errorCode)}return t};t.exports={decode:decode,parse:parse}},3693:function(t,e,r){const o=r(7266);const{OffsetCommit:s}=r(1062);t.exports=({groupId:t,groupGenerationId:e,memberId:r,topics:n})=>({apiKey:s,apiVersion:1,apiName:"OffsetCommit",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r).writeArray(n.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,offset:e,timestamp:r=Date.now(),metadata:s=null})=>(new o).writeInt32(t).writeInt64(e).writeInt64(r).writeString(s)},2801:function(t,e,r){const{parse:o,decode:s}=r(1697);t.exports={decode:s,parse:o}},1179:function(t,e,r){const o=r(7266);const{OffsetCommit:s}=r(1062);t.exports=({groupId:t,groupGenerationId:e,memberId:r,retentionTime:n,topics:i})=>({apiKey:s,apiVersion:2,apiName:"OffsetCommit",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r).writeInt64(n).writeArray(i.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,offset:e,metadata:r=null})=>(new o).writeInt32(t).writeInt64(e).writeString(r)},9551:function(t,e,r){const{parse:o,decode:s}=r(1697);t.exports={decode:s,parse:o}},2774:function(t,e,r){const o=r(1179);t.exports=({groupId:t,groupGenerationId:e,memberId:r,retentionTime:s,topics:n})=>Object.assign(o({groupId:t,groupGenerationId:e,memberId:r,retentionTime:s,topics:n}),{apiVersion:3})},6843:function(t,e,r){const o=r(9149);const{parse:s}=r(1697);const decode=async t=>{const e=new o(t);return{throttleTime:e.readInt32(),responses:e.readArray(decodeResponses)}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),errorCode:t.readInt16()});t.exports={decode:decode,parse:s}},6979:function(t,e,r){const o=r(2774);t.exports=({groupId:t,groupGenerationId:e,memberId:r,retentionTime:s,topics:n})=>Object.assign(o({groupId:t,groupGenerationId:e,memberId:r,retentionTime:s,topics:n}),{apiVersion:4})},3110:function(t,e,r){const{parse:o,decode:s}=r(6843);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},6858:function(t,e,r){const o=r(7266);const{OffsetCommit:s}=r(1062);t.exports=({groupId:t,groupGenerationId:e,memberId:r,topics:n})=>({apiKey:s,apiVersion:5,apiName:"OffsetCommit",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r).writeArray(n.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,offset:e,metadata:r=null})=>(new o).writeInt32(t).writeInt64(e).writeString(r)},4171:function(t,e,r){const{parse:o,decode:s}=r(3110);t.exports={decode:s,parse:o}},6547:function(t,e,r){const o={1:({groupId:t,topics:e})=>{const o=r(4010);const s=r(8922);return{request:o({groupId:t,topics:e}),response:s}},2:({groupId:t,topics:e})=>{const o=r(8242);const s=r(6219);return{request:o({groupId:t,topics:e}),response:s}},3:({groupId:t,topics:e})=>{const o=r(5337);const s=r(706);return{request:o({groupId:t,topics:e}),response:s}},4:({groupId:t,topics:e})=>{const o=r(7262);const s=r(2636);return{request:o({groupId:t,topics:e}),response:s}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},4010:function(t,e,r){const o=r(7266);const{OffsetFetch:s}=r(1062);t.exports=({groupId:t,topics:e})=>({apiKey:s,apiVersion:1,apiName:"OffsetFetch",encode:async()=>(new o).writeString(t).writeArray(e.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t})=>(new o).writeInt32(t)},8922:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);return{responses:e.readArray(decodeResponses)}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),offset:t.readInt64().toString(),metadata:t.readString(),errorCode:t.readInt16()});const parse=async t=>{const e=t.responses.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));const r=e[0];if(r){throw n(r.errorCode)}return t};t.exports={decode:decode,parse:parse}},8242:function(t,e,r){const o=r(4010);t.exports=({groupId:t,topics:e})=>Object.assign(o({groupId:t,topics:e}),{apiVersion:2})},6219:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);return{responses:e.readArray(decodeResponses),errorCode:e.readInt16()}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),offset:t.readInt64().toString(),metadata:t.readString(),errorCode:t.readInt16()});const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}const e=t.responses.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));const r=e[0];if(r){throw n(r.errorCode)}return t};t.exports={decode:decode,parse:parse}},5337:function(t,e,r){const o=r(7266);const{OffsetFetch:s}=r(1062);t.exports=({groupId:t,topics:e})=>({apiKey:s,apiVersion:3,apiName:"OffsetFetch",encode:async()=>(new o).writeString(t).writeNullableArray(e.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t})=>(new o).writeInt32(t)},706:function(t,e,r){const o=r(9149);const{parse:s}=r(6219);const decode=async t=>{const e=new o(t);return{throttleTime:e.readInt32(),responses:e.readArray(decodeResponses),errorCode:e.readInt16()}};const decodeResponses=t=>({topic:t.readString(),partitions:t.readArray(decodePartitions)});const decodePartitions=t=>({partition:t.readInt32(),offset:t.readInt64().toString(),metadata:t.readString(),errorCode:t.readInt16()});t.exports={decode:decode,parse:s}},7262:function(t,e,r){const o=r(5337);t.exports=({groupId:t,topics:e})=>Object.assign(o({groupId:t,topics:e}),{apiVersion:4})},2636:function(t,e,r){const{parse:o,decode:s}=r(706);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},2229:function(t,e,r){const o={0:({acks:t,timeout:e,topicData:o})=>{const s=r(2202);const n=r(7017);return{request:s({acks:t,timeout:e,topicData:o}),response:n}},1:({acks:t,timeout:e,topicData:o})=>{const s=r(410);const n=r(2409);return{request:s({acks:t,timeout:e,topicData:o}),response:n}},2:({acks:t,timeout:e,topicData:o,compression:s})=>{const n=r(9255);const i=r(9482);return{request:n({acks:t,timeout:e,compression:s,topicData:o}),response:i}},3:({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a})=>{const c=r(6828);const u=r(8081);return{request:c({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a}),response:u}},4:({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a})=>{const c=r(7375);const u=r(7339);return{request:c({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a}),response:u}},5:({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a})=>{const c=r(4838);const u=r(3336);return{request:c({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a}),response:u}},6:({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a})=>{const c=r(545);const u=r(234);return{request:c({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a}),response:u}},7:({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a})=>{const c=r(5514);const u=r(9034);return{request:c({acks:t,timeout:e,compression:o,topicData:s,transactionalId:n,producerId:i,producerEpoch:a}),response:u}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},2202:function(t,e,r){const o=r(7266);const{Produce:s}=r(1062);const n=r(8126);t.exports=({acks:t,timeout:e,topicData:r})=>({apiKey:s,apiVersion:0,apiName:"Produce",expectResponse:()=>t!==0,encode:async()=>(new o).writeInt16(t).writeInt32(e).writeArray(r.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartitions));const encodePartitions=({partition:t,messages:e})=>{const r=n({messageVersion:0,entries:e});return(new o).writeInt32(t).writeInt32(r.size()).writeEncoder(r)}},7017:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const partition=t=>({partition:t.readInt32(),errorCode:t.readInt16(),offset:t.readInt64().toString()});const decode=async t=>{const e=new o(t);const r=e.readArray((t=>({topicName:t.readString(),partitions:t.readArray(partition)})));return{topics:r}};const parse=async t=>{const e=t.topics.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));if(e.length>0){const{errorCode:t}=e[0];throw n(t)}return t};t.exports={decode:decode,parse:parse}},410:function(t,e,r){const o=r(2202);t.exports=({acks:t,timeout:e,topicData:r})=>Object.assign(o({acks:t,timeout:e,topicData:r}),{apiVersion:1})},2409:function(t,e,r){const o=r(9149);const{parse:s}=r(7017);const partition=t=>({partition:t.readInt32(),errorCode:t.readInt16(),offset:t.readInt64().toString()});const decode=async t=>{const e=new o(t);const r=e.readArray((t=>({topicName:t.readString(),partitions:t.readArray(partition)})));const s=e.readInt32();return{topics:r,throttleTime:s}};t.exports={decode:decode,parse:s}},9255:function(t,e,r){const o=r(7266);const{Produce:s}=r(1062);const n=r(8126);const{Types:i,lookupCodec:a}=r(5516);t.exports=({acks:t,timeout:e,compression:r=i.None,topicData:n})=>({apiKey:s,apiVersion:2,apiName:"Produce",expectResponse:()=>t!==0,encode:async()=>{const s=topicEncoder(r);const i=[];for(const t of n){i.push(await s(t))}return(new o).writeInt16(t).writeInt32(e).writeArray(i)}});const topicEncoder=t=>{const e=partitionsEncoder(t);return async({topic:t,partitions:r})=>{const s=[];for(const t of r){s.push(await e(t))}return(new o).writeString(t).writeArray(s)}};const partitionsEncoder=t=>async({partition:e,messages:r})=>{const s=n({messageVersion:1,compression:t,entries:r});if(t===i.None){return(new o).writeInt32(e).writeInt32(s.size()).writeEncoder(s)}const c=r[0].timestamp||Date.now();const u=a(t);const p=await u.compress(s);const d=n({messageVersion:1,entries:[{compression:t,timestamp:c,value:p}]});return(new o).writeInt32(e).writeInt32(d.size()).writeEncoder(d)}},9482:function(t,e,r){const o=r(9149);const{parse:s}=r(7017);const partition=t=>({partition:t.readInt32(),errorCode:t.readInt16(),offset:t.readInt64().toString(),timestamp:t.readInt64().toString()});const decode=async t=>{const e=new o(t);const r=e.readArray((t=>({topicName:t.readString(),partitions:t.readArray(partition)})));const s=e.readInt32();return{topics:r,throttleTime:s}};t.exports={decode:decode,parse:s}},6828:function(t,e,r){const o=r(8414);const s=r(7266);const{Produce:n}=r(1062);const{Types:i}=r(5516);const a=r(8821);const{RecordBatch:c}=r(7315);t.exports=({acks:t,timeout:e,transactionalId:r=null,producerId:a=o.fromInt(-1),producerEpoch:c=0,compression:u=i.None,topicData:p})=>({apiKey:n,apiVersion:3,apiName:"Produce",expectResponse:()=>t!==0,encode:async()=>{const o=topicEncoder(u);const n=[];for(const t of p){n.push(await o({...t,transactionalId:r,producerId:a,producerEpoch:c}))}return(new s).writeString(r).writeInt16(t).writeInt32(e).writeArray(n)}});const topicEncoder=t=>async({topic:e,partitions:r,transactionalId:o,producerId:n,producerEpoch:i})=>{const a=partitionsEncoder(t);const c=[];for(const t of r){c.push(await a({...t,transactionalId:o,producerId:n,producerEpoch:i}))}return(new s).writeString(e).writeArray(c)};const partitionsEncoder=t=>async({partition:e,messages:r,transactionalId:o,firstSequence:n,producerId:i,producerEpoch:u})=>{const p=Date.now();const d=r.map((t=>t.timestamp)).filter((t=>t!=null)).sort();const l=d.length===0?[p]:d;const f=l[0];const h=l[l.length-1];const m=r.map(((t,e)=>a({...t,offsetDelta:e,timestampDelta:(t.timestamp||p)-f})));const g=await c({compression:t,records:m,firstTimestamp:f,maxTimestamp:h,producerId:i,producerEpoch:u,firstSequence:n,transactional:!!o,lastOffsetDelta:m.length-1});return(new s).writeInt32(e).writeInt32(g.size()).writeEncoder(g)}},8081:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const partition=t=>({partition:t.readInt32(),errorCode:t.readInt16(),baseOffset:t.readInt64().toString(),logAppendTime:t.readInt64().toString()});const decode=async t=>{const e=new o(t);const r=e.readArray((t=>({topicName:t.readString(),partitions:t.readArray(partition)})));const s=e.readInt32();return{topics:r,throttleTime:s}};const parse=async t=>{const e=t.topics.flatMap((t=>t.partitions.filter((t=>s(t.errorCode)))));if(e.length>0){const{errorCode:t}=e[0];throw n(t)}return t};t.exports={decode:decode,parse:parse}},7375:function(t,e,r){const o=r(6828);t.exports=({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a})=>Object.assign(o({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a}),{apiVersion:4})},7339:function(t,e,r){const{decode:o,parse:s}=r(8081);t.exports={decode:o,parse:s}},4838:function(t,e,r){const o=r(6828);t.exports=({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a})=>Object.assign(o({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a}),{apiVersion:5})},3336:function(t,e,r){const o=r(9149);const{parse:s}=r(8081);const partition=t=>({partition:t.readInt32(),errorCode:t.readInt16(),baseOffset:t.readInt64().toString(),logAppendTime:t.readInt64().toString(),logStartOffset:t.readInt64().toString()});const decode=async t=>{const e=new o(t);const r=e.readArray((t=>({topicName:t.readString(),partitions:t.readArray(partition)})));const s=e.readInt32();return{topics:r,throttleTime:s}};t.exports={decode:decode,parse:s}},545:function(t,e,r){const o=r(4838);t.exports=({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a})=>Object.assign(o({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a}),{apiVersion:6})},234:function(t,e,r){const{parse:o,decode:s}=r(3336);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},5514:function(t,e,r){const o=r(545);t.exports=({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a})=>Object.assign(o({acks:t,timeout:e,transactionalId:r,producerId:s,producerEpoch:n,compression:i,topicData:a}),{apiVersion:7})},9034:function(t,e,r){const{decode:o,parse:s}=r(234);t.exports={decode:o,parse:s}},9807:function(t,e,r){const o={0:({authBytes:t})=>{const e=r(993);const o=r(9767);return{request:e({authBytes:t}),response:o}},1:({authBytes:t})=>{const e=r(8086);const o=r(2788);return{request:e({authBytes:t}),response:o}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},993:function(t,e,r){const o=r(7266);const{SaslAuthenticate:s}=r(1062);t.exports=({authBytes:t})=>({apiKey:s,apiVersion:0,apiName:"SaslAuthenticate",encode:async()=>(new o).writeBuffer(t)})},9767:function(t,e,r){const o=r(9149);const s=r(7266);const{failure:n,createErrorFromCode:i,failIfVersionNotSupported:a,errorCodes:c}=r(1133);const{KafkaJSProtocolError:u}=r(1331);const p=58;const d=c.find((t=>t.code===p));const decode=async t=>{const e=new o(t);const r=e.readInt16();a(r);const n=e.readString();const i=(new s).writeBytes(e.readBytes());const c=i.buffer;return{errorCode:r,errorMessage:n,authBytes:c}};const parse=async t=>{if(t.errorCode===p&&t.errorMessage){throw new u({...d,message:t.errorMessage})}if(n(t.errorCode)){throw i(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},8086:function(t,e,r){const o=r(993);t.exports=({authBytes:t})=>Object.assign(o({authBytes:t}),{apiVersion:1})},2788:function(t,e,r){const o=r(9149);const s=r(7266);const{parse:n}=r(9767);const{failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);const n=e.readString();const a=(new s).writeBytes(e.readBytes());const c=a.buffer;const u=e.readInt64().toString();return{errorCode:r,errorMessage:n,authBytes:c,sessionLifetimeMs:u}};t.exports={decode:decode,parse:n}},7934:function(t,e,r){const o={0:({mechanism:t})=>{const e=r(320);const o=r(5326);return{request:e({mechanism:t}),response:o}},1:({mechanism:t})=>{const e=r(4600);const o=r(3628);return{request:e({mechanism:t}),response:o}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},320:function(t,e,r){const o=r(7266);const{SaslHandshake:s}=r(1062);t.exports=({mechanism:t})=>({apiKey:s,apiVersion:0,apiName:"SaslHandshake",encode:async()=>(new o).writeString(t)})},5326:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);return{errorCode:r,enabledMechanisms:e.readArray((t=>t.readString()))}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},4600:function(t,e,r){const o=r(320);t.exports=({mechanism:t})=>({...o({mechanism:t}),apiVersion:1})},3628:function(t,e,r){const{decode:o,parse:s}=r(5326);t.exports={decode:o,parse:s}},1013:function(t,e,r){const o={0:({groupId:t,generationId:e,memberId:o,groupAssignment:s})=>{const n=r(7038);const i=r(2355);return{request:n({groupId:t,generationId:e,memberId:o,groupAssignment:s}),response:i}},1:({groupId:t,generationId:e,memberId:o,groupAssignment:s})=>{const n=r(8123);const i=r(1395);return{request:n({groupId:t,generationId:e,memberId:o,groupAssignment:s}),response:i}},2:({groupId:t,generationId:e,memberId:o,groupAssignment:s})=>{const n=r(7659);const i=r(7983);return{request:n({groupId:t,generationId:e,memberId:o,groupAssignment:s}),response:i}},3:({groupId:t,generationId:e,memberId:o,groupInstanceId:s,groupAssignment:n})=>{const i=r(609);const a=r(769);return{request:i({groupId:t,generationId:e,memberId:o,groupInstanceId:s,groupAssignment:n}),response:a}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},7038:function(t,e,r){const o=r(7266);const{SyncGroup:s}=r(1062);t.exports=({groupId:t,generationId:e,memberId:r,groupAssignment:n})=>({apiKey:s,apiVersion:0,apiName:"SyncGroup",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r).writeArray(n.map(encodeGroupAssignment))});const encodeGroupAssignment=({memberId:t,memberAssignment:e})=>(new o).writeString(t).writeBytes(e)},2355:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n,failIfVersionNotSupported:i}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt16();i(r);return{errorCode:r,memberAssignment:e.readBytes()}};const parse=async t=>{if(s(t.errorCode)){throw n(t.errorCode)}return t};t.exports={decode:decode,parse:parse}},8123:function(t,e,r){const o=r(7038);t.exports=({groupId:t,generationId:e,memberId:r,groupAssignment:s})=>Object.assign(o({groupId:t,generationId:e,memberId:r,groupAssignment:s}),{apiVersion:1})},1395:function(t,e,r){const o=r(9149);const{failIfVersionNotSupported:s}=r(1133);const{parse:n}=r(2355);const decode=async t=>{const e=new o(t);const r=e.readInt32();const n=e.readInt16();s(n);return{throttleTime:r,errorCode:n,memberAssignment:e.readBytes()}};t.exports={decode:decode,parse:n}},7659:function(t,e,r){const o=r(8123);t.exports=({groupId:t,generationId:e,memberId:r,groupAssignment:s})=>Object.assign(o({groupId:t,generationId:e,memberId:r,groupAssignment:s}),{apiVersion:2})},7983:function(t,e,r){const{parse:o,decode:s}=r(1395);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},609:function(t,e,r){const o=r(7266);const{SyncGroup:s}=r(1062);t.exports=({groupId:t,generationId:e,memberId:r,groupInstanceId:n=null,groupAssignment:i})=>({apiKey:s,apiVersion:3,apiName:"SyncGroup",encode:async()=>(new o).writeString(t).writeInt32(e).writeString(r).writeString(n).writeArray(i.map(encodeGroupAssignment))});const encodeGroupAssignment=({memberId:t,memberAssignment:e})=>(new o).writeString(t).writeBytes(e)},769:function(t,e,r){const{decode:o,parse:s}=r(7983);t.exports={decode:o,parse:s}},8017:function(t,e,r){const o={0:({transactionalId:t,groupId:e,producerId:o,producerEpoch:s,topics:n})=>{const i=r(6482);const a=r(3808);return{request:i({transactionalId:t,groupId:e,producerId:o,producerEpoch:s,topics:n}),response:a}},1:({transactionalId:t,groupId:e,producerId:o,producerEpoch:s,topics:n})=>{const i=r(1447);const a=r(4597);return{request:i({transactionalId:t,groupId:e,producerId:o,producerEpoch:s,topics:n}),response:a}}};t.exports={versions:Object.keys(o),protocol:({version:t})=>o[t]}},6482:function(t,e,r){const o=r(7266);const{TxnOffsetCommit:s}=r(1062);t.exports=({transactionalId:t,groupId:e,producerId:r,producerEpoch:n,topics:i})=>({apiKey:s,apiVersion:0,apiName:"TxnOffsetCommit",encode:async()=>(new o).writeString(t).writeString(e).writeInt64(r).writeInt16(n).writeArray(i.map(encodeTopic))});const encodeTopic=({topic:t,partitions:e})=>(new o).writeString(t).writeArray(e.map(encodePartition));const encodePartition=({partition:t,offset:e,metadata:r})=>(new o).writeInt32(t).writeInt64(e).writeString(r)},3808:function(t,e,r){const o=r(9149);const{failure:s,createErrorFromCode:n}=r(1133);const decode=async t=>{const e=new o(t);const r=e.readInt32();const s=await e.readArrayAsync(decodeTopic);return{throttleTime:r,topics:s}};const decodeTopic=async t=>({topic:t.readString(),partitions:await t.readArrayAsync(decodePartition)});const decodePartition=t=>({partition:t.readInt32(),errorCode:t.readInt16()});const parse=async t=>{const e=t.topics.map((({partitions:t})=>({partitionsWithErrors:t.filter((({errorCode:t})=>s(t)))}))).filter((({partitionsWithErrors:t})=>t.length));if(e.length>0){throw n(e[0].partitionsWithErrors[0].errorCode)}return t};t.exports={decode:decode,parse:parse}},1447:function(t,e,r){const o=r(6482);t.exports=({transactionalId:t,groupId:e,producerId:r,producerEpoch:s,topics:n})=>Object.assign(o({transactionalId:t,groupId:e,producerId:r,producerEpoch:s,topics:n}),{apiVersion:1})},4597:function(t,e,r){const{parse:o,decode:s}=r(3808);const decode=async t=>{const e=await s(t);return{...e,throttleTime:0,clientSideThrottleTime:e.throttleTime}};t.exports={decode:decode,parse:o}},1867:function(t){t.exports={UNKNOWN:0,ANY:1,MATCH:2,LITERAL:3,PREFIXED:4}},7109:function(t,e,r){t.exports={request:r(9138),response:r(3551)}},9138:function(t,e,r){const o=r(7266);const s="\0";t.exports=({authorizationIdentity:t,accessKeyId:e,secretAccessKey:r,sessionToken:n=""})=>({encode:async()=>(new o).writeBytes([t,e,r,n].join(s)).buffer})},3551:function(t){t.exports={decode:async()=>true,parse:async()=>true}},4846:function(t,e,r){t.exports={request:r(9781),response:r(1529)}},9781:function(t,e,r){const o=r(7266);const s="";function formatExtensions(t){let e="";if(t==null){return e}let r="";for(const o in t){e+=`${r}${o}=${t[o]}`;r=s}return e}t.exports=async({authorizationIdentity:t=null},e)=>{const r=t==null?"":`"a=${t}`;let n=formatExtensions(e.extensions);if(n.length>0){n=`${s}${n}`}const i=`n,${r},${s}auth=Bearer ${e.value}${n}${s}${s}`;return{encode:async()=>(new o).writeBytes(Buffer.from(i)).buffer}}},1529:function(t){t.exports={decode:async()=>true,parse:async()=>true}},2166:function(t,e,r){t.exports={request:r(9420),response:r(2144)}},9420:function(t,e,r){const o=r(7266);const s="\0";t.exports=({authorizationIdentity:t=null,username:e,password:r})=>({encode:async()=>(new o).writeBytes([t,e,r].join(s)).buffer})},2144:function(t){t.exports={decode:async()=>true,parse:async()=>true}},6982:function(t,e,r){const o=r(7266);t.exports=({finalMessage:t})=>({encode:async()=>(new o).writeBytes(t).buffer})},1693:function(t,e,r){t.exports=r(9434)},4146:function(t,e,r){const o=r(7266);t.exports=({clientFirstMessage:t})=>({encode:async()=>(new o).writeBytes(t).buffer})},9434:function(t,e,r){const o=r(9149);const s=/^([rsiev])=(.*)$/;t.exports={decode:async t=>new o(t).readBytes(),parse:async t=>{const e=t.toString().split(",").map((t=>{const[e,r,o]=t.match(s);return[r,o]})).reduce(((t,e)=>({...t,[e[0]]:e[1]})),{});return{original:t.toString(),...e}}}},3738:function(t,e,r){t.exports={firstMessage:{request:r(4146),response:r(9434)},finalMessage:{request:r(6982),response:r(1693)}}},3231:function(t){t.exports={NO_TIMESTAMP:-1,CREATE_TIME:0,LOG_APPEND_TIME:1}},6395:function(t){t.exports={maxRetryTime:30*1e3,initialRetryTime:300,factor:.2,multiplier:2,retries:5}},3912:function(t){t.exports={maxRetryTime:1e3,initialRetryTime:50,factor:.02,multiplier:1.5,retries:15}},4091:function(t,e,r){const{KafkaJSNumberOfRetriesExceeded:o,KafkaJSNonRetriableError:s}=r(1331);const n=process.env.NODE_ENV==="test";const i=n?r(3912):r(6395);const random=(t,e)=>Math.random()*(e-t)+t;const randomFromRetryTime=(t,e)=>{const r=t*e;return Math.ceil(random(e-r,e+r))};const a=["RangeError","ReferenceError","SyntaxError","TypeError"];const isErrorUnrecoverable=t=>a.includes(t.name);const isErrorRetriable=t=>(t.retriable||t.retriable!==false)&&!isErrorUnrecoverable(t);const createRetriable=(t,e,r,n)=>{let i=false;const{factor:a,multiplier:c,maxRetryTime:u,retries:p}=t;const bail=t=>{i=true;r(t||new Error("Aborted"))};const calculateExponentialRetryTime=t=>Math.min(randomFromRetryTime(a,t)*c,u);const retry=(t,a=0)=>{if(i)return;const c=calculateExponentialRetryTime(t);const u=a<p;const scheduleRetry=()=>{setTimeout((()=>retry(c,a+1)),t)};n(bail,a,t).then(e).catch((e=>{if(isErrorRetriable(e)){if(u){scheduleRetry()}else{r(new o(e,{retryCount:a,retryTime:t,cause:e.cause||e}))}}else{r(new s(e,{cause:e.cause||e}))}}))};return retry};t.exports=(t={})=>e=>new Promise(((r,o)=>{const s=Object.assign({},i,t);const n=createRetriable(s,r,o,e);n(randomFromRetryTime(s.factor,s.initialRetryTime))}))},9408:function(t){t.exports=(t,e)=>{const r=[];const o=t.length;let s=0;while(s<o){if(e.indexOf(t[s])===-1){r.push(t[s])}s+=1}return r}},7498:function(t){t.exports=async(t,e)=>{const r=new Map;for(const o of t){const t=await Promise.resolve(e(o));r.set(t,r.has(t)?[...r.get(t),o]:[o])}return r}},6249:function(t,e,r){const{format:o}=r(3837);const{KafkaJSLockTimeout:s}=r(1331);const n={LOCKED:Symbol("private:Lock:locked"),TIMEOUT:Symbol("private:Lock:timeout"),WAITING:Symbol("private:Lock:waiting"),TIMEOUT_ERROR_MESSAGE:Symbol("private:Lock:timeoutErrorMessage")};const i="Timeout while acquiring lock (%d waiting locks)";t.exports=class Lock{constructor({timeout:t,description:e=null}={}){if(typeof t!=="number"){throw new TypeError(`'timeout' is not a number, received '${typeof t}'`)}this[n.LOCKED]=false;this[n.TIMEOUT]=t;this[n.WAITING]=new Set;this[n.TIMEOUT_ERROR_MESSAGE]=()=>{const t=o(i,this[n.WAITING].size);return e?`${t}: "${e}"`:t}}async acquire(){return new Promise(((t,e)=>{if(!this[n.LOCKED]){this[n.LOCKED]=true;return t()}let r=null;const tryToAcquire=async()=>{if(!this[n.LOCKED]){this[n.LOCKED]=true;clearTimeout(r);this[n.WAITING].delete(tryToAcquire);return t()}};this[n.WAITING].add(tryToAcquire);r=setTimeout((()=>{const t=new s(this[n.TIMEOUT_ERROR_MESSAGE]());this[n.WAITING].delete(tryToAcquire);e(t)}),this[n.TIMEOUT])}))}async release(){this[n.LOCKED]=false;const t=this[n.WAITING].values().next().value;if(t){return t()}}}},8414:function(t){class Long{constructor(t){this.value=t}static isLong(t){return typeof t.value==="bigint"}static fromBits(t){return new Long(BigInt(t))}static fromInt(t){if(isNaN(t))return Long.ZERO;return new Long(BigInt.asIntN(64,BigInt(t)))}static fromNumber(t){if(isNaN(t))return Long.ZERO;return new Long(BigInt(t))}static fromValue(t){if(typeof t==="number")return this.fromNumber(t);if(typeof t==="string")return this.fromString(t);if(typeof t==="bigint")return new Long(t);if(this.isLong(t))return new Long(BigInt(t.value));return new Long(BigInt(t))}static fromString(t){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return Long.ZERO;return new Long(BigInt(t))}isZero(){return this.value===BigInt(0)}isNegative(){return this.value<BigInt(0)}toString(){return String(this.value)}toNumber(){return Number(this.value)}toInt(){return Number(BigInt.asIntN(32,this.value))}toJSON(){return this.toString()}shiftLeft(t){return new Long(this.value<<BigInt(t))}shiftRight(t){return new Long(this.value>>BigInt(t))}or(t){if(!Long.isLong(t))t=Long.fromValue(t);return Long.fromBits(this.value|t.value)}xor(t){if(!Long.isLong(t))t=Long.fromValue(t);return new Long(this.value^t.value)}and(t){if(!Long.isLong(t))t=Long.fromValue(t);return new Long(this.value&t.value)}not(){return new Long(~this.value)}shiftRightUnsigned(t){return new Long(this.value>>BigInt.asUintN(64,BigInt(t)))}equals(t){if(!Long.isLong(t))t=Long.fromValue(t);return this.value===t.value}greaterThanOrEqual(t){if(!Long.isLong(t))t=Long.fromValue(t);return this.value>=t.value}gte(t){return this.greaterThanOrEqual(t)}notEquals(t){if(!Long.isLong(t))t=Long.fromValue(t);return!this.equals(t)}add(t){if(!Long.isLong(t))t=Long.fromValue(t);return new Long(this.value+t.value)}subtract(t){if(!Long.isLong(t))t=Long.fromValue(t);return this.add(t.negate())}multiply(t){if(this.isZero())return Long.ZERO;if(!Long.isLong(t))t=Long.fromValue(t);return new Long(this.value*t.value)}divide(t){if(!Long.isLong(t))t=Long.fromValue(t);if(t.isZero())throw Error("division by zero");return new Long(this.value/t.value)}compare(t){if(!Long.isLong(t))t=Long.fromValue(t);if(this.value===t.value)return 0;if(this.value>t.value)return 1;if(t.value>this.value)return-1}lessThan(t){if(!Long.isLong(t))t=Long.fromValue(t);return this.value<t.value}negate(){if(this.equals(Long.MIN_VALUE)){return Long.MIN_VALUE}return this.not().add(Long.ONE)}getHighBits(){return Number(BigInt.asIntN(32,this.value>>BigInt(32)))}getLowBits(){return Number(BigInt.asIntN(32,this.value))}}Long.MIN_VALUE=new Long(BigInt("-9223372036854775808"));Long.MAX_VALUE=new Long(BigInt("9223372036854775807"));Long.ZERO=Long.fromInt(0);Long.ONE=Long.fromInt(1);t.exports=Long},4889:function(t){t.exports=t=>{let e=false;return(...r)=>{if(!e){e=true;return t(...r)}}}},6553:function(t){const seq=(t,e=(t=>t))=>new Array(t).fill(0).map(((t,r)=>e(r)));t.exports=seq},9964:function(t){t.exports=t=>{let e=null;return(...r)=>{if(e==null){e=t(...r).finally((()=>e=null))}return e}}},9085:function(t){t.exports=t=>{if(!Array.isArray(t)){throw new TypeError("'array' is not an array")}if(t.length<2){return t}const e=t.slice();for(let t=e.length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1));const o=e[t];e[t]=e[r];e[r]=o}return e}},1341:function(t){t.exports=t=>new Promise((e=>{setTimeout(e,t)}))},5780:function(t){const{keys:e}=Object;t.exports=t=>e(t).reduce(((e,r)=>({...e,[t[r]]:r})),{})},4569:function(t,e,r){const o=r(1341);const{KafkaJSTimeout:s}=r(1331);t.exports=(t,{delay:e=50,maxWait:r=1e4,timeoutMessage:n="Timeout",ignoreTimeout:i=false}={})=>{let a;let c=0;let u=false;const checkCondition=async(r,s)=>{c+=e;if(u){return}await o(e);try{const e=await t(c);if(e){u=true;clearTimeout(a);return r(e)}checkCondition(r,s)}catch(t){u=true;clearTimeout(a);s(t)}};return new Promise(((t,e)=>{checkCondition(t,e);if(i){return}a=setTimeout((()=>{if(!u){u=true;return e(new s(n))}}),r)}))}},8708:function(t){const e="https://kafka.js.org";const stripLeading=t=>e=>e.charAt(0)===t?e.substring(1):e;const r=stripLeading("/");const o=stripLeading("#");t.exports=(t,s)=>`${e}/${r(t)}${s?"#"+o(s):""}`},9491:function(t){"use strict";t.exports=require("assert")},6113:function(t){"use strict";t.exports=require("crypto")},2361:function(t){"use strict";t.exports=require("events")},1808:function(t){"use strict";t.exports=require("net")},4404:function(t){"use strict";t.exports=require("tls")},3837:function(t){"use strict";t.exports=require("util")},9796:function(t){"use strict";t.exports=require("zlib")},5557:function(t){"use strict";t.exports=JSON.parse('{"name":"kafkajs","version":"2.2.4","description":"A modern Apache Kafka client for node.js","author":"Tulio Ornelas <ornelas.tulio@gmail.com>","main":"index.js","types":"types/index.d.ts","license":"MIT","keywords":["kafka","sasl","scram"],"engines":{"node":">=14.0.0"},"repository":{"type":"git","url":"https://github.com/tulios/kafkajs.git"},"bugs":{"url":"https://github.com/tulios/kafkajs/issues"},"homepage":"https://kafka.js.org","scripts":{"jest":"export KAFKA_VERSION=${KAFKA_VERSION:=\'2.4\'} && NODE_ENV=test echo \\"KAFKA_VERSION: ${KAFKA_VERSION}\\" && KAFKAJS_DEBUG_PROTOCOL_BUFFERS=1 jest","test:local":"yarn jest --detectOpenHandles","test:debug":"NODE_ENV=test KAFKAJS_DEBUG_PROTOCOL_BUFFERS=1 node --inspect-brk $(yarn bin 2>/dev/null)/jest --detectOpenHandles --runInBand --watch","test:local:watch":"yarn test:local --watch","test":"yarn lint && JEST_JUNIT_OUTPUT_NAME=test-report.xml ./scripts/testWithKafka.sh \'yarn jest --ci --maxWorkers=4 --no-watchman --forceExit\'","lint":"find . -path ./node_modules -prune -o -path ./coverage -prune -o -path ./website -prune -o -name \'*.js\' -print0 | xargs -0 eslint","format":"find . -path ./node_modules -prune -o -path ./coverage -prune -o -path ./website -prune -o -name \'*.js\' -print0 | xargs -0 prettier --write","precommit":"lint-staged","test:group:broker":"yarn jest --forceExit --testPathPattern \'src/broker/.*\'","test:group:admin":"yarn jest --forceExit --testPathPattern \'src/admin/.*\'","test:group:producer":"yarn jest --forceExit --testPathPattern \'src/producer/.*\'","test:group:consumer":"yarn jest --forceExit --testPathPattern \'src/consumer/.*.spec.js\'","test:group:others":"yarn jest --forceExit --testPathPattern \'src/(?!(broker|admin|producer|consumer)/).*\'","test:group:oauthbearer":"OAUTHBEARER_ENABLED=1 yarn jest --forceExit src/producer/index.spec.js src/broker/__tests__/connect.spec.js src/consumer/__tests__/connection.spec.js src/broker/__tests__/disconnect.spec.js src/admin/__tests__/connection.spec.js src/broker/__tests__/reauthenticate.spec.js","test:group:broker:ci":"JEST_JUNIT_OUTPUT_NAME=test-report.xml ./scripts/testWithKafka.sh \\"yarn test:group:broker --ci --maxWorkers=4 --no-watchman\\"","test:group:admin:ci":"JEST_JUNIT_OUTPUT_NAME=test-report.xml ./scripts/testWithKafka.sh \\"yarn test:group:admin --ci --maxWorkers=4 --no-watchman\\"","test:group:producer:ci":"JEST_JUNIT_OUTPUT_NAME=test-report.xml ./scripts/testWithKafka.sh \\"yarn test:group:producer --ci --maxWorkers=4 --no-watchman\\"","test:group:consumer:ci":"JEST_JUNIT_OUTPUT_NAME=test-report.xml ./scripts/testWithKafka.sh \\"yarn test:group:consumer --ci --maxWorkers=4 --no-watchman\\"","test:group:others:ci":"JEST_JUNIT_OUTPUT_NAME=test-report.xml ./scripts/testWithKafka.sh \\"yarn test:group:others --ci --maxWorkers=4 --no-watchman\\"","test:group:oauthbearer:ci":"JEST_JUNIT_OUTPUT_NAME=test-report.xml COMPOSE_FILE=\'docker-compose.2_4_oauthbearer.yml\' ./scripts/testWithKafka.sh \\"yarn test:group:oauthbearer --ci --maxWorkers=4 --no-watchman\\"","test:types":"tsc -p types/"},"devDependencies":{"@types/jest":"^27.4.0","@types/node":"^12.0.8","@typescript-eslint/typescript-estree":"^1.10.2","eslint":"^6.8.0","eslint-config-prettier":"^6.0.0","eslint-config-standard":"^13.0.1","eslint-plugin-import":"^2.18.2","eslint-plugin-jest":"^26.1.0","eslint-plugin-node":"^11.0.0","eslint-plugin-prettier":"^3.1.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.0","execa":"^2.0.3","glob":"^7.1.4","husky":"^3.0.1","ip":"^1.1.5","jest":"^25.1.0","jest-circus":"^25.1.0","jest-extended":"^0.11.2","jest-junit":"^10.0.0","jsonwebtoken":"^9.0.0","lint-staged":"^9.2.0","mockdate":"^2.0.5","prettier":"^1.18.2","semver":"^6.2.0","typescript":"^3.8.3","uuid":"^3.3.2"},"dependencies":{},"lint-staged":{"*.js":["prettier --write","git add"]}}')}};var e={};function __nccwpck_require__(r){var o=e[r];if(o!==undefined){return o.exports}var s=e[r]={exports:{}};var n=true;try{t[r](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete e[r]}return s.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var r=__nccwpck_require__(8693);module.exports=r})();